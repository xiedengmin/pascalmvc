//////////////////////////////////////////////////
//  Oracle Data Access Components Net
//  Copyright (c) 1998-2019 Devart. All right reserved.
//  OraNetCrypt (OCI Lite)
//////////////////////////////////////////////////
{$I Odac.inc}
unit OraNetObjectsUni;
interface
{$IFDEF ODAC}
{$A+,C-,D-,G+,J-,L-,M-,O+,Y-,Z1}
{$ENDIF}
{$Q-,R-,W+}
uses
{$IFDEF UNIX}
cwstring,
{$ENDIF}
{$IFDEF MSWINDOWS}
Windows,
{$ENDIF}
Classes,Types,SysUtils,StrUtils,DateUtils,
CRTypes,CRFunctions,CLRClasses,MemUtils,
{$IFNDEF UNIDACPRO}
OraCall,OraDateTime,OraTimeZone,OraInterval,
OraNetClasses;
{$ELSE}
OraCallUni,OraDateTimeUni,OraTimeZoneUni,OraIntervalUni,
OraNetClassesUni;
{$ENDIF}
type
OCCQQQOOQ0=class;
O0Q0QQOOQ0=class;
OQ0CCOOOQ0=class;
OCQCCOOOQ0=class of OQ0CCOOOQ0;
O0CCCOOOQ0=class(O0OCO0QOQ0)
private
OOCCCOOOQ0:O0Q0QQOOQ0;
OQCCCOOOQ0:OCIDuration;
OCCCCOOOQ0:array of sb2;
O000COOOQ0:IntPtr;
function OO00COOOQ0:IntPtr;
function OQ00COOOQ0:IntPtr;
procedure OC00COOOQ0(O0O0COOOQ0:IntPtr);
function OOO0COOOQ0:sb2;
procedure OQO0COOOQ0(OCO0COOOQ0:sb2);
protected
function O0Q0COOOQ0(OOQ0COOOQ0:Integer):sb2;
procedure OCQ0COOOQ0(O0C0COOOQ0:Integer;OOC0COOOQ0:sb2);
function OCC0COOOQ0(O00OCOOOQ0:Integer):IntPtr;virtual;
function OO0OCOOOQ0(OQ0OCOOOQ0:Integer):IntPtr;virtual;
procedure OC0OCOOOQ0;virtual;
procedure OOOOCOOOQ0(OQOOCOOOQ0:OCCQQQOOQ0;OCOOCOOOQ0:Integer);virtual;
procedure OOCOCOOOQ0(OQCOCOOOQ0:OCCQQQOOQ0;OCCOCOOOQ0,O00QQOOOQ0,OO0QQOOOQ0,OQ0QQOOOQ0:IntPtr);virtual;
procedure OOCQQOOOQ0;virtual;
procedure OQCQQOOOQ0(OCCQQOOOQ0:OCCQQQOOQ0;O00CQOOOQ0:Integer);
procedure OQ0CQOOOQ0(OC0CQOOOQ0:OCCQQQOOQ0;O0OCQOOOQ0:IntPtr);
public
constructor Create(O0CCQOOOQ0:O0CCQOCOQ0;OOCCQOOOQ0:O0Q0QQOOQ0;OQCCQOOOQ0:OCIDuration);
destructor Destroy;override;
procedure OCCCQOOOQ0(O000QOOOQ0:O0CCCOOOQ0);virtual;abstract;
property OO00QOOOQ0:O0Q0QQOOQ0 read OOCCCOOOQ0;
property OQ00QOOOQ0:OCIDuration read OQCCCOOOQ0;
property OC00QOOOQ0:IntPtr read OO00COOOQ0;
property O0O0QOOOQ0:IntPtr read OQ00COOOQ0 write OC00COOOQ0;
property OOO0QOOOQ0:sb2 read OOO0COOOQ0 write OQO0COOOQ0;
property OQO0QOOOQ0[Index:Integer]:IntPtr read OCC0COOOQ0;
property OCO0QOOOQ0[Index:Integer]:sb2 read O0Q0COOOQ0 write OCQ0COOOQ0;
property O0Q0QOOOQ0[Index:Integer]:IntPtr read OO0OCOOOQ0;
end;
OOQ0QOOOQ0=class(O0CCCOOOQ0)
private
OQQ0QOOOQ0:TBytes;
protected
function OCC0COOOQ0(O00OCOOOQ0:Integer):IntPtr;override;
function OO0OCOOOQ0(OQ0OCOOOQ0:Integer):IntPtr;override;
procedure OC0OCOOOQ0;override;
procedure OOCQQOOOQ0;override;
public
procedure OCCCQOOOQ0(O000QOOOQ0:O0CCCOOOQ0);override;
property OO0OQOOOQ0:TBytes read OQQ0QOOOQ0;
property OQO0QOOOQ0[Index:Integer]:IntPtr read OCC0COOOQ0;
property OCO0QOOOQ0[Index:Integer]:sb2 read O0Q0COOOQ0 write OCQ0COOOQ0;
property O0Q0QOOOQ0[Index:Integer]:IntPtr read OO0OCOOOQ0;
end;
OQ0OQOOOQ0=class(O0CCCOOOQ0)
private
OC0OQOOOQ0:TBytes;
protected
procedure OC0OCOOOQ0;override;
public
procedure OCCCQOOOQ0(O000QOOOQ0:O0CCCOOOQ0);override;
property O0OOQOOOQ0:TBytes read OC0OQOOOQ0 write OC0OQOOOQ0;
end;
OOOOQOOOQ0=class(OQ0OQOOOQ0)
end;
OQOOQOOOQ0=class(OQ0OQOOOQ0)
private
OCOOQOOOQ0:OCCQQQOOQ0;
O0QOQOOOQ0:IntPtr;
OOQOQOOOQ0:IntPtr;
protected
procedure OQQOQOOOQ0(OCQOQOOOQ0:Integer);
public
constructor Create(O0CCQOOOQ0:O0CCQOCOQ0;OOCCQOOOQ0:O0Q0QQOOQ0;OQCCQOOOQ0:OCIDuration);
destructor Destroy;override;
procedure OOCQQOOOQ0;override;
function O0COQOOOQ0(OOCOQOOOQ0:OOO0CQQOQ0;OQCOQOOOQ0:pOCIError):O0Q0QQOOQ0;
function O00QO0OOQ0(OO0QO0OOQ0:OOO0CQQOQ0;OQ0QO0OOQ0:pOCIError):IntPtr;
procedure OQOQO0OOQ0(OCOQO0OOQ0:OOO0CQQOQ0;O0QQO0OOQ0:pOCIError;OOQQO0OOQ0:IntPtr;OQQQO0OOQ0:Integer);
procedure OQCQO0OOQ0(OCCQO0OOQ0:OCITypeCode;const O00CO0OOQ0:TBytes;OO0CO0OOQ0:Integer);overload;
procedure OQCQO0OOQ0(OCCQO0OOQ0:OCITypeCode;OQ0CO0OOQ0:O0Q0QQOOQ0;OO0CO0OOQ0:Integer);overload;
property OC0CO0OOQ0:OCCQQQOOQ0 read OCOOQOOOQ0;
property O0OCO0OOQ0:IntPtr read O0QOQOOOQ0;
property OOOCO0OOQ0:IntPtr read OOQOQOOOQ0;
end;
OQOCO0OOQ0=class(O0CCCOOOQ0)
private
OCOCO0OOQ0:TBytes;
O0QCO0OOQ0:OOQ0QOOOQ0;
protected
procedure OC0OCOOOQ0;override;
procedure OOCQQOOOQ0;override;
public
procedure OCCCQOOOQ0(O000QOOOQ0:O0CCCOOOQ0);override;
function OOQCO0OOQ0(OQQCO0OOQ0:OOO0CQQOQ0;OCQCO0OOQ0:pOCIError):OOQ0QOOOQ0;
property O0O0O0OOQ0:TBytes read OCOCO0OOQ0 write OCOCO0OOQ0;
end;
OOO0O0OOQ0=class(O0CCCOOOQ0)
protected
procedure OOOOCOOOQ0(OQOOCOOOQ0:OCCQQQOOQ0;OCOOCOOOQ0:Integer);override;
function OQO0O0OOQ0:Integer;virtual;abstract;
public
procedure OCCCQOOOQ0(O000QOOOQ0:O0CCCOOOQ0);override;
procedure OOCOCOOOQ0(OQCOCOOOQ0:OCCQQQOOQ0;OCCOCOOOQ0,O00QQOOOQ0,OO0QQOOOQ0,OQ0QQOOOQ0:IntPtr);override;
function OCQ0O0OOQ0:boolean;virtual;abstract;
procedure O0C0O0OOQ0(OOC0O0OOQ0:Integer);virtual;abstract;
property OQC0O0OOQ0:integer read OQO0O0OOQ0;
end;
OCC0O0OOQ0=class;
OOCOO0OOQ0=record
OQCOO0OOQ0:sb2;
OCCOO0OOQ0:TBytes;
end;
OCC0O0OOQ0=class(OOO0O0OOQ0)
private
O00OO0OOQ0:array of OOCOO0OOQ0;
OO0OO0OOQ0:Integer;
protected
function OCC0COOOQ0(O00OCOOOQ0:Integer):IntPtr;override;
function OO0OCOOOQ0(OQ0OCOOOQ0:Integer):IntPtr;override;
procedure OC0OCOOOQ0;override;
procedure OC0OO0OOQ0(var O0OOO0OOQ0:OOCOO0OOQ0);
procedure OOOOO0OOQ0(var OQOOO0OOQ0:OOCOO0OOQ0);
function OQO0O0OOQ0:Integer;override;
public
function OCQ0O0OOQ0:boolean;override;
procedure O0C0O0OOQ0(OOC0O0OOQ0:Integer);override;
procedure OOCQQOOOQ0;override;
procedure OQQOO0OOQ0(OCQOO0OOQ0:Integer);
end;
O00Q00OOQ0=^OO0Q00OOQ0;
OO0Q00OOQ0=record
OQ0Q00OOQ0:O00Q00OOQ0;
OC0Q00OOQ0:sb2;
O0OQ00OOQ0:TBytes;
end;
OOOQ00OOQ0=class(OOO0O0OOQ0)
private
OQOQ00OOQ0:O00Q00OOQ0;
protected
function OCC0COOOQ0(O00OCOOOQ0:Integer):IntPtr;override;
function OO0OCOOOQ0(OQ0OCOOOQ0:Integer):IntPtr;override;
procedure OC0OCOOOQ0;override;
procedure OOQQ00OOQ0(O0OOO0OOQ0:O00Q00OOQ0);
procedure OQQQ00OOQ0(OQOOO0OOQ0:O00Q00OOQ0);
function OCQQ00OOQ0(O0CQ00OOQ0:Integer):O00Q00OOQ0;
function OQO0O0OOQ0:Integer;override;
public
function OCQ0O0OOQ0:boolean;override;
procedure OO0C00OOQ0(OQ0C00OOQ0:Integer);
procedure O0C0O0OOQ0(OOC0O0OOQ0:Integer);override;
procedure OOCQQOOOQ0;override;
end;
OCOC00OOQ0=^O0QC00OOQ0;
O0QC00OOQ0=record
OOQC00OOQ0:O0Q0QQOOQ0;
OQQC00OOQ0:OCIDuration;
OCQC00OOQ0:boolean;
O0CC00OOQ0:Integer;
OOCC00OOQ0:IntPtr;
OQCC00OOQ0:PSmallInt;
OCCC00OOQ0:OQQCOQCOQ0;
O00000OOQ0:IntPtr;
end;
OO0000OOQ0=class
private
OQ0000OOQ0:TBytes;
OC0000OOQ0:integer;
public
constructor Create(const OOO000OOQ0:TBytes);
function OQO000OOQ0:Byte;
function OCO000OOQ0:Byte;
function O0Q000OOQ0:SmallInt;
function OOQ000OOQ0:Integer;
function OQQ000OOQ0(OCQ000OOQ0:integer):TBytes;
procedure O0C000OOQ0(OOC000OOQ0:IntPtr;OQC000OOQ0:integer);
property OCC000OOQ0:Integer read OC0000OOQ0 write OC0000OOQ0;
end;
O00O00OOQ0=class
private
OO0O00OOQ0:TBytes;
OQ0O00OOQ0:integer;
OC0O00OOQ0:integer;
function O0OO00OOQ0:TBytes;
public
constructor Create;
procedure OQOO00OOQ0(OCOO00OOQ0:Byte);
procedure O0QO00OOQ0(OOQO00OOQ0:SmallInt);
procedure OQQO00OOQ0(OCQO00OOQ0:Integer);
procedure O0CO00OOQ0(const OOCO00OOQ0:TBytes);
procedure OCCO00OOQ0(O00QC0OOQ0:IntPtr;OO0QC0OOQ0:Integer);
function OC0QC0OOQ0(O0OQC0OOQ0,OQC000OOQ0:Integer):TBytes;
property OOOQC0OOQ0:Integer read OQ0O00OOQ0 write OQ0O00OOQ0;
property OQOQC0OOQ0:TBytes read O0OO00OOQ0;
property OCOQC0OOQ0:Integer read OC0O00OOQ0;
end;
OCCQQQOOQ0=class(O0COQOCOQ0)
private
O00CQQOOQ0:integer;
OO0CQQOOQ0:Integer;
OQ0CQQOOQ0:OCITypeCode;
OC0CQQOOQ0:Integer;
O0OCQQOOQ0:boolean;
function OOOCQQOOQ0:O0CQQ0COQ0;
function OCOCQQOOQ0:OOO0CQQOQ0;
function OQQCQQOOQ0:O0Q0QQOOQ0;{$IFDEF USE_INLINE}inline;{$ENDIF}
procedure OCQCQQOOQ0(const O0CCQQOOQ0:O0Q0QQOOQ0);{$IFDEF USE_INLINE}inline;{$ENDIF}
public
function O0C0QOCOQ0(OOCCQQOOQ0:IntPtr;OQCCQQOOQ0:pub4;OCCCQQOOQ0:ub4;O000QQOOQ0:pOCIError):sword;override;
property OQ00QQOOQ0:O0CQQ0COQ0 read OOOCQQOOQ0;
property OC00QQOOQ0:OOO0CQQOQ0 read OCOCQQOOQ0;
property O0O0QQOOQ0:Integer read OO0CQQOOQ0 write OO0CQQOOQ0;
property OOO0QQOOQ0:OCITypeCode read OQ0CQQOOQ0 write OQ0CQQOOQ0;
property O00OO0COQ0:O0Q0QQOOQ0 read OQQCQQOOQ0 write OCQCQQOOQ0;
property OQO0QQOOQ0:Integer read OC0CQQOOQ0 write OC0CQQOOQ0;
property OCO0QQOOQ0:boolean read O0OCQQOOQ0 write O0OCQQOOQ0;
end;
O0Q0QQOOQ0=class(O0CCQOCOQ0)
private
OOQ0QQOOQ0:string;
OQQ0QQOOQ0:string;
OCQ0QQOOQ0:string;
O0C0QQOOQ0:string;
OOC0QQOOQ0:TBytes;
OQC0QQOOQ0:integer;
OCC0QQOOQ0:integer;
O00OQQOOQ0:integer;
OO0OQQOOQ0:TList;
OQ0OQQOOQ0:TCRObjectList;
OC0OQQOOQ0:OCCQQQOOQ0;
O0OOQQOOQ0:cardinal;
function OOOOQQOOQ0:O0CQQ0COQ0;
function OQOOQQOOQ0:OOO0CQQOQ0;
procedure OCOOQQOOQ0(const O0QOQQOOQ0:TBytes);
procedure O00QOOOOQ0(OO0QOOOOQ0:OO0000OOQ0;OQ0QOOOOQ0:TList);
procedure O0OQOOOOQ0(const OOOQOOOOQ0:TBytes);
procedure OCOQOOOOQ0(O0QQOOOOQ0:OO0000OOQ0);
procedure O0CQOOOOQ0(OOCQOOOOQ0:pOCIError);
procedure OC00OOOOQ0(O0O0OOOOQ0:pOCIError);
procedure OOQOOOOOQ0(OQQOOOOOQ0:pOCIError);
function O0QC0OOOQ0(OOQC0OOOQ0:OO0000OOQ0;OQQC0OOOQ0:boolean):OCCQQQOOQ0;
function OOCC0OOOQ0:OCQCCOOOQ0;
public
constructor Create(OQCC0OOOQ0:OOO0CQQOQ0;const OCCC0OOOQ0,O0000OOOQ0:string);overload;
constructor Create(OQCC0OOOQ0:OOO0CQQOQ0;const OO000OOOQ0:TBytes);overload;
destructor Destroy;override;
procedure OQ000OOOQ0(OC000OOOQ0:pOCIError);
procedure OOOO0OOOQ0(OQOO0OOOQ0:pOCIError);
function O0C0QOCOQ0(OOCCQQOOQ0:IntPtr;OQCCQQOOQ0:pub4;OCCCQQOOQ0:ub4;O000QQOOQ0:pOCIError):sword;override;
function OQOOQOCOQ0(OCOO0OOOQ0:pOCIError;var O0QO0OOOQ0:pOCIParam;OOQO0OOOQ0:ub4):sword;override;
function OQQO0OOOQ0(const OCQO0OOOQ0:string):Integer;
function OQCO0OOOQ0(OCCO0OOOQ0:OCIDuration):O0CCCOOOQ0;
function O00QCOOOQ0(OO0QCOOOQ0:O0CCCOOOQ0):TBytes;
procedure OC0QCOOOQ0(const O0OQCOOOQ0:Tbytes;OOOQCOOOQ0:O0CCCOOOQ0);
property OCOQCOOOQ0:O0CQQ0COQ0 read OOOOQQOOQ0;
property O0QQCOOOQ0:OOO0CQQOQ0 read OQOOQQOOQ0;
property OOQQCOOOQ0:string read OOQ0QQOOQ0;
property OQQQCOOOQ0:string read OQQ0QQOOQ0;
property OCQQCOOOQ0:string read OCQ0QQOOQ0;
property O0CQCOOOQ0:string read O0C0QQOOQ0;
property OOCQCOOOQ0:TBytes read OOC0QQOOQ0;
property OQCQCOOOQ0:integer read OQC0QQOOQ0;
property OCCQCOOOQ0:integer read OCC0QQOOQ0;
property O00CCOOOQ0:OCCQQQOOQ0 read OC0OQQOOQ0;
property OO0CCOOOQ0:cardinal read O0OOQQOOQ0;
end;
OQ0CCOOOQ0=class
public
class procedure OC0CCOOOQ0(O0OCCOOOQ0:O00O00OOQ0;OOOCCOOOQ0:O0Q0QQOOQ0;OQOCCOOOQ0:O0CCCOOOQ0);virtual;
class procedure OCOCCOOOQ0(O0QCCOOOQ0:OO0000OOQ0;OOQCCOOOQ0:O0Q0QQOOQ0;OQQCCOOOQ0:O0CCCOOOQ0);virtual;
end;
O0QQC0OOQ0=class(OQ0CCOOOQ0)
public
class function OOQQC0OOQ0(OQQQC0OOQ0:O0Q0QQOOQ0):Boolean;
class procedure OC0CCOOOQ0(O0OCCOOOQ0:O00O00OOQ0;OOOCCOOOQ0:O0Q0QQOOQ0;OQOCCOOOQ0:O0CCCOOOQ0);override;
class procedure OCOCCOOOQ0(O0QCCOOOQ0:OO0000OOQ0;OOQCCOOOQ0:O0Q0QQOOQ0;OQQCCOOOQ0:O0CCCOOOQ0);override;
class procedure OOCQC0OOQ0(OQCQC0OOQ0:O00O00OOQ0;OCCQC0OOQ0:O0Q0QQOOQ0);
class function OQ0CC0OOQ0(OC0CC0OOQ0:OO0000OOQ0;O0OCC0OOQ0:O0Q0QQOOQ0):O0Q0QQOOQ0;
class procedure OOQCC0OOQ0(OQQCC0OOQ0:O00O00OOQ0;OCQCC0OOQ0:O0Q0QQOOQ0;O0CCC0OOQ0:OOQ0QOOOQ0;OOCCC0OOQ0:integer);
class procedure OO00C0OOQ0(OQ00C0OOQ0:OO0000OOQ0;OC00C0OOQ0:O0Q0QQOOQ0;O0O0C0OOQ0:OOQ0QOOOQ0);
class procedure OOQ0C0OOQ0(OQQ0C0OOQ0:O00O00OOQ0;OCQ0C0OOQ0:O0Q0QQOOQ0;O0C0C0OOQ0:boolean);overload;
class procedure OOQ0C0OOQ0(OQQ0C0OOQ0:O00O00OOQ0;OCQ0C0OOQ0:O0Q0QQOOQ0;OOC0C0OOQ0:Integer;O0C0C0OOQ0:boolean);overload;
class procedure OQC0C0OOQ0(OCC0C0OOQ0:O00O00OOQ0;O00OC0OOQ0:Integer);
class function OO0OC0OOQ0(OQ0OC0OOQ0:OO0000OOQ0):Integer;
class procedure O0OOC0OOQ0(OOOOC0OOQ0:O00O00OOQ0;OQOOC0OOQ0:integer;OCOOC0OOQ0:integer);
class function OOQOC0OOQ0(OQQOC0OOQ0:OO0000OOQ0):TBytes;
class procedure O0COC0OOQ0(OOCOC0OOQ0:O00O00OOQ0;OQCOC0OOQ0:O0Q0QQOOQ0;OCCOC0OOQ0:OCCQQQOOQ0;O00QQ0OOQ0:IntPtr);
class procedure OC0QQ0OOQ0(O0OQQ0OOQ0:OO0000OOQ0;OOOQQ0OOQ0:O0Q0QQOOQ0;OQOQQ0OOQ0:OCCQQQOOQ0;OCOQQ0OOQ0,O0QQQ0OOQ0:IntPtr);
class procedure OCQQQ0OOQ0(O0CQQ0OOQ0:O00O00OOQ0;OOCQQ0OOQ0:IntPtr;OQCQQ0OOQ0:OCCQQQOOQ0);
class procedure O0QCQ0OOQ0(OOQCQ0OOQ0:OO0000OOQ0;OQQCQ0OOQ0:IntPtr;OCQCQ0OOQ0:OCCQQQOOQ0;var O0CCQ0OOQ0:TBytes);
end;
OOO0Q0OOQ0=class(O0QQC0OOQ0)
public
class procedure OQO0Q0OOQ0(OCO0Q0OOQ0:O00O00OOQ0;O0Q0Q0OOQ0:Integer);
class function OOQ0Q0OOQ0(OQQ0Q0OOQ0:OO0000OOQ0):Integer;
end;
OCQ0Q0OOQ0=class(OOO0Q0OOQ0)
class procedure OC0CCOOOQ0(O0OCCOOOQ0:O00O00OOQ0;OOOCCOOOQ0:O0Q0QQOOQ0;OQOCCOOOQ0:O0CCCOOOQ0);override;
class procedure OCOCCOOOQ0(O0QCCOOOQ0:OO0000OOQ0;OOQCCOOOQ0:O0Q0QQOOQ0;OQQCCOOOQ0:O0CCCOOOQ0);override;
end;
OO0OQ0OOQ0=class(OOO0Q0OOQ0)
public
class procedure OQ0OQ0OOQ0(OC0OQ0OOQ0:O00O00OOQ0;O0OOQ0OOQ0:OCITypeCode;OOOOQ0OOQ0:O0Q0QQOOQ0);
class procedure OCOOQ0OOQ0(O0QOQ0OOQ0:OO0000OOQ0;out OOQOQ0OOQ0:OCITypeCode;out OQQOQ0OOQ0:TBytes);
class procedure OC0CCOOOQ0(O0OCCOOOQ0:O00O00OOQ0;OOOCCOOOQ0:O0Q0QQOOQ0;OQOCCOOOQ0:O0CCCOOOQ0);override;
class procedure OCOCCOOOQ0(O0QCCOOOQ0:OO0000OOQ0;OOQCCOOOQ0:O0Q0QQOOQ0;OQQCCOOOQ0:O0CCCOOOQ0);override;
end;
O0OQOC0OQ0=class(O0QQC0OOQ0)
public
class procedure OC0CCOOOQ0(O0OCCOOOQ0:O00O00OOQ0;OOOCCOOOQ0:O0Q0QQOOQ0;OQOCCOOOQ0:O0CCCOOOQ0);override;
class procedure OCOCCOOOQ0(O0QCCOOOQ0:OO0000OOQ0;OOQCCOOOQ0:O0Q0QQOOQ0;OQQCCOOOQ0:O0CCCOOOQ0);override;
class function OOQQOC0OQ0(OQQQOC0OQ0:OO0000OOQ0):boolean;
class procedure OOCQOC0OQ0(OQCQOC0OQ0:OO0000OOQ0;OCCQOC0OQ0:O0Q0QQOOQ0;O00COC0OQ0:OOO0O0OOQ0);
class procedure OC0COC0OQ0(O0OCOC0OQ0:O00O00OOQ0;OOOCOC0OQ0:Integer);overload;
class procedure OC0COC0OQ0(O0OCOC0OQ0:O00O00OOQ0;OQOCOC0OQ0,OOOCOC0OQ0:Integer);overload;
end;
OCOCOC0OQ0=class(O0OCO0QOQ0)
private
O0QCOC0OQ0:OOO0CQQOQ0;
OOQCOC0OQ0:OOCCQ0QOQ0;
OQQCOC0OQ0:ub4;
OCQCOC0OQ0:ub4;
public
destructor Destroy;override;
procedure O0CCOC0OQ0;
class function OOCCOC0OQ0(OQCCOC0OQ0:OOO0CQQOQ0;const OCCCOC0OQ0:string;O000OC0OQ0:OOOOQOOOQ0;OO00OC0OQ0:pOCIError):sword;
class function OCO0OC0OQ0(O0Q0OC0OQ0:OOO0CQQOQ0;OOQ0OC0OQ0:OOCCQ0QOQ0;OQQ0OC0OQ0:OOOOQOOOQ0;OCQ0OC0OQ0:pOCIError):sword;
class function O00OOC0OQ0(OO0OOC0OQ0:OOO0CQQOQ0;OQ0OOC0OQ0:OOOOQOOOQ0;out OC0OOC0OQ0:string;O0OOOC0OQ0:pOCIError):sword;
class function OQQOOC0OQ0(OCQOOC0OQ0:OOO0CQQOQ0;O0COOC0OQ0:OOOOQOOOQ0;out OOCOOC0OQ0:OOCCQ0QOQ0;OQCOOC0OQ0:pOCIError):sword;
property OC0Q0C0OQ0:OOO0CQQOQ0 read O0QCOC0OQ0 write O0QCOC0OQ0;
property O0OQ0C0OQ0:OOCCQ0QOQ0 read OOQCOC0OQ0 write OOQCOC0OQ0;
property OOOQ0C0OQ0:ub4 read OQQCOC0OQ0 write OQQCOC0OQ0;
property OQOQ0C0OQ0:ub4 read OCQCOC0OQ0 write OCQCOC0OQ0;
end;
implementation
uses
{$IFNDEF UNIDACPRO}
OraNet;
{$ELSE}
OraNetUni;
{$ENDIF}
const
OCOQ0C0OQ0:Byte=255;
O0QQ0C0OQ0:Byte=254;
OOQQ0C0OQ0:Byte=253;
OQQQ0C0OQ0:Byte=252;
OCQQ0C0OQ0:Byte=245;
O0CQ0C0OQ0:Byte=128;
OOCQ0C0OQ0:Byte=16;
OQCQ0C0OQ0:Byte=8;
OCCQ0C0OQ0:Byte=4;
O00C0C0OQ0:Byte=1;
OO0C0C0OQ0:Byte=1;
constructor O0CCCOOOQ0.Create(O0CCQOOOQ0:O0CCQOCOQ0;OOCCQOOOQ0:O0Q0QQOOQ0;OQCCQOOOQ0:OCIDuration);
begin
inherited Create(O0CCQOOOQ0);
OOCCCOOOQ0:=OOCCQOOOQ0;
OQCCCOOOQ0:=OQCCQOOOQ0;
OC0OCOOOQ0;
end;
destructor O0CCCOOOQ0.Destroy;
begin
OOCQQOOOQ0;
inherited;
end;
function O0CCCOOOQ0.OO00COOOQ0:IntPtr;
begin
Result:=@OCCCCOOOQ0[0];
end;
function O0CCCOOOQ0.OQ00COOOQ0:IntPtr;
begin
Result:=O000COOOQ0;
end;
procedure O0CCCOOOQ0.OC00COOOQ0(O0O0COOOQ0:IntPtr);
begin
O000COOOQ0:=O0O0COOOQ0;
end;
function O0CCCOOOQ0.OOO0COOOQ0:sb2;
begin
Result:=sb2(O000COOOQ0^);
end;
procedure O0CCCOOOQ0.OQO0COOOQ0(OCO0COOOQ0:sb2);
begin
sb2(O000COOOQ0^):=OCO0COOOQ0;
end;
function O0CCCOOOQ0.O0Q0COOOQ0(OOQ0COOOQ0:Integer):sb2;
var
OQQ0COOOQ0:IntPtr;
begin
OQQ0COOOQ0:=OCC0COOOQ0(OOQ0COOOQ0);
if OQQ0COOOQ0<>nil then
Result:=sb2(OQQ0COOOQ0^)
else begin
O00QCQOOQ0(17003);
Result:=OCI_IND_NULL;
end;
end;
procedure O0CCCOOOQ0.OCQ0COOOQ0(O0C0COOOQ0:Integer;OOC0COOOQ0:sb2);
var
OQC0COOOQ0:IntPtr;
begin
OQC0COOOQ0:=OCC0COOOQ0(O0C0COOOQ0);
if OQC0COOOQ0<>nil then
sb2(OQC0COOOQ0^):=OOC0COOOQ0
else
O00QCQOOQ0(17003);
end;
function O0CCCOOOQ0.OCC0COOOQ0(O00OCOOOQ0:Integer):IntPtr;
begin
Result:=nil;
end;
function O0CCCOOOQ0.OO0OCOOOQ0(OQ0OCOOOQ0:Integer):IntPtr;
begin
Result:=nil;
end;
procedure O0CCCOOOQ0.OC0OCOOOQ0;
var
O0OOCOOOQ0:Integer;
begin
O000COOOQ0:=@OCCCCOOOQ0[0];
for O0OOCOOOQ0:=0 to Length(OCCCCOOOQ0)-1 do
OCCCCOOOQ0[O0OOCOOOQ0]:=OCI_IND_NULL;
end;
procedure O0CCCOOOQ0.OOOOCOOOQ0(OQOOCOOOQ0:OCCQQQOOQ0;OCOOCOOOQ0:Integer);
var
O0QOCOOOQ0:IntPtr;
OOQOCOOOQ0:OOQ0QOOOQ0;
OQQOCOOOQ0:OQOCO0OOQ0;
OCQOCOOOQ0:OQ0OQOOOQ0;
O0COCOOOQ0:OOO0O0OOQ0;
begin
O0QOCOOOQ0:=O0Q0QOOOQ0[OCOOCOOOQ0];
if OQOOCOOOQ0.O00OO0COQ0=nil then
case OQOOCOOOQ0.OOO0QQOOQ0 of
OCI_TYPECODE_TIMESTAMP:
Marshal.WriteIntPtr(O0QOCOOOQ0,O00O0QOOQ0.Create(OOCCQOCOQ0,OCI_DTYPE_TIMESTAMP).OQQOQOCOQ0);
OCI_TYPECODE_TIMESTAMP_TZ:
Marshal.WriteIntPtr(O0QOCOOOQ0,O00O0QOOQ0.Create(OOCCQOCOQ0,OCI_DTYPE_TIMESTAMP_TZ).OQQOQOCOQ0);
OCI_TYPECODE_TIMESTAMP_LTZ:
Marshal.WriteIntPtr(O0QOCOOOQ0,O00O0QOOQ0.Create(OOCCQOCOQ0,OCI_DTYPE_TIMESTAMP_LTZ).OQQOQOCOQ0);
OCI_TYPECODE_INTERVAL_YM:
Marshal.WriteIntPtr(O0QOCOOOQ0,O0OO0QOOQ0.Create(OOCCQOCOQ0,OCI_DTYPE_INTERVAL_YM).OQQOQOCOQ0);
OCI_TYPECODE_INTERVAL_DS:
Marshal.WriteIntPtr(O0QOCOOOQ0,O0OO0QOOQ0.Create(OOCCQOCOQ0,OCI_DTYPE_INTERVAL_DS).OQQOQOCOQ0);
end
else if(OQOOCOOOQ0.OQ0CQQOOQ0=OCI_TYPECODE_OBJECT)and(OQOOCOOOQ0.O000O0COQ0=SQLT_REF)then begin
OOQOCOOOQ0:=OOQ0QOOOQ0.Create(OOCCQOCOQ0,OQOOCOOOQ0.O00OO0COQ0,OCI_DURATION_SESSION);
OOQOCOOOQ0.O0O0QOOOQ0:=OQO0QOOOQ0[OCOOCOOOQ0];
Marshal.WriteIntPtr(O0QOCOOOQ0,OOQOCOOOQ0.OQQOQOCOQ0);
end
else if OQOOCOOOQ0.OQ0CQQOOQ0=OCI_TYPECODE_REF then begin
OQQOCOOOQ0:=OQOCO0OOQ0.Create(OOCCQOCOQ0,OQOOCOOOQ0.O00OO0COQ0,OCI_DURATION_SESSION);
OQQOCOOOQ0.O0O0QOOOQ0:=OQO0QOOOQ0[OCOOCOOOQ0];
Marshal.WriteIntPtr(O0QOCOOOQ0,OQQOCOOOQ0.OQQOQOCOQ0);
end
else if OQOOCOOOQ0.O00OO0COQ0.OCCQCOOOQ0=OCI_TYPECODE_OPAQUE then begin
if(OQOOCOOOQ0.O00OO0COQ0.OQQQCOOOQ0='ANYDATA')and(OQOOCOOOQ0.O00OO0COQ0.OOQ0QQOOQ0='SYS')then
OCQOCOOOQ0:=OQOOQOOOQ0.Create(OOCCQOCOQ0,OQOOCOOOQ0.O00OO0COQ0,OCI_DURATION_SESSION)
else
OCQOCOOOQ0:=OOOOQOOOQ0.Create(OOCCQOCOQ0,OQOOCOOOQ0.O00OO0COQ0,OCI_DURATION_SESSION);
OCQOCOOOQ0.O0O0QOOOQ0:=OQO0QOOOQ0[OCOOCOOOQ0];
Marshal.WriteIntPtr(O0QOCOOOQ0,OCQOCOOOQ0.OO00QOCOQ0);
end
else if OQOOCOOOQ0.O00OO0COQ0.OCCQCOOOQ0=OCI_TYPECODE_NAMEDCOLLECTION then
if OQOOCOOOQ0.O00OO0COQ0.O00CCOOOQ0.O000O0COQ0=OCI_TYPECODE_VARRAY then begin
O0COCOOOQ0:=OCC0O0OOQ0.Create(OOCCQOCOQ0,OQOOCOOOQ0.O00OO0COQ0,OCI_DURATION_SESSION);
O0COCOOOQ0.O0O0QOOOQ0:=OQO0QOOOQ0[OCOOCOOOQ0];
Marshal.WriteIntPtr(O0QOCOOOQ0,O0COCOOOQ0.OQQOQOCOQ0);
end
else if OQOOCOOOQ0.O00OO0COQ0.O00CCOOOQ0.O000O0COQ0=OCI_TYPECODE_TABLE then begin
O0COCOOOQ0:=OOOQ00OOQ0.Create(OOCCQOCOQ0,OQOOCOOOQ0.O00OO0COQ0,OCI_DURATION_SESSION);
O0COCOOOQ0.O0O0QOOOQ0:=OQO0QOOOQ0[OCOOCOOOQ0];
Marshal.WriteIntPtr(O0QOCOOOQ0,O0COCOOOQ0.OQQOQOCOQ0);
end;
end;
procedure O0CCCOOOQ0.OOCOCOOOQ0(OQCOCOOOQ0:OCCQQQOOQ0;OCCOCOOOQ0,O00QQOOOQ0,OO0QQOOOQ0,OQ0QQOOOQ0:IntPtr);
var
OC0QQOOOQ0,O0OQQOOOQ0:OCQOC0QOQ0;
OOOQQOOOQ0,OQOQQOOOQ0:O00O0QOOQ0;
OCOQQOOOQ0,O0QQQOOOQ0:O0OO0QOOQ0;
OOQQQOOOQ0,OQQQQOOOQ0:OQOCO0OOQ0;
OCQQQOOOQ0,O0CQQOOOQ0:OOO0O0OOQ0;
begin
if OQCOCOOOQ0.O00OO0COQ0=nil then begin
sb2(OQ0QQOOOQ0^):=sb2(O00QQOOOQ0^);
case OQCOCOOOQ0.OQ0CQQOOQ0 of
OCI_TYPECODE_CHAR,
OCI_TYPECODE_NCHAR,
OCI_TYPECODE_VARCHAR,
OCI_TYPECODE_VARCHAR2,
OCI_TYPECODE_NVARCHAR2:begin
OC0QQOOOQ0:=OCQOC0QOQ0(GetGCHandleTarget(Marshal.ReadIntPtr(OCCOCOOOQ0)));
O0OQQOOOQ0:=OCQOC0QOQ0(GetGCHandleTarget(Marshal.ReadIntPtr(OO0QQOOOQ0)));
if OC0QQOOOQ0<>nil then begin
if O0OQQOOOQ0=nil then begin
O0OQQOOOQ0:=OCQOC0QOQ0.Create(OQCOCOOOQ0.OQ00QQOOQ0);
Marshal.WriteIntPtr(OO0QQOOOQ0,O0OQQOOOQ0.OQQOQOCOQ0);
end;
O0OQQOOOQ0.OCCQQ0QOQ0(OC0QQOOOQ0);
end
else if O0OQQOOOQ0<>nil then begin
O0OQQOOOQ0.OCQ0QOCOQ0;
Marshal.WriteIntPtr(OO0QQOOOQ0,nil);
end;
end;
OCI_TYPECODE_TIMESTAMP:begin
OOOQQOOOQ0:=O00O0QOOQ0(GetGCHandleTarget(Marshal.ReadIntPtr(OCCOCOOOQ0)));
OQOQQOOOQ0:=O00O0QOOQ0(GetGCHandleTarget(Marshal.ReadIntPtr(OO0QQOOOQ0)));
OQOQQOOOQ0.OC0O0QOOQ0.Assign(OOOQQOOOQ0.OC0O0QOOQ0);
end;
OCI_TYPECODE_TIMESTAMP_TZ:begin
OOOQQOOOQ0:=O00O0QOOQ0(GetGCHandleTarget(Marshal.ReadIntPtr(OCCOCOOOQ0)));
OQOQQOOOQ0:=O00O0QOOQ0(GetGCHandleTarget(Marshal.ReadIntPtr(OO0QQOOOQ0)));
OQOQQOOOQ0.OC0O0QOOQ0.Assign(OOOQQOOOQ0.OC0O0QOOQ0);
end;
OCI_TYPECODE_TIMESTAMP_LTZ:begin
OOOQQOOOQ0:=O00O0QOOQ0(GetGCHandleTarget(Marshal.ReadIntPtr(OCCOCOOOQ0)));
OQOQQOOOQ0:=O00O0QOOQ0(GetGCHandleTarget(Marshal.ReadIntPtr(OO0QQOOOQ0)));
OQOQQOOOQ0.OC0O0QOOQ0.Assign(OOOQQOOOQ0.OC0O0QOOQ0);
end;
OCI_TYPECODE_INTERVAL_YM:begin
OCOQQOOOQ0:=O0OO0QOOQ0(GetGCHandleTarget(Marshal.ReadIntPtr(OCCOCOOOQ0)));
O0QQQOOOQ0:=O0OO0QOOQ0(GetGCHandleTarget(Marshal.ReadIntPtr(OO0QQOOOQ0)));
O0QQQOOOQ0.OQOO0QOOQ0.Assign(OCOQQOOOQ0.OQOO0QOOQ0);
end;
OCI_TYPECODE_INTERVAL_DS:begin
OCOQQOOOQ0:=O0OO0QOOQ0(GetGCHandleTarget(Marshal.ReadIntPtr(OCCOCOOOQ0)));
O0QQQOOOQ0:=O0OO0QOOQ0(GetGCHandleTarget(Marshal.ReadIntPtr(OO0QQOOOQ0)));
O0QQQOOOQ0.OQOO0QOOQ0.Assign(OCOQQOOOQ0.OQOO0QOOQ0);
end;
OCI_TYPECODE_BLOB,
OCI_TYPECODE_CLOB,
OCI_TYPECODE_NCLOB,
OCI_TYPECODE_BFILE,
OCI_TYPECODE_CFILE:
Marshal.WriteIntPtr(OO0QQOOOQ0,Marshal.ReadIntPtr(OCCOCOOOQ0))
else
Move(OCCOCOOOQ0^,OO0QQOOOQ0^,OQCOCOOOQ0.OO0CQQOOQ0);
end;
end
else if(OQCOCOOOQ0.O00OO0COQ0<>nil)and(OQCOCOOOQ0.O00OO0COQ0.OCCQCOOOQ0 in[OCI_TYPECODE_OBJECT,OCI_TYPECODE_OPAQUE])then begin
sb2(OQ0QQOOOQ0^):=sb2(O00QQOOOQ0^);
if OQCOCOOOQ0.O000O0COQ0=SQLT_REF then begin
OOQQQOOOQ0:=OQOCO0OOQ0(GetGCHandleTarget(Marshal.ReadIntPtr(OCCOCOOOQ0)));
OQQQQOOOQ0:=OQOCO0OOQ0(GetGCHandleTarget(Marshal.ReadIntPtr(OO0QQOOOQ0)));
OQQQQOOOQ0.OCCCQOOOQ0(OOQQQOOOQ0);
end;
end
else if OQCOCOOOQ0.O00OO0COQ0.OCCQCOOOQ0 in[OCI_TYPECODE_NAMEDCOLLECTION]then begin
OCQQQOOOQ0:=OOO0O0OOQ0(GetGCHandleTarget(Marshal.ReadIntPtr(OCCOCOOOQ0)));
O0CQQOOOQ0:=OOO0O0OOQ0(GetGCHandleTarget(Marshal.ReadIntPtr(OO0QQOOOQ0)));
O0CQQOOOQ0.OCCCQOOOQ0(OCQQQOOOQ0);
end
end;
procedure O0CCCOOOQ0.OOCQQOOOQ0;
begin
end;
procedure O0CCCOOOQ0.OQCQQOOOQ0(OCCQQOOOQ0:OCCQQQOOQ0;O00CQOOOQ0:Integer);
var
OO0CQOOOQ0:IntPtr;
begin
OO0CQOOOQ0:=O0Q0QOOOQ0[O00CQOOOQ0];
OQ0CQOOOQ0(OCCQQOOOQ0,OO0CQOOOQ0);
end;
procedure O0CCCOOOQ0.OQ0CQOOOQ0(OC0CQOOOQ0:OCCQQQOOQ0;O0OCQOOOQ0:IntPtr);
var
OOOCQOOOQ0:IntPtr;
OQOCQOOOQ0:O0CCQOCOQ0;
OCOCQOOOQ0:OOCCQ0QOQ0;
O0QCQOOOQ0:OOQ0QOOOQ0;
OOQCQOOOQ0:OQ0OQOOOQ0;
OQQCQOOOQ0:OQOCO0OOQ0;
OCQCQOOOQ0:OOO0O0OOQ0;
begin
case OC0CQOOOQ0.OQ0CQQOOQ0 of
OCI_TYPECODE_CHAR,
OCI_TYPECODE_NCHAR,
OCI_TYPECODE_VARCHAR,
OCI_TYPECODE_VARCHAR2,
OCI_TYPECODE_NVARCHAR2:begin
OOOCQOOOQ0:=Marshal.ReadIntPtr(O0OCQOOOQ0);
OQOCQOOOQ0:=O0CCQOCOQ0(GetGCHandleTarget(OOOCQOOOQ0));
if OQOCQOOOQ0<>nil then
OQOCQOOOQ0.OCQ0QOCOQ0;
end;
OCI_TYPECODE_TIMESTAMP,
OCI_TYPECODE_TIMESTAMP_TZ,
OCI_TYPECODE_TIMESTAMP_LTZ,
OCI_TYPECODE_INTERVAL_YM,
OCI_TYPECODE_INTERVAL_DS:begin
OOOCQOOOQ0:=Marshal.ReadIntPtr(O0OCQOOOQ0);
OQOCQOOOQ0:=O0CCQOCOQ0(GetGCHandleTarget(OOOCQOOOQ0));
if OQOCQOOOQ0<>nil then
OQOCQOOOQ0.OCQ0QOCOQ0;
end;
OCI_TYPECODE_BLOB,
OCI_TYPECODE_CLOB,
OCI_TYPECODE_NCLOB,
OCI_TYPECODE_BFILE,
OCI_TYPECODE_CFILE:begin
OOOCQOOOQ0:=Marshal.ReadIntPtr(O0OCQOOOQ0);
OCOCQOOOQ0:=OOCCQ0QOQ0(GetGCHandleTarget(OOOCQOOOQ0));
if(OCOCQOOOQ0<>nil)and OCOCQOOOQ0.O00OOQOOQ0 then
OCOCQOOOQ0.OCQ0QOCOQ0;
end;
OCI_TYPECODE_REF:begin
OOOCQOOOQ0:=Marshal.ReadIntPtr(O0OCQOOOQ0);
OQQCQOOOQ0:=OQOCO0OOQ0(GetGCHandleTarget(OOOCQOOOQ0));
if OQQCQOOOQ0<>nil then
OQQCQOOOQ0.OCQ0QOCOQ0;
end;
OCI_TYPECODE_OPAQUE:begin
OOOCQOOOQ0:=Marshal.ReadIntPtr(O0OCQOOOQ0);
OOQCQOOOQ0:=OQ0OQOOOQ0(GetGCHandleTarget(OOOCQOOOQ0));
if OOQCQOOOQ0<>nil then
OOQCQOOOQ0.OCQ0QOCOQ0;
end;
OCI_TYPECODE_NAMEDCOLLECTION,
OCI_TYPECODE_VARRAY,
OCI_TYPECODE_TABLE:begin
OOOCQOOOQ0:=Marshal.ReadIntPtr(O0OCQOOOQ0);
OCQCQOOOQ0:=OOO0O0OOQ0(GetGCHandleTarget(OOOCQOOOQ0));
if OCQCQOOOQ0<>nil then
OCQCQOOOQ0.OCQ0QOCOQ0;
end;
OCI_TYPECODE_OBJECT:
if(OC0CQOOOQ0.O000O0COQ0=SQLT_REF)or
(OO00QOOOQ0.OCC0QQOOQ0<>OCI_TYPECODE_OBJECT)
then begin
OOOCQOOOQ0:=Marshal.ReadIntPtr(O0OCQOOOQ0);
O0QCQOOOQ0:=OOQ0QOOOQ0(GetGCHandleTarget(OOOCQOOOQ0));
if O0QCQOOOQ0<>nil then
O0QCQOOOQ0.OCQ0QOCOQ0;
end;
end;
end;
function OOQ0QOOOQ0.OCC0COOOQ0(O00OCOOOQ0:Integer):IntPtr;
begin
Result:=@OCCCCOOOQ0[O00OCOOOQ0+1];
end;
function OOQ0QOOOQ0.OO0OCOOOQ0(OQ0OCOOOQ0:Integer):IntPtr;
var
OCQ0QOOOQ0:integer;
begin
OCQ0QOOOQ0:=OCCQQQOOQ0(OOCCCOOOQ0.OQ0OQQOOQ0[OQ0OCOOOQ0]).O00CQQOOQ0;
Result:=@OQQ0QOOOQ0[OCQ0QOOOQ0];
end;
procedure OOQ0QOOOQ0.OC0OCOOOQ0;
var
O0OOCOOOQ0:Integer;
O0C0QOOOQ0:OCCQQQOOQ0;
begin
SetLength(OCCCCOOOQ0,OOCCCOOOQ0.OQ0OQQOOQ0.Count+1);
inherited;
SetLength(OQQ0QOOOQ0,OOCCCOOOQ0.O0OOQQOOQ0);
for O0OOCOOOQ0:=0 to OOCCCOOOQ0.OQ0OQQOOQ0.Count-1 do begin
O0C0QOOOQ0:=OCCQQQOOQ0(OOCCCOOOQ0.OQ0OQQOOQ0[O0OOCOOOQ0]);
OOOOCOOOQ0(O0C0QOOOQ0,O0OOCOOOQ0);
end;
end;
procedure OOQ0QOOOQ0.OOCQQOOOQ0;
var
OOC0QOOOQ0:Integer;
OQC0QOOOQ0:OCCQQQOOQ0;
begin
for OOC0QOOOQ0:=0 to OOCCCOOOQ0.OQ0OQQOOQ0.Count-1 do begin
OQC0QOOOQ0:=OCCQQQOOQ0(OOCCCOOOQ0.OQ0OQQOOQ0[OOC0QOOOQ0]);
OQCQQOOOQ0(OQC0QOOOQ0,OOC0QOOOQ0);
end;
end;
procedure OOQ0QOOOQ0.OCCCQOOOQ0(O000QOOOQ0:O0CCCOOOQ0);
var
OCC0QOOOQ0:Integer;
O00OQOOOQ0:OCCQQQOOQ0;
begin
for OCC0QOOOQ0:=0 to OOCCCOOOQ0.OQ0OQQOOQ0.Count-1 do begin
O00OQOOOQ0:=OCCQQQOOQ0(OOCCCOOOQ0.OQ0OQQOOQ0[OCC0QOOOQ0]);
OOCOCOOOQ0(O00OQOOOQ0,O000QOOOQ0.O0Q0QOOOQ0[OCC0QOOOQ0],O000QOOOQ0.OQO0QOOOQ0[OCC0QOOOQ0],O0Q0QOOOQ0[OCC0QOOOQ0],OQO0QOOOQ0[OCC0QOOOQ0]);
end;
end;
procedure OQ0OQOOOQ0.OC0OCOOOQ0;
begin
SetLength(OCCCCOOOQ0,1);
inherited;
end;
procedure OQ0OQOOOQ0.OCCCQOOOQ0(O000QOOOQ0:O0CCCOOOQ0);
begin
OC0OQOOOQ0:=OQ0OQOOOQ0(O000QOOOQ0).OC0OQOOOQ0;
end;
constructor OQOOQOOOQ0.Create(O0CCQOOOQ0:O0CCQOCOQ0;OOCCQOOOQ0:O0Q0QQOOQ0;OQCCQOOOQ0:OCIDuration);
begin
inherited;
end;
destructor OQOOQOOOQ0.Destroy;
begin
OOCQQOOOQ0;
inherited;
end;
procedure OQOOQOOOQ0.OOCQQOOOQ0;
begin
if OCOOQOOOQ0<>nil then begin
case OCOOQOOOQ0.OOO0QQOOQ0 of
OCI_TYPECODE_RAW,
OCI_TYPECODE_FLOAT,
OCI_TYPECODE_DOUBLE,
OCI_TYPECODE_NUMBER,
OCI_TYPECODE_DECIMAL,
OCI_TYPECODE_BFLOAT,
OCI_TYPECODE_BDOUBLE,
OCI_TYPECODE_DATE:
Marshal.FreeHGlobal(O0QOQOOOQ0);
else
OQ0CQOOOQ0(OCOOQOOOQ0,@O0QOQOOOQ0);
end;
OOQOQOOOQ0:=nil;
FreeAndNil(OCOOQOOOQ0);
SetLength(OC0OQOOOQ0,0);
end;
end;
function OQOOQOOOQ0.O0COQOOOQ0(OOCOQOOOQ0:OOO0CQQOQ0;OQCOQOOOQ0:pOCIError):O0Q0QQOOQ0;
var
OCCOQOOOQ0:O0Q0QQOOQ0;
begin
if OCOOQOOOQ0.O00OO0COQ0=nil then
if Length(OCOOQOOOQ0.OCC0O0COQ0)>0 then begin
OCCOQOOOQ0:=O0Q0QQOOQ0(OOCOQOOOQ0.O0O0QOQOQ0(OCOOQOOOQ0.OCC0O0COQ0,OQCOQOOOQ0));
OCOOQOOOQ0.O00OO0COQ0:=OCCOQOOOQ0;
end;
Result:=OCOOQOOOQ0.O00OO0COQ0;
end;
function OQOOQOOOQ0.O00QO0OOQ0(OO0QO0OOQ0:OOO0CQQOQ0;OQ0QO0OOQ0:pOCIError):IntPtr;
var
OC0QO0OOQ0:OO0000OOQ0;
O0OQO0OOQ0:O0Q0QQOOQ0;
OOOQO0OOQ0:O0CCCOOOQ0;
begin
if O0QOQOOOQ0=nil then begin
OOQOQOOOQ0:=nil;
case OCOOQOOOQ0.OOO0QQOOQ0 of
OCI_TYPECODE_RAW,
OCI_TYPECODE_FLOAT,
OCI_TYPECODE_DOUBLE,
OCI_TYPECODE_NUMBER,
OCI_TYPECODE_DECIMAL,
OCI_TYPECODE_BFLOAT,
OCI_TYPECODE_BDOUBLE,
OCI_TYPECODE_DATE:begin
OC0QO0OOQ0:=OO0000OOQ0.Create(OC0OQOOOQ0);
try
O0QOQOOOQ0:=Marshal.AllocHGlobal(OCOOQOOOQ0.OO00O0COQ0);
O0QQC0OOQ0.O0QCQ0OOQ0(OC0QO0OOQ0,O0QOQOOOQ0,OCOOQOOOQ0,OC0OQOOOQ0);
finally
OC0QO0OOQ0.Free;
end;
end;
OCI_TYPECODE_OBJECT,
OCI_TYPECODE_OPAQUE,
OCI_TYPECODE_NAMEDCOLLECTION:begin
O0OQO0OOQ0:=O0COQOOOQ0(OO0QO0OOQ0,OQ0QO0OOQ0);
OOOQO0OOQ0:=O0OQO0OOQ0.OQCO0OOOQ0(OCI_DURATION_SESSION);
O0OQO0OOQ0.OC0QCOOOQ0(OC0OQOOOQ0,OOOQO0OOQ0);
OOOQO0OOQ0.OOO0QOOOQ0:=OCI_IND_NOTNULL;
O0QOQOOOQ0:=OOOQO0OOQ0;
OOQOQOOOQ0:=OOOQO0OOQ0.O0O0QOOOQ0;
end;
else begin
OC0QO0OOQ0:=OO0000OOQ0.Create(OC0OQOOOQ0);
try
O0QOQOOOQ0:=nil;
O0QQC0OOQ0.O0QCQ0OOQ0(OC0QO0OOQ0,@O0QOQOOOQ0,OCOOQOOOQ0,OC0OQOOOQ0);
finally
OC0QO0OOQ0.Free;
end;
end;
end;
end;
Result:=O0QOQOOOQ0;
end;
procedure OQOOQOOOQ0.OQOQO0OOQ0(OCOQO0OOQ0:OOO0CQQOQ0;O0QQO0OOQ0:pOCIError;OOQQO0OOQ0:IntPtr;OQQQO0OOQ0:Integer);
var
OCQQO0OOQ0:O00O00OOQ0;
O0CQO0OOQ0:O0Q0QQOOQ0;
OOCQO0OOQ0:O0CCCOOOQ0;
begin
O0QOQOOOQ0:=OOQQO0OOQ0;
OOQOQOOOQ0:=nil;
case OCOOQOOOQ0.OOO0QQOOQ0 of
OCI_TYPECODE_RAW,
OCI_TYPECODE_FLOAT,
OCI_TYPECODE_DOUBLE,
OCI_TYPECODE_NUMBER,
OCI_TYPECODE_DECIMAL,
OCI_TYPECODE_BFLOAT,
OCI_TYPECODE_BDOUBLE,
OCI_TYPECODE_DATE:begin
O0QOQOOOQ0:=Marshal.AllocHGlobal(OQQQO0OOQ0);
Move(OOQQO0OOQ0^,O0QOQOOOQ0^,OQQQO0OOQ0);
OCQQO0OOQ0:=O00O00OOQ0.Create;
try
O0QQC0OOQ0.OCQQQ0OOQ0(OCQQO0OOQ0,O0QOQOOOQ0,OCOOQOOOQ0);
OC0OQOOOQ0:=OCQQO0OOQ0.OC0QC0OOQ0(1,OCQQO0OOQ0.OCOQC0OOQ0-1);
finally
OCQQO0OOQ0.Free;
end;
end;
OCI_TYPECODE_OBJECT,
OCI_TYPECODE_OPAQUE,
OCI_TYPECODE_NAMEDCOLLECTION:begin
O0QOQOOOQ0:=OOQQO0OOQ0;
OOCQO0OOQ0:=O0CCCOOOQ0(GetGCHandleTarget(O0QOQOOOQ0));
O0CQO0OOQ0:=OOCQO0OOQ0.OO00QOOOQ0;
OC0OQOOOQ0:=O0CQO0OOQ0.O00QCOOOQ0(OOCQO0OOQ0);
OOQOQOOOQ0:=OOCQO0OOQ0.O0O0QOOOQ0;
end;
else begin
O0QOQOOOQ0:=OOQQO0OOQ0;
OCQQO0OOQ0:=O00O00OOQ0.Create;
try
O0QQC0OOQ0.OCQQQ0OOQ0(OCQQO0OOQ0,@O0QOQOOOQ0,OCOOQOOOQ0);
OC0OQOOOQ0:=OCQQO0OOQ0.OC0QC0OOQ0(1,OCQQO0OOQ0.OCOQC0OOQ0-1);
finally
OCQQO0OOQ0.Free;
end;
end;
end;
end;
procedure OQOOQOOOQ0.OQQOQOOOQ0(OCQOQOOOQ0:Integer);
begin
case OCOOQOOOQ0.OOO0QQOOQ0 of
OCI_TYPECODE_DATE:
OCOOQOOOQ0.OO00O0COQ0:=8;
OCI_TYPECODE_NUMBER,
OCI_TYPECODE_DECIMAL:
OCOOQOOOQ0.OO00O0COQ0:=22;
OCI_TYPECODE_FLOAT:
OCOOQOOOQ0.OO00O0COQ0:=8;
OCI_TYPECODE_INTEGER:
OCOOQOOOQ0.OO00O0COQ0:=4;
OCI_TYPECODE_BFLOAT:
OCOOQOOOQ0.OO00O0COQ0:=4;
OCI_TYPECODE_BDOUBLE:
OCOOQOOOQ0.OO00O0COQ0:=8;
else
OCOOQOOOQ0.OO00O0COQ0:=OCQOQOOOQ0;
end;
end;
procedure OQOOQOOOQ0.OQCQO0OOQ0(OCCQO0OOQ0:OCITypeCode;const O00CO0OOQ0:TBytes;OO0CO0OOQ0:Integer);
begin
if OCOOQOOOQ0=nil then
OCOOQOOOQ0:=OCCQQQOOQ0.Create(Self);
OCOOQOOOQ0.OOO0QQOOQ0:=OCCQO0OOQ0;
OCOOQOOOQ0.OCC0O0COQ0:=O00CO0OOQ0;
OCOOQOOOQ0.O00OO0COQ0:=nil;
OQQOQOOOQ0(OO0CO0OOQ0);
end;
procedure OQOOQOOOQ0.OQCQO0OOQ0(OCCQO0OOQ0:OCITypeCode;OQ0CO0OOQ0:O0Q0QQOOQ0;OO0CO0OOQ0:Integer);
begin
if OCOOQOOOQ0=nil then
OCOOQOOOQ0:=OCCQQQOOQ0.Create(Self);
OCOOQOOOQ0.OQ0CQQOOQ0:=OCCQO0OOQ0;
OCOOQOOOQ0.O00OO0COQ0:=OQ0CO0OOQ0;
if OQ0CO0OOQ0<>nil then
OCOOQOOOQ0.OCC0O0COQ0:=OQ0CO0OOQ0.OOC0QQOOQ0
else
OCOOQOOOQ0.OCC0O0COQ0:=nil;
OQQOQOOOQ0(OO0CO0OOQ0);
end;
procedure OQOCO0OOQ0.OC0OCOOOQ0;
begin
SetLength(OCCCCOOOQ0,1);
inherited;
end;
procedure OQOCO0OOQ0.OOCQQOOOQ0;
begin
O0QCO0OOQ0.OCQ0QOCOQ0;
O0QCO0OOQ0:=nil;
inherited;
end;
procedure OQOCO0OOQ0.OCCCQOOOQ0(O000QOOOQ0:O0CCCOOOQ0);
begin
OCOCO0OOQ0:=OQOCO0OOQ0(O000QOOOQ0).OCOCO0OOQ0;
end;
function OQOCO0OOQ0.OOQCO0OOQ0(OQQCO0OOQ0:OOO0CQQOQ0;OCQCO0OOQ0:pOCIError):OOQ0QOOOQ0;
var
O0CCO0OOQ0:O0CQQ0COQ0;
OOCCO0OOQ0:OOCCQ0COQ0;
OQCCO0OOQ0:OOQ0O0QOQ0;
OCCCO0OOQ0:pOCIDefine;
O000O0OOQ0:IntPtr;
OO00O0OOQ0:sb2;
OQ00O0OOQ0,OC00O0OOQ0:sb2;
begin
if O0QCO0OOQ0=nil then begin
O0CCO0OOQ0:=OQQCO0OOQ0.OOCOQOQOQ0;
OQ00O0OOQ0:=-1;
OC00O0OOQ0:=0;
OOCCO0OOQ0:=OOCCQ0COQ0.Create(OQQCO0OOQ0.OOCOQOQOQ0);
try
OOCCO0OOQ0.OQQCCQQOQ0:=OQQCO0OOQ0;
OOCCO0OOQ0.O0CCCQQOQ0:='SELECT DEREF(:1) FROM SYS.DUAL';
OOCCO0OOQ0.OOCCCQQOQ0:=OCI_STMT_SELECT;
OQCCO0OOQ0:=OOQ0O0QOQ0.Create(OOCCO0OOQ0);
OQCCO0OOQ0.OCCCO0COQ0:='1';
OQCCO0OOQ0.O000O0COQ0:=SQLT_REF;
OQCCO0OOQ0.O00OO0COQ0:=OOCCCOOOQ0;
if Length(OCOCO0OOQ0)<>0 then begin
OQCCO0OOQ0.O0Q0O0COQ0:=Self.OO00QOCOQ0;
OQCCO0OOQ0.OQQ0O0COQ0:=@OC00O0OOQ0;
end
else begin
OQCCO0OOQ0.O0Q0O0COQ0:=nil;
OQCCO0OOQ0.OQQ0O0COQ0:=@OQ00O0OOQ0
end;
OOCCO0OOQ0.OCCCCQQOQ0.Add(OQCCO0OOQ0);
OCOO0QOOQ0(OOCCO0OOQ0.OQQQCQQOQ0(OCQCO0OOQ0,1,0,OCI_DEFAULT),O0CCO0OOQ0.O00CQ0COQ0,OCQCO0OOQ0);
O000O0OOQ0:=nil;
OCOO0QOOQ0(OOCCO0OOQ0.O0QQ0QQOQ0(OCCCO0OOQ0,OCQCO0OOQ0,1,nil,0,SQLT_NTY,nil,nil),O0CCO0OOQ0.O00CQ0COQ0,OCQCO0OOQ0);
OCOO0QOOQ0(OOCCQ0COQ0.OQ0C0QQOQ0(OCCCO0OOQ0,OCQCO0OOQ0,OOCCCOOOQ0.OO00QOCOQ0,@O000O0OOQ0,nil,@OO00O0OOQ0,nil),O0CCO0OOQ0.O00CQ0COQ0,OCQCO0OOQ0);
OCOO0QOOQ0(OO0OO0COQ0(GetGCHandleTarget(OCCCO0OOQ0)).OQ0OO0COQ0(OCQCO0OOQ0,0,0,0),O0CCO0OOQ0.O00CQ0COQ0,OCQCO0OOQ0);
OCOO0QOOQ0(OOCCO0OOQ0.OC0QCQQOQ0(OCQCO0OOQ0,1),O0CCO0OOQ0.O00CQ0COQ0,OCQCO0OOQ0);
O0QCO0OOQ0:=O0CCCOOOQ0(GetGCHandleTarget(O000O0OOQ0))as OOQ0QOOOQ0;
finally
OOCCO0OOQ0.Free;
end;
end;
Result:=O0QCO0OOQ0;
end;
procedure OOO0O0OOQ0.OOOOCOOOQ0(OQOOCOOOQ0:OCCQQQOOQ0;OCOOCOOOQ0:Integer);
var
O0QOCOOOQ0:IntPtr;
OOQOCOOOQ0:O0CCCOOOQ0;
begin
O0QOCOOOQ0:=O0Q0QOOOQ0[OCOOCOOOQ0];
if OQOOCOOOQ0.O00OO0COQ0<>nil then
if OQOOCOOOQ0.O00OO0COQ0.OCCQCOOOQ0=OCI_TYPECODE_OBJECT then begin
OOQOCOOOQ0:=OOQ0QOOOQ0.Create(OOCCQOCOQ0,OQOOCOOOQ0.O00OO0COQ0,OCI_DURATION_SESSION);
Marshal.WriteIntPtr(O0QOCOOOQ0,OOQOCOOOQ0.OO00QOCOQ0);
end
else if OQOOCOOOQ0.O00OO0COQ0.OCCQCOOOQ0=OCI_TYPECODE_OPAQUE then begin
if(OQOOCOOOQ0.O00OO0COQ0.OQQQCOOOQ0='ANYDATA')and(OQOOCOOOQ0.O00OO0COQ0.OOQQCOOOQ0='SYS')then
OOQOCOOOQ0:=OQOOQOOOQ0.Create(OOCCQOCOQ0,OQOOCOOOQ0.O00OO0COQ0,OCI_DURATION_SESSION)
else
OOQOCOOOQ0:=OOOOQOOOQ0.Create(OOCCQOCOQ0,OQOOCOOOQ0.O00OO0COQ0,OCI_DURATION_SESSION);
Marshal.WriteIntPtr(O0QOCOOOQ0,OOQOCOOOQ0.OO00QOCOQ0);
end
else
inherited OOOOCOOOQ0(OQOOCOOOQ0,OCOOCOOOQ0)
else
inherited OOOOCOOOQ0(OQOOCOOOQ0,OCOOCOOOQ0);
end;
procedure OOO0O0OOQ0.OCCCQOOOQ0(O000QOOOQ0:O0CCCOOOQ0);
var
OCC0QOOOQ0:Integer;
OCO0O0OOQ0:integer;
begin
OOCQQOOOQ0;
OCO0O0OOQ0:=OOO0O0OOQ0(O000QOOOQ0).OQC0O0OOQ0;
if Self is OCC0O0OOQ0 then
OCC0O0OOQ0(Self).OQQOO0OOQ0(OCO0O0OOQ0);
for OCC0QOOOQ0:=0 to OCO0O0OOQ0-1 do begin
if OCQ0O0OOQ0 then
OOCOCOOOQ0(OOCCCOOOQ0.OC0OQQOOQ0,O000QOOOQ0.O0Q0QOOOQ0[OCC0QOOOQ0],O000QOOOQ0.OQO0QOOOQ0[OCC0QOOOQ0],O0Q0QOOOQ0[OCC0QOOOQ0],OQO0QOOOQ0[OCC0QOOOQ0]);
end;
end;
procedure OOO0O0OOQ0.OOCOCOOOQ0(OQCOCOOOQ0:OCCQQQOOQ0;OCCOCOOOQ0,O00QQOOOQ0,OO0QQOOOQ0,OQ0QQOOOQ0:IntPtr);
var
O0Q0O0OOQ0:IntPtr;
OOQ0O0OOQ0:O0CCCOOOQ0;
OQQ0O0OOQ0:O0CCCOOOQ0;
begin
if OQCOCOOOQ0.O00OO0COQ0<>nil then
if OQCOCOOOQ0.O00OO0COQ0.OCC0QQOOQ0 in[OCI_TYPECODE_OBJECT,OCI_TYPECODE_OPAQUE]then begin
O0Q0O0OOQ0:=Marshal.ReadIntPtr(OCCOCOOOQ0);
OOQ0O0OOQ0:=O0CCCOOOQ0(GetGCHandleTarget(O0Q0O0OOQ0));
O0Q0O0OOQ0:=Marshal.ReadIntPtr(OO0QQOOOQ0);
OQQ0O0OOQ0:=O0CCCOOOQ0(GetGCHandleTarget(O0Q0O0OOQ0));
OQQ0O0OOQ0.OCCCQOOOQ0(OOQ0O0OOQ0);
end
else
inherited OOCOCOOOQ0(OQCOCOOOQ0,OCCOCOOOQ0,O00QQOOOQ0,OO0QQOOOQ0,OQ0QQOOOQ0)
else
inherited OOCOCOOOQ0(OQCOCOOOQ0,OCCOCOOOQ0,O00QQOOOQ0,OO0QQOOOQ0,OQ0QQOOOQ0);
end;
function OCC0O0OOQ0.OCC0COOOQ0(O00OCOOOQ0:Integer):IntPtr;
var
OQ0OO0OOQ0:O0CCCOOOQ0;
begin
if OOCCCOOOQ0.O00CCOOOQ0.O00OO0COQ0<>nil then begin
OQ0OO0OOQ0:=O0CCCOOOQ0(GetGCHandleTarget(Marshal.ReadIntPtr(@O00OO0OOQ0[O00OCOOOQ0].OCCOO0OOQ0[0])));
Result:=OQ0OO0OOQ0.O0O0QOOOQ0;
end
else if O00OCOOOQ0<=OQC0O0OOQ0 then
Result:=@O00OO0OOQ0[O00OCOOOQ0].OQCOO0OOQ0
else
Result:=nil;
end;
function OCC0O0OOQ0.OO0OCOOOQ0(OQ0OCOOOQ0:Integer):IntPtr;
begin
if OQ0OCOOOQ0<=OQC0O0OOQ0 then
if Length(O00OO0OOQ0[OQ0OCOOOQ0].OCCOO0OOQ0)>0 then
Result:=@O00OO0OOQ0[OQ0OCOOOQ0].OCCOO0OOQ0[0]
else
Result:=nil
else
Result:=nil;
end;
procedure OCC0O0OOQ0.OC0OCOOOQ0;
begin
SetLength(OCCCCOOOQ0,1);
inherited;
SetLength(O00OO0OOQ0,0);
OO0OO0OOQ0:=0;
end;
procedure OCC0O0OOQ0.OC0OO0OOQ0(var O0OOO0OOQ0:OOCOO0OOQ0);
begin
O0OOO0OOQ0.OQCOO0OOQ0:=OCI_IND_NULL;
SetLength(O0OOO0OOQ0.OCCOO0OOQ0,OOCCCOOOQ0.OC0OQQOOQ0.OO0CQQOOQ0);
end;
procedure OCC0O0OOQ0.OOOOO0OOQ0(var OQOOO0OOQ0:OOCOO0OOQ0);
begin
OQOOO0OOQ0.OQCOO0OOQ0:=OCI_IND_NULL;
SetLength(OQOOO0OOQ0.OCCOO0OOQ0,0);
end;
function OCC0O0OOQ0.OQO0O0OOQ0:Integer;
begin
Result:=OO0OO0OOQ0;
end;
function OCC0O0OOQ0.OCQ0O0OOQ0:boolean;
var
OCOOO0OOQ0:Integer;
begin
if OQC0O0OOQ0<OOCCCOOOQ0.OC0OQQOOQ0.OC0CQQOOQ0 then begin
if Length(O00OO0OOQ0)<=OQC0O0OOQ0 then begin
if Length(O00OO0OOQ0)=0 then
OCOOO0OOQ0:=8
else
OCOOO0OOQ0:=Length(O00OO0OOQ0)*2;
OQQOO0OOQ0(OCOOO0OOQ0);
end;
OC0OO0OOQ0(O00OO0OOQ0[OO0OO0OOQ0]);
OOOOCOOOQ0(OOCCCOOOQ0.OC0OQQOOQ0,OO0OO0OOQ0);
Inc(OO0OO0OOQ0);
Result:=True;
end
else
Result:=False;
end;
procedure OCC0O0OOQ0.O0C0O0OOQ0(OOC0O0OOQ0:Integer);
var
O0QOO0OOQ0:Integer;
OOQOO0OOQ0:Integer;
begin
OOQOO0OOQ0:=OO0OO0OOQ0-OOC0O0OOQ0;
if OOQOO0OOQ0<0 then
OOQOO0OOQ0:=0;
for O0QOO0OOQ0:=OO0OO0OOQ0-1 downto OOQOO0OOQ0 do begin
OQCQQOOOQ0(OOCCCOOOQ0.OC0OQQOOQ0,O0QOO0OOQ0);
OOOOO0OOQ0(O00OO0OOQ0[O0QOO0OOQ0]);
end;
OO0OO0OOQ0:=OOQOO0OOQ0;
end;
procedure OCC0O0OOQ0.OOCQQOOOQ0;
var
OOC0QOOOQ0:Integer;
begin
for OOC0QOOOQ0:=OO0OO0OOQ0-1 downto 0 do begin
OQCQQOOOQ0(OOCCCOOOQ0.OC0OQQOOQ0,OOC0QOOOQ0);
OOOOO0OOQ0(O00OO0OOQ0[OOC0QOOOQ0]);
end;
end;
procedure OCC0O0OOQ0.OQQOO0OOQ0(OCQOO0OOQ0:Integer);
var
O0COO0OOQ0:Integer;
begin
if OCQOO0OOQ0<OQC0O0OOQ0 then
O0COO0OOQ0:=OQC0O0OOQ0
else if OCQOO0OOQ0<=OOCCCOOOQ0.OC0OQQOOQ0.OC0CQQOOQ0 then
O0COO0OOQ0:=OCQOO0OOQ0
else
O0COO0OOQ0:=OOCCCOOOQ0.OC0OQQOOQ0.OC0CQQOOQ0;
if O0COO0OOQ0<>Length(O00OO0OOQ0)then
SetLength(O00OO0OOQ0,O0COO0OOQ0);
end;
function OOOQ00OOQ0.OCC0COOOQ0(O00OCOOOQ0:Integer):IntPtr;
var
OCOQ00OOQ0:O00Q00OOQ0;
OQ0OO0OOQ0:O0CCCOOOQ0;
begin
OCOQ00OOQ0:=OCQQ00OOQ0(O00OCOOOQ0);
if OCOQ00OOQ0<>nil then
if OOCCCOOOQ0.O00CCOOOQ0.O00OO0COQ0<>nil then begin
OQ0OO0OOQ0:=O0CCCOOOQ0(GetGCHandleTarget(Marshal.ReadIntPtr(@OCOQ00OOQ0.O0OQ00OOQ0[0])));
Result:=OQ0OO0OOQ0.O0O0QOOOQ0;
end
else
Result:=@OCOQ00OOQ0.OC0Q00OOQ0
else
Result:=nil;
end;
function OOOQ00OOQ0.OO0OCOOOQ0(OQ0OCOOOQ0:Integer):IntPtr;
var
O0QQ00OOQ0:O00Q00OOQ0;
begin
O0QQ00OOQ0:=OCQQ00OOQ0(OQ0OCOOOQ0);
if O0QQ00OOQ0<>nil then
Result:=@O0QQ00OOQ0.O0OQ00OOQ0[0]
else
Result:=nil;
end;
procedure OOOQ00OOQ0.OC0OCOOOQ0;
begin
SetLength(OCCCCOOOQ0,1);
inherited;
OQOQ00OOQ0:=nil;
end;
procedure OOOQ00OOQ0.OOQQ00OOQ0(O0OOO0OOQ0:O00Q00OOQ0);
begin
O0OOO0OOQ0.OQ0Q00OOQ0:=nil;
O0OOO0OOQ0.OC0Q00OOQ0:=OCI_IND_NULL;
SetLength(O0OOO0OOQ0.O0OQ00OOQ0,OOCCCOOOQ0.OC0OQQOOQ0.OO0CQQOOQ0);
end;
procedure OOOQ00OOQ0.OQQQ00OOQ0(OQOOO0OOQ0:O00Q00OOQ0);
begin
SetLength(OQOOO0OOQ0.O0OQ00OOQ0,0);
end;
function OOOQ00OOQ0.OCQQ00OOQ0(O0CQ00OOQ0:Integer):O00Q00OOQ0;
var
OOCQ00OOQ0:Integer;
begin
if O0CQ00OOQ0<0 then
Result:=nil
else begin
OOCQ00OOQ0:=0;
Result:=OQOQ00OOQ0;
while(OOCQ00OOQ0<O0CQ00OOQ0)and(Result<>nil)do begin
Result:=Result.OQ0Q00OOQ0;
Inc(OOCQ00OOQ0);
end;
end;
end;
function OOOQ00OOQ0.OQO0O0OOQ0:Integer;
var
OQCQ00OOQ0:O00Q00OOQ0;
begin
Result:=0;
OQCQ00OOQ0:=OQOQ00OOQ0;
while OQCQ00OOQ0<>nil do begin
Inc(Result);
OQCQ00OOQ0:=OQCQ00OOQ0.OQ0Q00OOQ0;
end;
end;
function OOOQ00OOQ0.OCQ0O0OOQ0:boolean;
var
OCCQ00OOQ0:O00Q00OOQ0;
O00C00OOQ0:O00Q00OOQ0;
begin
OCCQ00OOQ0:=new(O00Q00OOQ0);
OOQQ00OOQ0(OCCQ00OOQ0);
if OQOQ00OOQ0=nil then
OQOQ00OOQ0:=OCCQ00OOQ0
else begin
O00C00OOQ0:=OQOQ00OOQ0;
while O00C00OOQ0.OQ0Q00OOQ0<>nil do
O00C00OOQ0:=O00C00OOQ0.OQ0Q00OOQ0;
O00C00OOQ0.OQ0Q00OOQ0:=OCCQ00OOQ0;
end;
OOOOCOOOQ0(OOCCCOOOQ0.OC0OQQOOQ0,OQC0O0OOQ0-1);
Result:=True;
end;
procedure OOOQ00OOQ0.OO0C00OOQ0(OQ0C00OOQ0:Integer);
var
OC0C00OOQ0:integer;
O0OC00OOQ0:O00Q00OOQ0;
OOOC00OOQ0:O00Q00OOQ0;
begin
Assert(OOCCCOOOQ0.O00CCOOOQ0<>nil);
Assert(OOCCCOOOQ0.O00CCOOOQ0.O000O0COQ0=OCI_TYPECODE_TABLE);
if OQ0C00OOQ0<0 then
Exit;
OC0C00OOQ0:=0;
OOOC00OOQ0:=nil;
O0OC00OOQ0:=OQOQ00OOQ0;
while(OC0C00OOQ0<OQ0C00OOQ0)and(O0OC00OOQ0<>nil)do begin
OOOC00OOQ0:=O0OC00OOQ0;
O0OC00OOQ0:=O0OC00OOQ0.OQ0Q00OOQ0;
Inc(OC0C00OOQ0);
end;
if O0OC00OOQ0<>nil then begin
OQCQQOOOQ0(OOCCCOOOQ0.OC0OQQOOQ0,OQ0C00OOQ0);
if OOOC00OOQ0<>nil then
OOOC00OOQ0.OQ0Q00OOQ0:=O0OC00OOQ0.OQ0Q00OOQ0
else
OQOQ00OOQ0:=O0OC00OOQ0.OQ0Q00OOQ0;
OQQQ00OOQ0(O0OC00OOQ0);
Dispose(O0OC00OOQ0);
end;
end;
procedure OOOQ00OOQ0.O0C0O0OOQ0(OOC0O0OOQ0:Integer);
var
O0QOO0OOQ0:Integer;
OQOC00OOQ0:Integer;
OOQOO0OOQ0:Integer;
begin
OQOC00OOQ0:=OQO0O0OOQ0;
OOQOO0OOQ0:=OQOC00OOQ0-OOC0O0OOQ0;
if OOQOO0OOQ0<0 then
OOQOO0OOQ0:=0;
for O0QOO0OOQ0:=OQOC00OOQ0-1 downto OOQOO0OOQ0 do
OO0C00OOQ0(O0QOO0OOQ0);
end;
procedure OOOQ00OOQ0.OOCQQOOOQ0;
begin
while OQOQ00OOQ0<>nil do
OO0C00OOQ0(0);
end;
constructor OO0000OOQ0.Create(const OOO000OOQ0:TBytes);
begin
inherited Create;
OQ0000OOQ0:=OOO000OOQ0;
OC0000OOQ0:=0;
end;
function OO0000OOQ0.OQO000OOQ0:Byte;
begin
if OC0000OOQ0>=Length(OQ0000OOQ0)then
O00QCQOOQ0(99);
Result:=OQ0000OOQ0[OC0000OOQ0];
Inc(OC0000OOQ0);
end;
function OO0000OOQ0.OCO000OOQ0:Byte;
begin
if OC0000OOQ0>=Length(OQ0000OOQ0)then
O00QCQOOQ0(99);
Result:=OQ0000OOQ0[OC0000OOQ0];
end;
function OO0000OOQ0.O0Q000OOQ0:SmallInt;
begin
if OC0000OOQ0+1>=Length(OQ0000OOQ0)then
O00QCQOOQ0(99);
Result:=SmallInt(OQ0000OOQ0[OC0000OOQ0])shl 8 or
SmallInt(OQ0000OOQ0[OC0000OOQ0+1]);
Inc(OC0000OOQ0,2);
end;
function OO0000OOQ0.OOQ000OOQ0:Integer;
begin
if OC0000OOQ0+3>=Length(OQ0000OOQ0)then
O00QCQOOQ0(99);
Result:=Integer(OQ0000OOQ0[OC0000OOQ0])shl 24 or
Integer(OQ0000OOQ0[OC0000OOQ0+1])shl 16 or
Integer(OQ0000OOQ0[OC0000OOQ0+2])shl 8 or
Integer(OQ0000OOQ0[OC0000OOQ0+3]);
Inc(OC0000OOQ0,4);
end;
function OO0000OOQ0.OQQ000OOQ0(OCQ000OOQ0:integer):TBytes;
begin
SetLength(Result,OCQ000OOQ0);
if OCQ000OOQ0>0 then
O0C000OOQ0(@Result[0],OCQ000OOQ0);
end;
procedure OO0000OOQ0.O0C000OOQ0(OOC000OOQ0:IntPtr;OQC000OOQ0:integer);
begin
if OC0000OOQ0+OQC000OOQ0-1>=Length(OQ0000OOQ0)then
O00QCQOOQ0(17000);
Move(PtrOffset(OQ0000OOQ0,OC0000OOQ0)^,OOC000OOQ0^,OQC000OOQ0);
Inc(OC0000OOQ0,OQC000OOQ0);
end;
constructor O00O00OOQ0.Create;
begin
inherited;
SetLength(OO0O00OOQ0,1024);
OQ0O00OOQ0:=0;
OC0O00OOQ0:=0;
end;
function O00O00OOQ0.O0OO00OOQ0:TBytes;
begin
Result:=copy(OO0O00OOQ0,0,OC0O00OOQ0);
end;
procedure O00O00OOQ0.OQOO00OOQ0(OCOO00OOQ0:byte);
begin
if OQ0O00OOQ0>=Length(OO0O00OOQ0)then
SetLength(OO0O00OOQ0,Length(OO0O00OOQ0)*2);
OO0O00OOQ0[OQ0O00OOQ0]:=OCOO00OOQ0;
Inc(OQ0O00OOQ0);
if OC0O00OOQ0<OQ0O00OOQ0 then
OC0O00OOQ0:=OQ0O00OOQ0;
end;
procedure O00O00OOQ0.O0QO00OOQ0(OOQO00OOQ0:smallint);
begin
if OQ0O00OOQ0+1>=Length(OO0O00OOQ0)then
SetLength(OO0O00OOQ0,Length(OO0O00OOQ0)*2);
OO0O00OOQ0[OQ0O00OOQ0]:=Byte(OOQO00OOQ0 shr 8);
OO0O00OOQ0[OQ0O00OOQ0+1]:=Byte(OOQO00OOQ0);
Inc(OQ0O00OOQ0,2);
if OC0O00OOQ0<OQ0O00OOQ0 then
OC0O00OOQ0:=OQ0O00OOQ0;
end;
procedure O00O00OOQ0.OQQO00OOQ0(OCQO00OOQ0:integer);
begin
if OQ0O00OOQ0+3>=Length(OO0O00OOQ0)then
SetLength(OO0O00OOQ0,Length(OO0O00OOQ0)*2);
OO0O00OOQ0[OQ0O00OOQ0]:=Byte(OCQO00OOQ0 shr 24);
OO0O00OOQ0[OQ0O00OOQ0+1]:=Byte(OCQO00OOQ0 shr 16);
OO0O00OOQ0[OQ0O00OOQ0+2]:=Byte(OCQO00OOQ0 shr 8);
OO0O00OOQ0[OQ0O00OOQ0+3]:=Byte(OCQO00OOQ0);
Inc(OQ0O00OOQ0,4);
if OC0O00OOQ0<OQ0O00OOQ0 then
OC0O00OOQ0:=OQ0O00OOQ0;
end;
procedure O00O00OOQ0.O0CO00OOQ0(const OOCO00OOQ0:TBytes);
var
OQCO00OOQ0:Integer;
begin
OQCO00OOQ0:=Length(OOCO00OOQ0);
if OQCO00OOQ0>0 then
OCCO00OOQ0(@OOCO00OOQ0[0],OQCO00OOQ0);
end;
procedure O00O00OOQ0.OCCO00OOQ0(O00QC0OOQ0:IntPtr;OO0QC0OOQ0:Integer);
var
OQ0QC0OOQ0:Integer;
begin
OQ0QC0OOQ0:=Length(OO0O00OOQ0);
while OQ0O00OOQ0+OO0QC0OOQ0-1>=OQ0QC0OOQ0 do
OQ0QC0OOQ0:=OQ0QC0OOQ0*2;
if OQ0QC0OOQ0>Length(OO0O00OOQ0)then
SetLength(OO0O00OOQ0,OQ0QC0OOQ0);
Move(O00QC0OOQ0^,OO0O00OOQ0[OQ0O00OOQ0],OO0QC0OOQ0);
Inc(OQ0O00OOQ0,OO0QC0OOQ0);
if OC0O00OOQ0<OQ0O00OOQ0 then
OC0O00OOQ0:=OQ0O00OOQ0;
end;
function O00O00OOQ0.OC0QC0OOQ0(O0OQC0OOQ0,OQC000OOQ0:Integer):TBytes;
begin
SetLength(Result,OQC000OOQ0);
Move(OO0O00OOQ0[O0OQC0OOQ0],Result[0],OQC000OOQ0);
end;
function OCCQQQOOQ0.OOOCQQOOQ0:O0CQQ0COQ0;
var
OQOCQQOOQ0:O0CCQOCOQ0;
begin
OQOCQQOOQ0:=OOCCQOCOQ0;
while OQOCQQOOQ0.OCQOQOCOQ0<>nil do
OQOCQQOOQ0:=OQOCQQOOQ0.OCQOQOCOQ0;
Result:=O0CQQ0COQ0(OQOCQQOOQ0);
end;
function OCCQQQOOQ0.OCOCQQOOQ0:OOO0CQQOQ0;
var
O0QCQQOOQ0:O0CCQOCOQ0;
OOQCQQOOQ0:O0CCQOCOQ0;
begin
O0QCQQOOQ0:=OOCCQOCOQ0;
OOQCQQOOQ0:=OOCCQOCOQ0.OCQOQOCOQ0;
if OOQCQQOOQ0.OCQOQOCOQ0<>nil then
Result:=OOO0CQQOQ0(OOQCQQOOQ0)
else
Result:=O0CCCOOOQ0(O0QCQQOOQ0).OO00QOOOQ0.O0QQCOOOQ0;
end;
function OCCQQQOOQ0.OQQCQQOOQ0:O0Q0QQOOQ0;
begin
Result:=O0Q0QQOOQ0(inherited O00OO0COQ0);
end;
procedure OCCQQQOOQ0.OCQCQQOOQ0(const O0CCQQOOQ0:O0Q0QQOOQ0);
begin
inherited O00OO0COQ0:=O0CCQQOOQ0;
end;
function OCCQQQOOQ0.O0C0QOCOQ0(OOCCQQOOQ0:IntPtr;OQCCQQOOQ0:pub4;OCCCQQOOQ0:ub4;O000QQOOQ0:pOCIError):sword;
var
OO00QQOOQ0:O0CQQ0COQ0;
begin
OO00QQOOQ0:=O0CQQ0COQ0(OQ0CQ0COQ0(GetGCHandleTarget(O000QQOOQ0)).OCQOQOCOQ0);
Result:=OCI_SUCCESS;
case OCCCQQOOQ0 of
OCI_ATTR_TYPE_NAME:
if O00OO0COQ0<>nil then
OC00QOCOQ0(OO00QQOOQ0,OOCCQQOOQ0,OQCCQQOOQ0,O00OO0COQ0.OQQQCOOOQ0)
else
Result:=OCI_ERROR;
OCI_ATTR_SCHEMA_NAME:
if O00OO0COQ0<>nil then
OC00QOCOQ0(OO00QQOOQ0,OOCCQQOOQ0,OQCCQQOOQ0,O00OO0COQ0.OOQQCOOOQ0)
else
Result:=OCI_ERROR;
OCI_ATTR_TYPECODE:
Marshal.WriteInt16(OOCCQQOOQ0,OQ0CQQOOQ0);
OCI_ATTR_NUM_ELEMENTS:
Marshal.WriteInt32(OOCCQQOOQ0,OC0CQQOOQ0);
else
Result:=inherited O0C0QOCOQ0(OOCCQQOOQ0,OQCCQQOOQ0,OCCCQQOOQ0,O000QQOOQ0);
end;
end;
function OQ0C0C0OQ0(OC0C0C0OQ0:IntPtr;O0OC0C0OQ0:pOCIBind;OOOC0C0OQ0:ub4;OQOC0C0OQ0:ub4;
var OCOC0C0OQ0:IntPtr;var O0QC0C0OQ0:pub4;var OOQC0C0OQ0:ub1;var OQQC0C0OQ0:pOCIInd;var OCQC0C0OQ0:pub2):sb4;cdecl;
var
O0CC0C0OQ0:OOQ0O0QOQ0;
begin
O0CC0C0OQ0:=OOQ0O0QOQ0(GetGCHandleTarget(O0OC0C0OQ0));
OCOC0C0OQ0:=O0CC0C0OQ0.O0Q0O0COQ0;
OQQC0C0OQ0:=O0CC0C0OQ0.OQQ0O0COQ0;
O0QC0C0OQ0:=pub4(O0CC0C0OQ0.OCQ0O0COQ0);
OCQC0C0OQ0:=nil;
OOQC0C0OQ0:=OCI_NEXT_PIECE;
Result:=OCI_CONTINUE;
end;
constructor O0Q0QQOOQ0.Create(OQCC0OOOQ0:OOO0CQQOQ0;const OCCC0OOOQ0,O0000OOOQ0:string);
begin
inherited Create(OQCC0OOOQ0);
OOQ0QQOOQ0:=OCCC0OOOQ0;
OQQ0QQOOQ0:=O0000OOOQ0;
end;
constructor O0Q0QQOOQ0.Create(OQCC0OOOQ0:OOO0CQQOQ0;const OO000OOOQ0:TBytes);
begin
inherited Create(OQCC0OOOQ0);
OOC0QQOOQ0:=OO000OOOQ0;
end;
destructor O0Q0QQOOQ0.Destroy;
begin
OO0OQQOOQ0.Free;
OQ0OQQOOQ0.Free;
OC0OQQOOQ0.Free;
inherited;
end;
function O0Q0QQOOQ0.OOOOQQOOQ0:O0CQQ0COQ0;
begin
Result:=O0CQQ0COQ0(OOCCQOCOQ0.OCQOQOCOQ0);
end;
function O0Q0QQOOQ0.OQOOQQOOQ0:OOO0CQQOQ0;
begin
Result:=OOO0CQQOQ0(OOCCQOCOQ0);
end;
procedure O0Q0QQOOQ0.OCOOQQOOQ0(const O0QOQQOOQ0:TBytes);
var
OOQOQQOOQ0:OO0000OOQ0;
OQQOQQOOQ0,OCQOQQOOQ0:integer;
O0COQQOOQ0:Integer;
OOCOQQOOQ0,OQCOQQOOQ0:byte;
OCCOQQOOQ0:OCCQQQOOQ0;
begin
OOQOQQOOQ0:=OO0000OOQ0.Create(O0QOQQOOQ0);
try
OOQOQQOOQ0.OOQ000OOQ0;
OOQOQQOOQ0.OQO000OOQ0;
OOCOQQOOQ0:=OOQOQQOOQ0.OQO000OOQ0;
OOQOQQOOQ0.O0Q000OOQ0;
O0COQQOOQ0:=OOQOQQOOQ0.O0Q000OOQ0;
if OOQOQQOOQ0.OQO000OOQ0=$FF then
O00OQQOOQ0:=O00OQQOOQ0 or$80;
OQQOQQOOQ0:=OOQOQQOOQ0.OCC000OOQ0;
OOQOQQOOQ0.OQO000OOQ0;
OOQOQQOOQ0.O0Q000OOQ0;
OCQOQQOOQ0:=OOQOQQOOQ0.OOQ000OOQ0;
if OO0OQQOOQ0=nil then begin
OO0OQQOOQ0:=TList.Create;
OQ0OQQOOQ0:=TCRObjectList.Create;
O00QOOOOQ0(OOQOQQOOQ0,OO0OQQOOQ0);
OCC0QQOOQ0:=OCI_TYPECODE_OBJECT;
if OO0OQQOOQ0.Count=1 then begin
OCCOQQOOQ0:=OCCQQQOOQ0(OO0OQQOOQ0[0]);
case OCCOQQOOQ0.O000O0COQ0 of
OCI_TYPECODE_OPAQUE:begin
if O00OQQOOQ0 and$80<>0 then begin
OCC0QQOOQ0:=OCCOQQOOQ0.O000O0COQ0;
OO0OQQOOQ0.Clear;
end;
end;
OCI_TYPECODE_VARRAY,OCI_TYPECODE_TABLE:begin
OCC0QQOOQ0:=OCI_TYPECODE_NAMEDCOLLECTION;
OC0OQQOOQ0:=O0QC0OOOQ0(OOQOQQOOQ0,False);
OC0OQQOOQ0.O000O0COQ0:=OCCOQQOOQ0.O000O0COQ0;
OC0OQQOOQ0.OQO0QQOOQ0:=OCCOQQOOQ0.O0C0O0COQ0;
OO0OQQOOQ0.Clear;
OQ0OQQOOQ0.Clear;
end;
end;
end;
if OOCOQQOOQ0>=3 then begin
OOQOQQOOQ0.OCC000OOQ0:=OQQOQQOOQ0+OCQOQQOOQ0+2+2*O0COQQOOQ0;
OQCOQQOOQ0:=OOQOQQOOQ0.OQO000OOQ0;
if OQCOQQOOQ0 and OOCOCOCOQ0<>0 then
O00OQQOOQ0:=O00OQQOOQ0 or$10;
if OQCOQQOOQ0 and O0COCOCOQ0<>0 then
O00OQQOOQ0:=O00OQQOOQ0 or$20;
if OOQOQQOOQ0.OQO000OOQ0<>1 then
O00OQQOOQ0:=O00OQQOOQ0 or$40;
end;
end;
finally
OOQOQQOOQ0.Free;
end;
end;
procedure O0Q0QQOOQ0.O00QOOOOQ0(OO0QOOOOQ0:OO0000OOQ0;OQ0QOOOOQ0:TList);
var
OC0QOOOOQ0:O0COQOCOQ0;
begin
while true do begin
OC0QOOOOQ0:=O0QC0OOOQ0(OO0QOOOOQ0,True);
if OC0QOOOOQ0<>nil then begin
if OQ0QOOOOQ0<>nil then
OQ0QOOOOQ0.Add(OC0QOOOOQ0);
end
else
break;
end;
end;
procedure O0Q0QQOOQ0.O0OQOOOOQ0(const OOOQOOOOQ0:TBytes);
var
OQOQOOOOQ0:OO0000OOQ0;
begin
OQOQOOOOQ0:=OO0000OOQ0.Create(OOOQOOOOQ0);
try
OQOQOOOOQ0.OOQ000OOQ0;
O0OOQQOOQ0:=OQOQOOOOQ0.OOQ000OOQ0;
OCOQOOOOQ0(OQOQOOOOQ0);
finally
OQOQOOOOQ0.Free;
end;
end;
procedure O0Q0QQOOQ0.OCOQOOOOQ0(O0QQOOOOQ0:OO0000OOQ0);
var
OOQQOOOOQ0:integer;
OQQQOOOOQ0:OCCQQQOOQ0;
OCQQOOOOQ0:OCCQQQOOQ0;
begin
for OOQQOOOOQ0:=0 to OQ0OQQOOQ0.Count-1 do begin
OQQQOOOOQ0:=OCCQQQOOQ0(OQ0OQQOOQ0[OOQQOOOOQ0]);
if OOQQOOOOQ0=0 then
OQQQOOOOQ0.O00CQQOOQ0:=0
else begin
OCQQOOOOQ0:=OCCQQQOOQ0(OQ0OQQOOQ0[OOQQOOOOQ0-1]);
OQQQOOOOQ0.O00CQQOOQ0:=OCQQOOOOQ0.O00CQQOOQ0+OCQQOOOOQ0.OO0CQQOOQ0;
end;
end;
if OQ0OQQOOQ0.Count>0 then begin
OCQQOOOOQ0:=OCCQQQOOQ0(OQ0OQQOOQ0[OQ0OQQOOQ0.Count-1]);
O0OOQQOOQ0:=OCQQOOOOQ0.O00CQQOOQ0+OCQQOOOOQ0.OO0CQQOOQ0;
end
else
O0OOQQOOQ0:=0;
end;
procedure O0Q0QQOOQ0.O0CQOOOOQ0(OOCQOOOOQ0:pOCIError);
var
OQCQOOOOQ0:sb2;
OCCQOOOOQ0:OOCCQ0COQ0;
O00COOOOQ0:OOQ0O0QOQ0;
OO0COOOOQ0:pOCIDefine;
OQ0COOOOQ0,OC0COOOOQ0,O0OCOOOOQ0,OOOCOOOOQ0:integer;
OQOCOOOOQ0:IntPtr;
OCOCOOOOQ0,O0QCOOOOQ0,OOQCOOOOQ0:IntPtr;
OQQCOOOOQ0,OCQCOOOOQ0,O0CCOOOOQ0:IntPtr;
OOCCOOOOQ0,OQCCOOOOQ0,OCCCOOOOQ0:IntPtr;
O000OOOOQ0,OO00OOOOQ0,OQ00OOOOQ0:IntPtr;
begin
OQCQOOOOQ0:=0;
OCCQOOOOQ0:=OOCCQ0COQ0.Create(OOCCQOCOQ0);
try
OCCQOOOOQ0.OQQCCQQOQ0:=O0QQCOOOQ0;
OCCQOOOOQ0.O0CCCQQOQ0:='SELECT OWNER, TYPE_NAME, SUPERTYPE_OWNER, SUPERTYPE_NAME FROM SYS.ALL_TYPES WHERE TYPE_OID = :1';
OCCQOOOOQ0.OOCCCQQOQ0:=OCI_STMT_SELECT;
O00COOOOQ0:=OOQ0O0QOQ0.Create(OCCQOOOOQ0);
O00COOOOQ0.OCCCO0COQ0:='1';
O00COOOOQ0.O000O0COQ0:=SQLT_BIN;
O00COOOOQ0.O0Q0O0COQ0:=@OOC0QQOOQ0[0];
O00COOOOQ0.OOQ0O0COQ0:=Length(OOC0QQOOQ0);
O00COOOOQ0.OQQ0O0COQ0:=@OQCQOOOOQ0;
OCCQOOOOQ0.OCCCCQQOQ0.Add(O00COOOOQ0);
OCOO0QOOQ0(OCCQOOOOQ0.OQQQCQQOQ0(OOCQOOOOQ0,1,0,OCI_DEFAULT),OCOQCOOOQ0.O00CQ0COQ0,OOCQOOOOQ0);
OQ0COOOOQ0:=O0QQCOOOQ0.OQCQO0QOQ0+1;
if OCOQCOOOQ0.O00CQ0COQ0 then
OQ0COOOOQ0:=OQ0COOOOQ0*2;
OQ0COOOOQ0:=(OQ0COOOOQ0+1)and$FFFFFFFE;
OC0COOOOQ0:=OQ0COOOOQ0*4;
O0OCOOOOQ0:=OC0COOOOQ0+4*4;
OQOCOOOOQ0:=Marshal.AllocHGlobal(O0OCOOOOQ0);
try
OCOCOOOOQ0:=OQOCOOOOQ0;
OOQCOOOOQ0:=PtrOffset(OQOCOOOOQ0,OC0COOOOQ0);
O0QCOOOOQ0:=PtrOffset(OOQCOOOOQ0,2);
OCOO0QOOQ0(OCCQOOOOQ0.O0QQ0QQOQ0(OO0COOOOQ0,OOCQOOOOQ0,1,OCOCOOOOQ0,OQ0COOOOQ0,SQLT_VCS,OOQCOOOOQ0,O0QCOOOOQ0),OCOQCOOOQ0.O00CQ0COQ0,OOCQOOOOQ0);
OCOO0QOOQ0(OO0OO0COQ0(GetGCHandleTarget(OO0COOOOQ0)).OQ0OO0COQ0(OOCQOOOOQ0,O0OCOOOOQ0,O0OCOOOOQ0,O0OCOOOOQ0),OCOQCOOOQ0.O00CQ0COQ0,OOCQOOOOQ0);
OQQCOOOOQ0:=PtrOffset(OCOCOOOOQ0,OQ0COOOOQ0);
O0CCOOOOQ0:=PtrOffset(OOQCOOOOQ0,4);
OCQCOOOOQ0:=PtrOffset(O0QCOOOOQ0,4);
OCOO0QOOQ0(OCCQOOOOQ0.O0QQ0QQOQ0(OO0COOOOQ0,OOCQOOOOQ0,2,OQQCOOOOQ0,OQ0COOOOQ0,SQLT_VCS,O0CCOOOOQ0,OCQCOOOOQ0),OCOQCOOOQ0.O00CQ0COQ0,OOCQOOOOQ0);
OCOO0QOOQ0(OO0OO0COQ0(GetGCHandleTarget(OO0COOOOQ0)).OQ0OO0COQ0(OOCQOOOOQ0,O0OCOOOOQ0,O0OCOOOOQ0,O0OCOOOOQ0),OCOQCOOOQ0.O00CQ0COQ0,OOCQOOOOQ0);
OOCCOOOOQ0:=PtrOffset(OQQCOOOOQ0,OQ0COOOOQ0);
OCCCOOOOQ0:=PtrOffset(O0CCOOOOQ0,4);
OQCCOOOOQ0:=PtrOffset(OCQCOOOOQ0,4);
OCOO0QOOQ0(OCCQOOOOQ0.O0QQ0QQOQ0(OO0COOOOQ0,OOCQOOOOQ0,3,OOCCOOOOQ0,OQ0COOOOQ0,SQLT_VCS,OCCCOOOOQ0,OQCCOOOOQ0),OCOQCOOOQ0.O00CQ0COQ0,OOCQOOOOQ0);
OCOO0QOOQ0(OO0OO0COQ0(GetGCHandleTarget(OO0COOOOQ0)).OQ0OO0COQ0(OOCQOOOOQ0,O0OCOOOOQ0,O0OCOOOOQ0,O0OCOOOOQ0),OCOQCOOOQ0.O00CQ0COQ0,OOCQOOOOQ0);
O000OOOOQ0:=PtrOffset(OOCCOOOOQ0,OQ0COOOOQ0);
OQ00OOOOQ0:=PtrOffset(OCCCOOOOQ0,4);
OO00OOOOQ0:=PtrOffset(OQCCOOOOQ0,4);
OCOO0QOOQ0(OCCQOOOOQ0.O0QQ0QQOQ0(OO0COOOOQ0,OOCQOOOOQ0,4,O000OOOOQ0,OQ0COOOOQ0,SQLT_VCS,OQ00OOOOQ0,OO00OOOOQ0),OCOQCOOOQ0.O00CQ0COQ0,OOCQOOOOQ0);
OCOO0QOOQ0(OO0OO0COQ0(GetGCHandleTarget(OO0COOOOQ0)).OQ0OO0COQ0(OOCQOOOOQ0,O0OCOOOOQ0,O0OCOOOOQ0,O0OCOOOOQ0),OCOQCOOOQ0.O00CQ0COQ0,OOCQOOOOQ0);
OCOO0QOOQ0(OCCQOOOOQ0.OC0QCQQOQ0(OOCQOOOOQ0,1),OCOQCOOOQ0.O00CQ0COQ0,OOCQOOOOQ0);
if Marshal.ReadInt16(OOQCOOOOQ0)>=0 then begin
OOOCOOOOQ0:=Marshal.ReadInt16(O0QCOOOOQ0);
OOQ0QQOOQ0:=OQOQCQOOQ0(O0OQCQOOQ0(OCCQOOOOQ0.OQQCCQQOQ0.OOQQO0QOQ0),OCOQCOOOQ0.O00CQ0COQ0,OCOCOOOOQ0,OOOCOOOOQ0);
end
else
OOQ0QQOOQ0:='';
if Marshal.ReadInt16(O0CCOOOOQ0)>=0 then begin
OOOCOOOOQ0:=Marshal.ReadInt16(OCQCOOOOQ0);
OQQ0QQOOQ0:=OQOQCQOOQ0(O0OQCQOOQ0(OCCQOOOOQ0.OQQCCQQOQ0.OOQQO0QOQ0),OCOQCOOOQ0.O00CQ0COQ0,OQQCOOOOQ0,OOOCOOOOQ0);
end
else
OQQ0QQOOQ0:='';
if Marshal.ReadInt16(OCCCOOOOQ0)>=0 then begin
OOOCOOOOQ0:=Marshal.ReadInt16(OQCCOOOOQ0);
O0C0QQOOQ0:=OQOQCQOOQ0(O0OQCQOOQ0(OCCQOOOOQ0.OQQCCQQOQ0.OOQQO0QOQ0),OCOQCOOOQ0.O00CQ0COQ0,OOCCOOOOQ0,OOOCOOOOQ0);
end
else
O0C0QQOOQ0:='';
if Marshal.ReadInt16(OQ00OOOOQ0)>=0 then begin
OOOCOOOOQ0:=Marshal.ReadInt16(OO00OOOOQ0);
OCQ0QQOOQ0:=OQOQCQOOQ0(O0OQCQOOQ0(OCCQOOOOQ0.OQQCCQQOQ0.OOQQO0QOQ0),OCOQCOOOQ0.O00CQ0COQ0,O000OOOOQ0,OOOCOOOOQ0);
end
else
OCQ0QQOOQ0:='';
finally
Marshal.FreeHGlobal(OQOCOOOOQ0);
end;
finally
OCCQOOOOQ0.Free;
end;
end;
procedure O0Q0QQOOQ0.OC00OOOOQ0(O0O0OOOOQ0:pOCIError);
var
OOO0OOOOQ0:OOCCQ0COQ0;
OQO0OOOOQ0:OOQ0O0QOQ0;
OCO0OOOOQ0:pOCIDefine;
O0Q0OOOOQ0,OOQ0OOOOQ0:sb2;
OQQ0OOOOQ0:TBytes;
OCQ0OOOOQ0:TBytes;
O0C0OOOOQ0,OOC0OOOOQ0,OQC0OOOOQ0,OCC0OOOOQ0:integer;
O00OOOOOQ0:IntPtr;
OO0OOOOOQ0,OQ0OOOOOQ0,OC0OOOOOQ0:IntPtr;
O0OOOOOOQ0,OOOOOOOOQ0,OQOOOOOOQ0:IntPtr;
OCOOOOOOQ0,O0QOOOOOQ0:string;
begin
O0Q0OOOOQ0:=-1;
OOQ0OOOOQ0:=0;
OOO0OOOOQ0:=OOCCQ0COQ0.Create(OCOQCOOOQ0);
try
OOO0OOOOQ0.OQQCCQQOQ0:=O0QQCOOOQ0;
OOO0OOOOQ0.O0CCCQQOQ0:='SELECT ELEM_TYPE_OWNER, ELEM_TYPE_NAME FROM SYS.ALL_COLL_TYPES WHERE OWNER = :1 AND TYPE_NAME = :2';
OOO0OOOOQ0.OOCCCQQOQ0:=OCI_STMT_SELECT;
OQQ0OOOOQ0:=O00CCQOOQ0(O0QQCOOOQ0.OOCOQOQOQ0.O00CQ0COQ0,O0OQCQOOQ0(OOO0OOOOQ0.OQQCCQQOQ0.OOQQO0QOQ0),OOQ0QQOOQ0);
OQO0OOOOQ0:=OOQ0O0QOQ0.Create(OOO0OOOOQ0);
OQO0OOOOQ0.OCCCO0COQ0:='1';
OQO0OOOOQ0.O000O0COQ0:=SQLT_CHR;
if OOQQCOOOQ0<>'' then begin
OQO0OOOOQ0.O0Q0O0COQ0:=@OQQ0OOOOQ0[0];
OQO0OOOOQ0.OOQ0O0COQ0:=Length(OQQ0OOOOQ0);
OQO0OOOOQ0.OQQ0O0COQ0:=@OOQ0OOOOQ0;
end
else begin
OQO0OOOOQ0.O0Q0O0COQ0:=nil;
OQO0OOOOQ0.OOQ0O0COQ0:=0;
OQO0OOOOQ0.OQQ0O0COQ0:=@O0Q0OOOOQ0
end;
OOO0OOOOQ0.OCCCCQQOQ0.Add(OQO0OOOOQ0);
OCQ0OOOOQ0:=O00CCQOOQ0(O0QQCOOOQ0.OOCOQOQOQ0.O00CQ0COQ0,O0OQCQOOQ0(OOO0OOOOQ0.OQQCCQQOQ0.OOQQO0QOQ0),OQQ0QQOOQ0);
OQO0OOOOQ0:=OOQ0O0QOQ0.Create(OOO0OOOOQ0);
OQO0OOOOQ0.OCCCO0COQ0:='2';
OQO0OOOOQ0.O000O0COQ0:=SQLT_CHR;
OQO0OOOOQ0.O0Q0O0COQ0:=@OCQ0OOOOQ0[0];
OQO0OOOOQ0.OOQ0O0COQ0:=Length(OCQ0OOOOQ0);
OQO0OOOOQ0.OQQ0O0COQ0:=@OOQ0OOOOQ0;
OOO0OOOOQ0.OCCCCQQOQ0.Add(OQO0OOOOQ0);
OCOO0QOOQ0(OOO0OOOOQ0.OQQQCQQOQ0(O0O0OOOOQ0,1,0,OCI_DEFAULT),OCOQCOOOQ0.O00CQ0COQ0,O0O0OOOOQ0);
O0C0OOOOQ0:=O0QQCOOOQ0.OQCQO0QOQ0+1;
if OCOQCOOOQ0.O00CQ0COQ0 then
O0C0OOOOQ0:=O0C0OOOOQ0*2;
O0C0OOOOQ0:=(O0C0OOOOQ0+1)and$FFFFFFFE;
OOC0OOOOQ0:=O0C0OOOOQ0*2;
OQC0OOOOQ0:=OOC0OOOOQ0+4*2;
O00OOOOOQ0:=Marshal.AllocHGlobal(OQC0OOOOQ0);
try
OO0OOOOOQ0:=O00OOOOOQ0;
OC0OOOOOQ0:=PtrOffset(O00OOOOOQ0,OOC0OOOOQ0);
OQ0OOOOOQ0:=PtrOffset(OC0OOOOOQ0,2);
OCOO0QOOQ0(OOO0OOOOQ0.O0QQ0QQOQ0(OCO0OOOOQ0,O0O0OOOOQ0,1,OO0OOOOOQ0,O0C0OOOOQ0,SQLT_VCS,OC0OOOOOQ0,OQ0OOOOOQ0),OCOQCOOOQ0.O00CQ0COQ0,O0O0OOOOQ0);
OCOO0QOOQ0(OO0OO0COQ0(GetGCHandleTarget(OCO0OOOOQ0)).OQ0OO0COQ0(O0O0OOOOQ0,OQC0OOOOQ0,OQC0OOOOQ0,OQC0OOOOQ0),OCOQCOOOQ0.O00CQ0COQ0,O0O0OOOOQ0);
O0OOOOOOQ0:=PtrOffset(OO0OOOOOQ0,O0C0OOOOQ0);
OQOOOOOOQ0:=PtrOffset(OC0OOOOOQ0,4);
OOOOOOOOQ0:=PtrOffset(OQ0OOOOOQ0,4);
OCOO0QOOQ0(OOO0OOOOQ0.O0QQ0QQOQ0(OCO0OOOOQ0,O0O0OOOOQ0,2,O0OOOOOOQ0,O0C0OOOOQ0,SQLT_VCS,OQOOOOOOQ0,OOOOOOOOQ0),OCOQCOOOQ0.O00CQ0COQ0,O0O0OOOOQ0);
OCOO0QOOQ0(OO0OO0COQ0(GetGCHandleTarget(OCO0OOOOQ0)).OQ0OO0COQ0(O0O0OOOOQ0,OQC0OOOOQ0,OQC0OOOOQ0,OQC0OOOOQ0),OCOQCOOOQ0.O00CQ0COQ0,O0O0OOOOQ0);
OCOO0QOOQ0(OOO0OOOOQ0.OC0QCQQOQ0(O0O0OOOOQ0,1),OCOQCOOOQ0.O00CQ0COQ0,O0O0OOOOQ0);
if Marshal.ReadInt16(OC0OOOOOQ0)>=0 then begin
OCC0OOOOQ0:=Marshal.ReadInt16(OQ0OOOOOQ0);
OCOOOOOOQ0:=OQOQCQOOQ0(O0OQCQOOQ0(OOO0OOOOQ0.OQQCCQQOQ0.OOQQO0QOQ0),OCOQCOOOQ0.O00CQ0COQ0,OO0OOOOOQ0,OCC0OOOOQ0);
end
else
OCOOOOOOQ0:='';
if Marshal.ReadInt16(OQOOOOOOQ0)>=0 then begin
OCC0OOOOQ0:=Marshal.ReadInt16(OOOOOOOOQ0);
O0QOOOOOQ0:=OQOQCQOOQ0(O0OQCQOOQ0(OOO0OOOOQ0.OQQCCQQOQ0.OOQQO0QOQ0),OCOQCOOOQ0.O00CQ0COQ0,O0OOOOOOQ0,OCC0OOOOQ0);
end
else
O0QOOOOOQ0:='';
OC0OQQOOQ0.O00OO0COQ0:=O0Q0QQOOQ0(O0QQCOOOQ0.OQQ0QOQOQ0(OCOOOOOOQ0,O0QOOOOOQ0,O0O0OOOOQ0));
OC0OQQOOQ0.OCC0O0COQ0:=OC0OQQOOQ0.O00OO0COQ0.OOCQCOOOQ0;
OC0OQQOOQ0.OOO0QQOOQ0:=OC0OQQOOQ0.O00OO0COQ0.OCCQCOOOQ0;
finally
Marshal.FreeHGlobal(O00OOOOOQ0);
end;
finally
OOO0OOOOQ0.Free;
end;
end;
procedure O0Q0QQOOQ0.OOQOOOOOQ0(OQQOOOOOQ0:pOCIError);
var
OCQOOOOOQ0:integer;
O0COOOOOQ0,OOCOOOOOQ0:sb2;
OQCOOOOOQ0:OOCCQ0COQ0;
OCCOOOOOQ0:OOQ0O0QOQ0;
O00Q0OOOQ0:TBytes;
OO0Q0OOOQ0:TBytes;
OQ0Q0OOOQ0:pOCIDefine;
OC0Q0OOOQ0,O0OQ0OOOQ0,OOOQ0OOOQ0,OQOQ0OOOQ0:integer;
OCOQ0OOOQ0:IntPtr;
O0QQ0OOOQ0,OOQQ0OOOQ0,OQQQ0OOOQ0:IntPtr;
OCQQ0OOOQ0,O0CQ0OOOQ0,OOCQ0OOOQ0:IntPtr;
OQCQ0OOOQ0,OCCQ0OOOQ0,O00C0OOOQ0:IntPtr;
OO0C0OOOQ0,OQ0C0OOOQ0,OC0C0OOOQ0:IntPtr;
O0OC0OOOQ0:string;
OOOC0OOOQ0:OCCQQQOOQ0;
OQOC0OOOQ0,OCOC0OOOQ0:string;
begin
O0COOOOOQ0:=-1;
OOCOOOOOQ0:=0;
OQCOOOOOQ0:=OOCCQ0COQ0.Create(OOCCQOCOQ0);
try
OQCOOOOOQ0.OQQCCQQOQ0:=O0QQCOOOQ0;
OQCOOOOOQ0.O0CCCQQOQ0:='SELECT ATTR_NAME, ATTR_TYPE_OWNER, ATTR_TYPE_NAME, CHARACTER_SET_NAME FROM SYS.ALL_TYPE_ATTRS WHERE OWNER = :1 AND TYPE_NAME = :2 ORDER BY ATTR_NO';
OQCOOOOOQ0.OOCCCQQOQ0:=OCI_STMT_SELECT;
O00Q0OOOQ0:=O00CCQOOQ0(O0QQCOOOQ0.OOCOQOQOQ0.O00CQ0COQ0,O0OQCQOOQ0(OQCOOOOOQ0.OQQCCQQOQ0.OOQQO0QOQ0),OOQ0QQOOQ0);
OCCOOOOOQ0:=OOQ0O0QOQ0.Create(OQCOOOOOQ0);
OCCOOOOOQ0.OCCCO0COQ0:='1';
OCCOOOOOQ0.O000O0COQ0:=SQLT_CHR;
if OOQQCOOOQ0<>'' then begin
OCCOOOOOQ0.O0Q0O0COQ0:=@O00Q0OOOQ0[0];
OCCOOOOOQ0.OOQ0O0COQ0:=Length(O00Q0OOOQ0);
OCCOOOOOQ0.OQQ0O0COQ0:=@OOCOOOOOQ0;
end
else begin
OCCOOOOOQ0.O0Q0O0COQ0:=nil;
OCCOOOOOQ0.OOQ0O0COQ0:=0;
OCCOOOOOQ0.OQQ0O0COQ0:=@O0COOOOOQ0
end;
OQCOOOOOQ0.OCCCCQQOQ0.Add(OCCOOOOOQ0);
OO0Q0OOOQ0:=O00CCQOOQ0(O0QQCOOOQ0.OOCOQOQOQ0.O00CQ0COQ0,O0OQCQOOQ0(OQCOOOOOQ0.OQQCCQQOQ0.OOQQO0QOQ0),OQQ0QQOOQ0);
OCCOOOOOQ0:=OOQ0O0QOQ0.Create(OQCOOOOOQ0);
OCCOOOOOQ0.OCCCO0COQ0:='2';
OCCOOOOOQ0.O000O0COQ0:=SQLT_CHR;
OCCOOOOOQ0.O0Q0O0COQ0:=@OO0Q0OOOQ0[0];
OCCOOOOOQ0.OOQ0O0COQ0:=Length(OO0Q0OOOQ0);
OCCOOOOOQ0.OQQ0O0COQ0:=@OOCOOOOOQ0;
OQCOOOOOQ0.OCCCCQQOQ0.Add(OCCOOOOOQ0);
OCOO0QOOQ0(OQCOOOOOQ0.OQQQCQQOQ0(OQQOOOOOQ0,1,0,OCI_DEFAULT),OCOQCOOOQ0.O00CQ0COQ0,OQQOOOOOQ0);
OC0Q0OOOQ0:=O0QQCOOOQ0.OQCQO0QOQ0+1;
if OCOQCOOOQ0.O00CQ0COQ0 then
OC0Q0OOOQ0:=OC0Q0OOOQ0*2;
OC0Q0OOOQ0:=(OC0Q0OOOQ0+1)and$FFFFFFFE;
O0OQ0OOOQ0:=OC0Q0OOOQ0*4;
OOOQ0OOOQ0:=O0OQ0OOOQ0+4*4;
OCOQ0OOOQ0:=Marshal.AllocHGlobal(OOOQ0OOOQ0*OO0OQQOOQ0.Count);
try
O0QQ0OOOQ0:=OCOQ0OOOQ0;
OQQQ0OOOQ0:=PtrOffset(OCOQ0OOOQ0,O0OQ0OOOQ0);
OOQQ0OOOQ0:=PtrOffset(OQQQ0OOOQ0,2);
OCOO0QOOQ0(OQCOOOOOQ0.O0QQ0QQOQ0(OQ0Q0OOOQ0,OQQOOOOOQ0,1,O0QQ0OOOQ0,OC0Q0OOOQ0,SQLT_VCS,OQQQ0OOOQ0,OOQQ0OOOQ0),OCOQCOOOQ0.O00CQ0COQ0,OQQOOOOOQ0);
OCOO0QOOQ0(OO0OO0COQ0(GetGCHandleTarget(OQ0Q0OOOQ0)).OQ0OO0COQ0(OQQOOOOOQ0,OOOQ0OOOQ0,OOOQ0OOOQ0,OOOQ0OOOQ0),OCOQCOOOQ0.O00CQ0COQ0,OQQOOOOOQ0);
OCQQ0OOOQ0:=PtrOffset(O0QQ0OOOQ0,OC0Q0OOOQ0);
OOCQ0OOOQ0:=PtrOffset(OQQQ0OOOQ0,4);
O0CQ0OOOQ0:=PtrOffset(OOQQ0OOOQ0,4);
OCOO0QOOQ0(OQCOOOOOQ0.O0QQ0QQOQ0(OQ0Q0OOOQ0,OQQOOOOOQ0,2,OCQQ0OOOQ0,OC0Q0OOOQ0,SQLT_VCS,OOCQ0OOOQ0,O0CQ0OOOQ0),OCOQCOOOQ0.O00CQ0COQ0,OQQOOOOOQ0);
OCOO0QOOQ0(OO0OO0COQ0(GetGCHandleTarget(OQ0Q0OOOQ0)).OQ0OO0COQ0(OQQOOOOOQ0,OOOQ0OOOQ0,OOOQ0OOOQ0,OOOQ0OOOQ0),OCOQCOOOQ0.O00CQ0COQ0,OQQOOOOOQ0);
OQCQ0OOOQ0:=PtrOffset(OCQQ0OOOQ0,OC0Q0OOOQ0);
O00C0OOOQ0:=PtrOffset(OOCQ0OOOQ0,4);
OCCQ0OOOQ0:=PtrOffset(O0CQ0OOOQ0,4);
OCOO0QOOQ0(OQCOOOOOQ0.O0QQ0QQOQ0(OQ0Q0OOOQ0,OQQOOOOOQ0,3,OQCQ0OOOQ0,OC0Q0OOOQ0,SQLT_VCS,O00C0OOOQ0,OCCQ0OOOQ0),OCOQCOOOQ0.O00CQ0COQ0,OQQOOOOOQ0);
OCOO0QOOQ0(OO0OO0COQ0(GetGCHandleTarget(OQ0Q0OOOQ0)).OQ0OO0COQ0(OQQOOOOOQ0,OOOQ0OOOQ0,OOOQ0OOOQ0,OOOQ0OOOQ0),OCOQCOOOQ0.O00CQ0COQ0,OQQOOOOOQ0);
OO0C0OOOQ0:=PtrOffset(OQCQ0OOOQ0,OC0Q0OOOQ0);
OC0C0OOOQ0:=PtrOffset(O00C0OOOQ0,4);
OQ0C0OOOQ0:=PtrOffset(OCCQ0OOOQ0,4);
OCOO0QOOQ0(OQCOOOOOQ0.O0QQ0QQOQ0(OQ0Q0OOOQ0,OQQOOOOOQ0,4,OO0C0OOOQ0,OC0Q0OOOQ0,SQLT_VCS,OC0C0OOOQ0,OQ0C0OOOQ0),OCOQCOOOQ0.O00CQ0COQ0,OQQOOOOOQ0);
OCOO0QOOQ0(OO0OO0COQ0(GetGCHandleTarget(OQ0Q0OOOQ0)).OQ0OO0COQ0(OQQOOOOOQ0,OOOQ0OOOQ0,OOOQ0OOOQ0,OOOQ0OOOQ0),OCOQCOOOQ0.O00CQ0COQ0,OQQOOOOOQ0);
OCOO0QOOQ0(OQCOOOOOQ0.OC0QCQQOQ0(OQQOOOOOQ0,OO0OQQOOQ0.Count),OCOQCOOOQ0.O00CQ0COQ0,OQQOOOOOQ0);
for OCQOOOOOQ0:=0 to OO0OQQOOQ0.Count-1 do begin
OOOC0OOOQ0:=OCCQQQOOQ0(OO0OQQOOQ0[OCQOOOOOQ0]);
if Marshal.ReadInt16(OQQQ0OOOQ0,OCQOOOOOQ0*OOOQ0OOOQ0)>=0 then begin
OQOQ0OOOQ0:=Marshal.ReadInt16(OOQQ0OOOQ0,OCQOOOOOQ0*OOOQ0OOOQ0);
OOOC0OOOQ0.OCCCO0COQ0:=OQOQCQOOQ0(O0OQCQOOQ0(OQCOOOOOQ0.OQQCCQQOQ0.OOQQO0QOQ0),OCOQCOOOQ0.O00CQ0COQ0,O0QQ0OOOQ0,OCQOOOOOQ0*OOOQ0OOOQ0,OQOQ0OOOQ0);
end
else
OOOC0OOOQ0.OCCCO0COQ0:='';
case OOOC0OOOQ0.OQ0CQQOOQ0 of
OCI_TYPECODE_OBJECT,
OCI_TYPECODE_REF,
OCI_TYPECODE_OPAQUE,
OCI_TYPECODE_NAMEDCOLLECTION:begin
if Marshal.ReadInt16(OOCQ0OOOQ0,OCQOOOOOQ0*OOOQ0OOOQ0)>=0 then begin
OQOQ0OOOQ0:=Marshal.ReadInt16(O0CQ0OOOQ0,OCQOOOOOQ0*OOOQ0OOOQ0);
OQOC0OOOQ0:=OQOQCQOOQ0(O0OQCQOOQ0(OQCOOOOOQ0.OQQCCQQOQ0.OOQQO0QOQ0),OCOQCOOOQ0.O00CQ0COQ0,OCQQ0OOOQ0,OCQOOOOOQ0*OOOQ0OOOQ0,OQOQ0OOOQ0);
end
else
OQOC0OOOQ0:='';
if Marshal.ReadInt16(O00C0OOOQ0,OCQOOOOOQ0*OOOQ0OOOQ0)>=0 then begin
OQOQ0OOOQ0:=Marshal.ReadInt16(OCCQ0OOOQ0,OCQOOOOOQ0*OOOQ0OOOQ0);
OCOC0OOOQ0:=OQOQCQOOQ0(O0OQCQOOQ0(OQCOOOOOQ0.OQQCCQQOQ0.OOQQO0QOQ0),OCOQCOOOQ0.O00CQ0COQ0,OQCQ0OOOQ0,OCQOOOOOQ0*OOOQ0OOOQ0,OQOQ0OOOQ0);
end
else
OCOC0OOOQ0:='';
OOOC0OOOQ0.O00OO0COQ0:=O0Q0QQOOQ0(O0QQCOOOQ0.OQQ0QOQOQ0(OQOC0OOOQ0,OCOC0OOOQ0,OQQOOOOOQ0));
OOOC0OOOQ0.OCC0O0COQ0:=OOOC0OOOQ0.O00OO0COQ0.OOC0QQOOQ0;
if OOOC0OOOQ0.OQ0CQQOOQ0 in[OCI_TYPECODE_OBJECT,OCI_TYPECODE_OPAQUE]then
OOOC0OOOQ0.OO0CQQOOQ0:=(OOOC0OOOQ0.O00OO0COQ0.OO0CCOOOQ0+3)and$FFFFFFFC;
end;
OCI_TYPECODE_CLOB:begin
if Marshal.ReadInt16(OC0C0OOOQ0,OCQOOOOOQ0*OOOQ0OOOQ0)>=0 then begin
OQOQ0OOOQ0:=Marshal.ReadInt16(OQ0C0OOOQ0,OCQOOOOOQ0*OOOQ0OOOQ0);
O0OC0OOOQ0:=OQOQCQOOQ0(O0OQCQOOQ0(OQCOOOOOQ0.OQQCCQQOQ0.OOQQO0QOQ0),OCOQCOOOQ0.O00CQ0COQ0,OO0C0OOOQ0,OCQOOOOOQ0*OOOQ0OOOQ0,OQOQ0OOOQ0);
end
else
O0OC0OOOQ0:='';
if O0OC0OOOQ0='NCHAR_CS' then
OOOC0OOOQ0.OQC0O0COQ0:=2;
end;
end;
end;
finally
Marshal.FreeHGlobal(OCOQ0OOOQ0);
end;
finally
OQCOOOOOQ0.Free;
end;
end;
function O0Q0QQOOQ0.O0QC0OOOQ0(OOQC0OOOQ0:OO0000OOQ0;OQQC0OOOQ0:boolean):OCCQQQOOQ0;
var
OCQC0OOOQ0,O0CC0OOOQ0:byte;
begin
while True do begin
repeat
OCQC0OOOQ0:=OOQC0OOOQ0.OQO000OOQ0;
until OCQC0OOOQ0<>43;
case OCQC0OOOQ0 of
44:begin
O0CC0OOOQ0:=OOQC0OOOQ0.OQO000OOQ0;
if O0CC0OOOQ0 and OOCOCOCOQ0<>0 then
O00OQQOOQ0:=O00OQQOOQ0 or$10;
Continue;
end;
40,42:begin
Result:=nil;
Exit;
end;
end;
Result:=OCCQQQOOQ0.Create(Self);
Result.OO0CQQOOQ0:=-1;
case OCQC0OOOQ0 of
1:begin
Result.O000O0COQ0:=SQLT_AFC;
Result.OO00O0COQ0:=OOQC0OOOQ0.O0Q000OOQ0;
Result.OQC0O0COQ0:=OOQC0OOOQ0.OQO000OOQ0 and$7F;
Result.OOC0O0COQ0:=ub2(OOQC0OOOQ0.O0Q000OOQ0);
if Result.OQC0O0COQ0=2 then begin
Result.OOO0QQOOQ0:=OCI_TYPECODE_NCHAR;
Result.OC00O0COQ0:=1;
Result.OQ00O0COQ0:=Result.OO00O0COQ0 shr 1;
end
else begin
Result.OOO0QQOOQ0:=OCI_TYPECODE_CHAR;
Result.OC00O0COQ0:=0;
if Result.OOC0O0COQ0<>0 then
Result.OQ00O0COQ0:=Result.OO00O0COQ0 div GetMaxCharLength(Result.OOC0O0COQ0)
else
Result.OQ00O0COQ0:=Result.OO00O0COQ0 div GetMaxCharLength(O0QQCOOOQ0.OQ0QO0QOQ0)
end;
Result.OO0CQQOOQ0:=SizeOf(IntPtr);
end;
2:begin
Result.O000O0COQ0:=SQLT_DAT;
Result.OOO0QQOOQ0:=OCI_TYPECODE_DATE;
Result.OO00O0COQ0:=8;
end;
3,4,6:begin
Result.O000O0COQ0:=SQLT_NUM;
Result.OOO0QQOOQ0:=OCI_TYPECODE_NUMBER;
Result.OO00O0COQ0:=22;
Result.O0O0O0COQ0:=OOQC0OOOQ0.OQO000OOQ0;
Result.OOO0O0COQ0:=sb1(OOQC0OOOQ0.OQO000OOQ0);
end;
5:begin
Result.O000O0COQ0:=SQLT_FLT;
Result.OOO0QQOOQ0:=OCI_TYPECODE_FLOAT;
Result.OO00O0COQ0:=8;
Result.O0O0O0COQ0:=OOQC0OOOQ0.OQO000OOQ0;
end;
7:begin
Result.O000O0COQ0:=SQLT_VCS;
Result.OO00O0COQ0:=OOQC0OOOQ0.O0Q000OOQ0;
Result.OQC0O0COQ0:=OOQC0OOOQ0.OQO000OOQ0 and$7F;
Result.OOC0O0COQ0:=ub2(OOQC0OOOQ0.O0Q000OOQ0);
if Result.OQC0O0COQ0=2 then begin
Result.OOO0QQOOQ0:=OCI_TYPECODE_NVARCHAR2;
Result.OC00O0COQ0:=1;
Result.OQ00O0COQ0:=Result.OO00O0COQ0 shr 1;
end
else begin
Result.OOO0QQOOQ0:=OCI_TYPECODE_VARCHAR2;
Result.OC00O0COQ0:=0;
if Result.OOC0O0COQ0<>0 then
Result.OQ00O0COQ0:=Result.OO00O0COQ0 div GetMaxCharLength(Result.OOC0O0COQ0)
else
Result.OQ00O0COQ0:=Result.OO00O0COQ0 div GetMaxCharLength(O0QQCOOOQ0.OQ0QO0QOQ0)
end;
Result.O0O0QQOOQ0:=SizeOf(IntPtr);
end;
8:begin
Result.O000O0COQ0:=SQLT_INT;
Result.OOO0QQOOQ0:=OCI_TYPECODE_INTEGER;
Result.OO00O0COQ0:=4;
end;
9:begin
Result.O000O0COQ0:=SQLT_REF;
Result.OOO0QQOOQ0:=OCI_TYPECODE_REF;
Result.OO00O0COQ0:=SizeOf(IntPtr);
end;
19:begin
Result.O000O0COQ0:=SQLT_LVB;
Result.OOO0QQOOQ0:=OCI_TYPECODE_RAW;
Result.OO00O0COQ0:=OOQC0OOOQ0.O0Q000OOQ0;
Result.O0O0QQOOQ0:=SizeOf(IntPtr);
end;
21:begin
Result.O000O0COQ0:=SQLT_TIMESTAMP;
Result.OOO0QQOOQ0:=OCI_TYPECODE_TIMESTAMP;
Result.OO00O0COQ0:=SizeOf(IntPtr);
Result.OQO0O0COQ0:=OOQC0OOOQ0.OQO000OOQ0;
end;
23:begin
Result.O000O0COQ0:=SQLT_TIMESTAMP_TZ;
Result.OOO0QQOOQ0:=OCI_TYPECODE_TIMESTAMP_TZ;
Result.OO00O0COQ0:=SizeOf(IntPtr);
Result.OQO0O0COQ0:=OOQC0OOOQ0.OQO000OOQ0;
end;
33:begin
Result.O000O0COQ0:=SQLT_TIMESTAMP_LTZ;
Result.OOO0QQOOQ0:=OCI_TYPECODE_TIMESTAMP_LTZ;
Result.OO00O0COQ0:=SizeOf(IntPtr);
Result.OQO0O0COQ0:=OOQC0OOOQ0.OQO000OOQ0;
end;
24:begin
if OOQC0OOOQ0.OQO000OOQ0=7 then begin
Result.O000O0COQ0:=SQLT_INTERVAL_YM;
Result.OOO0QQOOQ0:=OCI_TYPECODE_INTERVAL_YM;
end
else begin
Result.O000O0COQ0:=SQLT_INTERVAL_DS;
Result.OOO0QQOOQ0:=OCI_TYPECODE_INTERVAL_DS;
end;
Result.OO00O0COQ0:=SizeOf(IntPtr);
Result.O0O0O0COQ0:=OOQC0OOOQ0.OQO000OOQ0;
Result.OQO0O0COQ0:=OOQC0OOOQ0.OQO000OOQ0;
end;
29:begin
Result.O000O0COQ0:=SQLT_CLOB;
Result.OOO0QQOOQ0:=OCI_TYPECODE_CLOB;
Result.OO00O0COQ0:=SizeOf(IntPtr);
end;
30:begin
Result.O000O0COQ0:=SQLT_BLOB;
Result.OOO0QQOOQ0:=OCI_TYPECODE_BLOB;
Result.OO00O0COQ0:=SizeOf(IntPtr);
end;
31:begin
Result.O000O0COQ0:=SQLT_BFILE;
Result.OOO0QQOOQ0:=OCI_TYPECODE_BFILE;
Result.OO00O0COQ0:=SizeOf(IntPtr);
end;
39:begin
Result.O000O0COQ0:=SQLT_NTY;
Result.OOO0QQOOQ0:=OCI_TYPECODE_OBJECT;
Result.OO00O0COQ0:=SizeOf(IntPtr);
Result.O0O0QQOOQ0:=0;
end;
27:begin
OOQC0OOOQ0.OOQ000OOQ0;
Result.OCO0QQOOQ0:=True;
case OOQC0OOOQ0.OQO000OOQ0 of
OO0QQOCOQ0:begin
Result.O000O0COQ0:=OCI_TYPECODE_OPAQUE;
Result.OOO0QQOOQ0:=OCI_TYPECODE_OPAQUE;
end;
OCCOCOCOQ0:begin
Result.O000O0COQ0:=SQLT_NTY;
Result.OOO0QQOOQ0:=OCI_TYPECODE_NAMEDCOLLECTION;
end;
OQCOCOCOQ0:begin
Result.O000O0COQ0:=SQLT_REF;
Result.OOO0QQOOQ0:=OCI_TYPECODE_OBJECT;
end
else begin
Result.O000O0COQ0:=SQLT_NTY;
Result.OOO0QQOOQ0:=OCI_TYPECODE_OBJECT;
end;
end;
Result.OO00O0COQ0:=SizeOf(IntPtr);
end;
28:begin
OOQC0OOOQ0.OOQ000OOQ0;
Result.O0C0O0COQ0:=OOQC0OOOQ0.OOQ000OOQ0;
if OOQC0OOOQ0.OQO000OOQ0=3 then begin
Result.O000O0COQ0:=OCI_TYPECODE_VARRAY;
Result.OOO0QQOOQ0:=OCI_TYPECODE_VARRAY;
end
else begin
Result.O000O0COQ0:=OCI_TYPECODE_TABLE;
Result.OOO0QQOOQ0:=OCI_TYPECODE_TABLE;
end;
Result.OO00O0COQ0:=SizeOf(IntPtr);
end;
37:begin
Result.O000O0COQ0:=SQLT_IBFLOAT;
Result.OOO0QQOOQ0:=OCI_TYPECODE_BFLOAT;
Result.OO00O0COQ0:=4;
end;
45:begin
Result.O000O0COQ0:=SQLT_IBDOUBLE;
Result.OOO0QQOOQ0:=OCI_TYPECODE_BDOUBLE;
Result.OO00O0COQ0:=8;
end;
else
OOCO0QOOQ0(3115,'Unsupported data type');
end;
if Result.O0O0QQOOQ0=-1 then
Result.O0O0QQOOQ0:=Result.OO00O0COQ0;
if OQQC0OOOQ0 then
OQ0OQQOOQ0.Add(Result);
if OCQC0OOOQ0=39 then
O00QOOOOQ0(OOQC0OOOQ0,nil);
Exit;
end;
end;
function O0Q0QQOOQ0.OOCC0OOOQ0:OCQCCOOOQ0;
begin
case OCC0QQOOQ0 of
OCI_TYPECODE_OBJECT:
Result:=O0QQC0OOQ0;
OCI_TYPECODE_NAMEDCOLLECTION:
Result:=O0OQOC0OQ0;
OCI_TYPECODE_OPAQUE:
if(OQQ0QQOOQ0='ANYDATA')and(OOQ0QQOOQ0='SYS')then
Result:=OO0OQ0OOQ0
else
Result:=OCQ0Q0OOQ0;
else
Result:=nil;
end;
end;
procedure O0Q0QQOOQ0.OQ000OOOQ0(OC000OOOQ0:pOCIError);
var
O0O00OOOQ0:OOCCQ0COQ0;
OOO00OOOQ0:OOQ0O0QOQ0;
OQO00OOOQ0:TBytes;
OCO00OOOQ0:TBytes;
O0Q00OOOQ0:integer;
OOQ00OOOQ0,OQQ00OOOQ0:TBytes;
OCQ00OOOQ0,O0C00OOOQ0,OOC00OOOQ0:sb2;
OQC00OOOQ0,OCC00OOOQ0,O00O0OOOQ0,OO0O0OOOQ0:sb2;
OQ0O0OOOQ0,OC0O0OOOQ0:Integer;
O0OO0OOOQ0:boolean;
begin
{$IFNDEF VER9P}
SetLength(OQO00OOOQ0,0);
{$ENDIF}
if(OQQ0QQOOQ0='')and(Length(OOC0QQOOQ0)>0)then begin
O0CQOOOOQ0(OC000OOOQ0);
O0OO0OOOQ0:=False;
end
else
O0OO0OOOQ0:=True;
OCQ00OOOQ0:=-1;
O0C00OOOQ0:=0;
O0Q00OOOQ0:=0;
OOC00OOOQ0:=-1;
O0O00OOOQ0:=OOCCQ0COQ0.Create(OCOQCOOOQ0);
try
O0O00OOOQ0.OQQCCQQOQ0:=O0QQCOOOQ0;
if(OOQ0QQOOQ0<>'')or(O0QQCOOOQ0.OO0QO0QOQ0>=10000)then
O0O00OOOQ0.O0CCCQQOQ0:='begin :1 := sys.dbms_pickler.get_type_shape(:2,:3,:4,:5,:6,:7); end;'
else
O0O00OOOQ0.O0CCCQQOQ0:='begin :1 := sys.dbms_pickler.get_type_shape(SYS_CONTEXT(''USERENV'',''CURRENT_SCHEMA''),:3,:4,:5,:6,:7); end;';
O0O00OOOQ0.OOCCCQQOQ0:=OCI_STMT_BEGIN;
OOO00OOOQ0:=OOQ0O0QOQ0.Create(O0O00OOOQ0);
OOO00OOOQ0.OCCCO0COQ0:='1';
OOO00OOOQ0.O000O0COQ0:=SQLT_INT;
OOO00OOOQ0.O0Q0O0COQ0:=@O0Q00OOOQ0;
OOO00OOOQ0.OOQ0O0COQ0:=4;
OOO00OOOQ0.OQQ0O0COQ0:=@OOC00OOOQ0;
O0O00OOOQ0.OCCCCQQOQ0.Add(OOO00OOOQ0);
if(OOQ0QQOOQ0<>'')or(O0QQCOOOQ0.OO0QO0QOQ0>=10000)then begin
OQO00OOOQ0:=O00CCQOOQ0(O0QQCOOOQ0.OOCOQOQOQ0.O00CQ0COQ0,O0OQCQOOQ0(O0QQCOOOQ0.OOQQO0QOQ0),OOQ0QQOOQ0);
OOO00OOOQ0:=OOQ0O0QOQ0.Create(O0O00OOOQ0);
OOO00OOOQ0.OCCCO0COQ0:='2';
OOO00OOOQ0.O000O0COQ0:=SQLT_CHR;
if OOQ0QQOOQ0<>'' then begin
OOO00OOOQ0.O0Q0O0COQ0:=@OQO00OOOQ0[0];
OOO00OOOQ0.OOQ0O0COQ0:=Length(OQO00OOOQ0);
OOO00OOOQ0.OQQ0O0COQ0:=@O0C00OOOQ0;
end
else begin
OOO00OOOQ0.O0Q0O0COQ0:=nil;
OOO00OOOQ0.OOQ0O0COQ0:=0;
OOO00OOOQ0.OQQ0O0COQ0:=@OCQ00OOOQ0
end;
O0O00OOOQ0.OCCCCQQOQ0.Add(OOO00OOOQ0);
end;
OCO00OOOQ0:=O00CCQOOQ0(O0QQCOOOQ0.OOCOQOQOQ0.O00CQ0COQ0,O0OQCQOOQ0(O0O00OOOQ0.OQQCCQQOQ0.OOQQO0QOQ0),OQQ0QQOOQ0);
OOO00OOOQ0:=OOQ0O0QOQ0.Create(O0O00OOOQ0);
OOO00OOOQ0.OCCCO0COQ0:='3';
OOO00OOOQ0.O000O0COQ0:=SQLT_CHR;
OOO00OOOQ0.O0Q0O0COQ0:=@OCO00OOOQ0[0];
OOO00OOOQ0.OOQ0O0COQ0:=Length(OCO00OOOQ0);
OOO00OOOQ0.OQQ0O0COQ0:=@O0C00OOOQ0;
O0O00OOOQ0.OCCCCQQOQ0.Add(OOO00OOOQ0);
SetLength(OOC0QQOOQ0,16);
OCC00OOOQ0:=-1;
OOO00OOOQ0:=OOQ0O0QOQ0.Create(O0O00OOOQ0);
OOO00OOOQ0.OCCCO0COQ0:='4';
OOO00OOOQ0.O000O0COQ0:=SQLT_BIN;
OOO00OOOQ0.O0Q0O0COQ0:=@OOC0QQOOQ0[0];
OOO00OOOQ0.OOQ0O0COQ0:=Length(OOC0QQOOQ0);
OOO00OOOQ0.OQQ0O0COQ0:=@OCC00OOOQ0;
O0O00OOOQ0.OCCCCQQOQ0.Add(OOO00OOOQ0);
OQC0QQOOQ0:=0;
OQC00OOOQ0:=-1;
OOO00OOOQ0:=OOQ0O0QOQ0.Create(O0O00OOOQ0);
OOO00OOOQ0.OCCCO0COQ0:='5';
OOO00OOOQ0.O000O0COQ0:=SQLT_INT;
OOO00OOOQ0.O0Q0O0COQ0:=@OQC0QQOOQ0;
OOO00OOOQ0.OOQ0O0COQ0:=4;
OOO00OOOQ0.OQQ0O0COQ0:=@OQC00OOOQ0;
O0O00OOOQ0.OCCCCQQOQ0.Add(OOO00OOOQ0);
OQ0O0OOOQ0:=32*1024;
SetLength(OOQ00OOOQ0,OQ0O0OOOQ0);
O00O0OOOQ0:=-1;
OQ0O0OOOQ0:=Length(OOQ00OOOQ0);
OOO00OOOQ0:=OOQ0O0QOQ0.Create(O0O00OOOQ0);
OOO00OOOQ0.OCCCO0COQ0:='6';
OOO00OOOQ0.O000O0COQ0:=SQLT_LBI;
OOO00OOOQ0.O0Q0O0COQ0:=@OOQ00OOOQ0[0];
OOO00OOOQ0.OOQ0O0COQ0:=MaxInt;
OOO00OOOQ0.OQQ0O0COQ0:=@O00O0OOOQ0;
OOO00OOOQ0.OCQ0O0COQ0:=@OQ0O0OOOQ0;
OOO00OOOQ0.OQCCO0COQ0:=@OQ0C0C0OQ0;
O0O00OOOQ0.OCCCCQQOQ0.Add(OOO00OOOQ0);
OC0O0OOOQ0:=32*1024;
SetLength(OQQ00OOOQ0,OC0O0OOOQ0);
OO0O0OOOQ0:=-1;
OC0O0OOOQ0:=Length(OQQ00OOOQ0);
OOO00OOOQ0:=OOQ0O0QOQ0.Create(O0O00OOOQ0);
OOO00OOOQ0.OCCCO0COQ0:='6';
OOO00OOOQ0.O000O0COQ0:=SQLT_LBI;
OOO00OOOQ0.O0Q0O0COQ0:=@OQQ00OOOQ0[0];
OOO00OOOQ0.OOQ0O0COQ0:=MaxInt;
OOO00OOOQ0.OQQ0O0COQ0:=@OO0O0OOOQ0;
OOO00OOOQ0.OCQ0O0COQ0:=@OC0O0OOOQ0;
OOO00OOOQ0.OQCCO0COQ0:=@OQ0C0C0OQ0;
O0O00OOOQ0.OCCCCQQOQ0.Add(OOO00OOOQ0);
OCOO0QOOQ0(O0O00OOOQ0.OQQQCQQOQ0(OC000OOOQ0,1,0,OCI_DEFAULT),OCOQCOOOQ0.O00CQ0COQ0,OC000OOOQ0);
if O0Q00OOOQ0<>0 then
OOCO0QOOQ0(04043,Format('Object %s.%s does not exist.',[OOQ0QQOOQ0,OQQ0QQOOQ0]));
OCOOQQOOQ0(OOQ00OOOQ0);
O0OQOOOOQ0(OQQ00OOOQ0);
if O0OO0OOOQ0 then
O0CQOOOOQ0(OC000OOOQ0);
finally
O0O00OOOQ0.Free;
end;
end;
procedure O0Q0QQOOQ0.OOOO0OOOQ0(OQOO0OOOQ0:pOCIError);
begin
if OCC0QQOOQ0 in[OCI_TYPECODE_OBJECT,OCI_TYPECODE_OPAQUE]then begin
if(OCC0QQOOQ0<>OCI_TYPECODE_OPAQUE)and(OO0OQQOOQ0.Count>0)then
OOQOOOOOQ0(OQOO0OOOQ0);
end
else if OCC0QQOOQ0 in[OCI_TYPECODE_NAMEDCOLLECTION]then begin
if OC0OQQOOQ0.OQ0CQQOOQ0 in[OCI_TYPECODE_OBJECT,OCI_TYPECODE_REF,OCI_TYPECODE_OPAQUE,OCI_TYPECODE_NAMEDCOLLECTION]then
OC00OOOOQ0(OQOO0OOOQ0);
end;
end;
function O0Q0QQOOQ0.O0C0QOCOQ0(OOCCQQOOQ0:IntPtr;OQCCQQOOQ0:pub4;OCCCQQOOQ0:ub4;O000QQOOQ0:pOCIError):sword;
var
OO00QQOOQ0:O0CQQ0COQ0;
begin
OO00QQOOQ0:=O0CQQ0COQ0(OQ0CQ0COQ0(GetGCHandleTarget(O000QQOOQ0)).OCQOQOCOQ0);
Result:=OCI_SUCCESS;
case OCCCQQOOQ0 of
OCI_ATTR_TYPECODE:
Marshal.WriteInt32(OOCCQQOOQ0,OCC0QQOOQ0);
OCI_ATTR_IS_FINAL_TYPE:
if O00OQQOOQ0 and$20=0 then
Marshal.WriteInt32(OOCCQQOOQ0,1)
else
Marshal.WriteInt32(OOCCQQOOQ0,0);
OCI_ATTR_NUM_TYPE_ATTRS:
Marshal.WriteInt32(OOCCQQOOQ0,OO0OQQOOQ0.Count);
OCI_ATTR_LIST_TYPE_ATTRS:
Marshal.WriteIntPtr(OOCCQQOOQ0,Self.OQQOQOCOQ0);
OCI_ATTR_COLLECTION_TYPECODE:
if OC0OQQOOQ0<>nil then
Marshal.WriteInt32(OOCCQQOOQ0,OC0OQQOOQ0.O000O0COQ0)
else
Marshal.WriteInt32(OOCCQQOOQ0,0);
OCI_ATTR_COLLECTION_ELEMENT:
if OC0OQQOOQ0<>nil then
Marshal.WriteIntPtr(OOCCQQOOQ0,OCCQQQOOQ0(OC0OQQOOQ0).OQQOQOCOQ0)
else
Marshal.WriteIntPtr(OOCCQQOOQ0,nil);
OCI_ATTR_SCHEMA_NAME:
OC00QOCOQ0(OO00QQOOQ0,OOCCQQOOQ0,OQCCQQOOQ0,OOQ0QQOOQ0);
OCI_ATTR_NAME:
OC00QOCOQ0(OO00QQOOQ0,OOCCQQOOQ0,OQCCQQOOQ0,OQQ0QQOOQ0);
OCI_ATTR_SUPERTYPE_SCHEMA_NAME:
OC00QOCOQ0(OO00QQOOQ0,OOCCQQOOQ0,OQCCQQOOQ0,O0C0QQOOQ0);
OCI_ATTR_SUPERTYPE_NAME:
OC00QOCOQ0(OO00QQOOQ0,OOCCQQOOQ0,OQCCQQOOQ0,OCQ0QQOOQ0);
else
Result:=inherited O0C0QOCOQ0(OOCCQQOOQ0,OQCCQQOOQ0,OCCCQQOOQ0,O000QQOOQ0);
end;
end;
function O0Q0QQOOQ0.OQOOQOCOQ0(OCOO0OOOQ0:pOCIError;var O0QO0OOOQ0:pOCIParam;OOQO0OOOQ0:ub4):sword;
begin
if OOQO0OOOQ0<=ub4(OO0OQQOOQ0.Count)then begin
O0QO0OOOQ0:=OCCQQQOOQ0(OO0OQQOOQ0[OOQO0OOOQ0-1]).OQQOQOCOQ0;
Result:=OCI_SUCCESS;
end
else begin
O0QO0OOOQ0:=nil;
Result:=OCI_NO_DATA;
end;
end;
function O0Q0QQOOQ0.OQQO0OOOQ0(const OCQO0OOOQ0:string):Integer;
var
O0CO0OOOQ0:integer;
OOCO0OOOQ0:OCCQQQOOQ0;
begin
for O0CO0OOOQ0:=0 to OQ0OQQOOQ0.Count-1 do begin
OOCO0OOOQ0:=OCCQQQOOQ0(OQ0OQQOOQ0[O0CO0OOOQ0]);
if OOCO0OOOQ0.OCCCO0COQ0=OCQO0OOOQ0 then begin
Result:=O0CO0OOOQ0;
Exit;
end;
end;
Result:=-1;
end;
function O0Q0QQOOQ0.OQCO0OOOQ0(OCCO0OOOQ0:OCIDuration):O0CCCOOOQ0;
begin
case OCC0QQOOQ0 of
OCI_TYPECODE_OBJECT:
Result:=OOQ0QOOOQ0.Create(OCOQCOOOQ0,Self,OCCO0OOOQ0);
OCI_TYPECODE_OPAQUE:
if(OQQ0QQOOQ0='ANYDATA')and(OOQ0QQOOQ0='SYS')then
Result:=OQOOQOOOQ0.Create(OCOQCOOOQ0,Self,OCCO0OOOQ0)
else
Result:=OOOOQOOOQ0.Create(OCOQCOOOQ0,Self,OCCO0OOOQ0);
OCI_TYPECODE_NAMEDCOLLECTION:
case OC0OQQOOQ0.O000O0COQ0 of
OCI_TYPECODE_VARRAY:
Result:=OCC0O0OOQ0.Create(OCOQCOOOQ0,Self,OCCO0OOOQ0);
OCI_TYPECODE_TABLE:
Result:=OOOQ00OOQ0.Create(OCOQCOOOQ0,Self,OCCO0OOOQ0);
else
Result:=nil;
end;
else
Result:=nil;
end;
end;
function O0Q0QQOOQ0.O00QCOOOQ0(OO0QCOOOQ0:O0CCCOOOQ0):TBytes;
var
OQ0QCOOOQ0:O00O00OOQ0;
begin
OQ0QCOOOQ0:=O00O00OOQ0.Create;
try
OOCC0OOOQ0.OC0CCOOOQ0(OQ0QCOOOQ0,Self,OO0QCOOOQ0);
Result:=OQ0QCOOOQ0.OQOQC0OOQ0;
finally
OQ0QCOOOQ0.Free;
end;
end;
procedure O0Q0QQOOQ0.OC0QCOOOQ0(const O0OQCOOOQ0:TBytes;OOOQCOOOQ0:O0CCCOOOQ0);
var
OQOQCOOOQ0:OO0000OOQ0;
begin
OQOQCOOOQ0:=OO0000OOQ0.Create(O0OQCOOOQ0);
try
OOCC0OOOQ0.OCOCCOOOQ0(OQOQCOOOQ0,Self,OOOQCOOOQ0);
finally
OQOQCOOOQ0.Free;
end;
end;
class procedure OQ0CCOOOQ0.OC0CCOOOQ0(O0OCCOOOQ0:O00O00OOQ0;OOOCCOOOQ0:O0Q0QQOOQ0;OQOCCOOOQ0:O0CCCOOOQ0);
begin
Assert(False,'The Pickle81 function must be overriden');
end;
class procedure OQ0CCOOOQ0.OCOCCOOOQ0(O0QCCOOOQ0:OO0000OOQ0;OOQCCOOOQ0:O0Q0QQOOQ0;OQQCCOOOQ0:O0CCCOOOQ0);
begin
Assert(False,'The Unpickle81 function must be overriden');
end;
class function O0QQC0OOQ0.OOQQC0OOQ0(OQQQC0OOQ0:O0Q0QQOOQ0):Boolean;
begin
Result:=(OQQQC0OOQ0.O00OQQOOQ0 and$40<>0)or
(OQQQC0OOQ0.O00OQQOOQ0 and$20=0)or
(OQQQC0OOQ0.OQC0QQOOQ0>1);
end;
class procedure O0QQC0OOQ0.OC0CCOOOQ0(O0OCCOOOQ0:O00O00OOQ0;OOOCCOOOQ0:O0Q0QQOOQ0;OQOCCOOOQ0:O0CCCOOOQ0);
var
OCQQC0OOQ0:Integer;
begin
OCQQC0OOQ0:=O0OCCOOOQ0.OOOQC0OOQ0;
OOQ0C0OOQ0(O0OCCOOOQ0,OOOCCOOOQ0,OOQQC0OOQ0(OOOCCOOOQ0));
OOCQC0OOQ0(O0OCCOOOQ0,OOOCCOOOQ0);
OOQCC0OOQ0(O0OCCOOOQ0,OOOCCOOOQ0,OQOCCOOOQ0 as OOQ0QOOOQ0,0);
O0OOC0OOQ0(O0OCCOOOQ0,OCQQC0OOQ0+2,O0OCCOOOQ0.OOOQC0OOQ0-OCQQC0OOQ0);
end;
class procedure O0QQC0OOQ0.OCOCCOOOQ0(O0QCCOOOQ0:OO0000OOQ0;OOQCCOOOQ0:O0Q0QQOOQ0;OQQCCOOOQ0:O0CCCOOOQ0);
var
O0CQC0OOQ0:Byte;
begin
O0CQC0OOQ0:=O0QCCOOOQ0.OQO000OOQ0;
O0QCCOOOQ0.OQO000OOQ0;
OO0OC0OOQ0(O0QCCOOOQ0);
if O0CQC0OOQ0 and OCCQ0C0OQ0=0 then
OOQCCOOOQ0:=OQ0CC0OOQ0(O0QCCOOOQ0,OOQCCOOOQ0);
OO00C0OOQ0(O0QCCOOOQ0,OOQCCOOOQ0,OQQCCOOOQ0 as OOQ0QOOOQ0);
end;
class function O0QQC0OOQ0.OQ0CC0OOQ0(OC0CC0OOQ0:OO0000OOQ0;O0OCC0OOQ0:O0Q0QQOOQ0):O0Q0QQOOQ0;
var
OOOCC0OOQ0:Integer;
OQOCC0OOQ0:Integer;
OCOCC0OOQ0:Byte;
O0QCC0OOQ0:TBytes;
begin
OOOCC0OOQ0:=OO0OC0OOQ0(OC0CC0OOQ0);
OQOCC0OOQ0:=OC0CC0OOQ0.OCC000OOQ0;
OCOCC0OOQ0:=OC0CC0OOQ0.OQO000OOQ0;
if OCOCC0OOQ0 and$0C=$04 then begin
{$IFNDEF VER9P}
SetLength(O0QCC0OOQ0,0);
{$ENDIF}
O0QCC0OOQ0:=OC0CC0OOQ0.OQQ000OOQ0(16);
Result:=O0Q0QQOOQ0(O0OCC0OOQ0.O0QQCOOOQ0.O0O0QOQOQ0(O0QCC0OOQ0,nil));
end
else begin
OC0CC0OOQ0.OCC000OOQ0:=OQOCC0OOQ0+OOOCC0OOQ0;
Result:=O0OCC0OOQ0;
end;
end;
class procedure O0QQC0OOQ0.OOCQC0OOQ0(OQCQC0OOQ0:O00O00OOQ0;OCCQC0OOQ0:O0Q0QQOOQ0);
var
O00CC0OOQ0:Byte;
OO0CC0OOQ0:Integer;
begin
if OOQQC0OOQ0(OCCQC0OOQ0)then begin
O00CC0OOQ0:=$05;
OO0CC0OOQ0:=Length(OCCQC0OOQ0.OOC0QQOOQ0)+1;
if OCCQC0OOQ0.OQC0QQOOQ0>1 then begin
O00CC0OOQ0:=O00CC0OOQ0 or$10;
if OCCQC0OOQ0.OQC0QQOOQ0>OCQQ0C0OQ0 then
OO0CC0OOQ0:=OO0CC0OOQ0+5
else
OO0CC0OOQ0:=OO0CC0OOQ0+1;
end;
OQC0C0OOQ0(OQCQC0OOQ0,OO0CC0OOQ0);
OQCQC0OOQ0.OQOO00OOQ0(O00CC0OOQ0);
OQCQC0OOQ0.O0CO00OOQ0(OCCQC0OOQ0.OOC0QQOOQ0);
if OCCQC0OOQ0.OQC0QQOOQ0>1 then
OQC0C0OOQ0(OQCQC0OOQ0,OCCQC0OOQ0.OQC0QQOOQ0);
end;
end;
class procedure O0QQC0OOQ0.OOQCC0OOQ0(OQQCC0OOQ0:O00O00OOQ0;OCQCC0OOQ0:O0Q0QQOOQ0;O0CCC0OOQ0:OOQ0QOOOQ0;OOCCC0OOQ0:integer);
var
OQCCC0OOQ0,OCCCC0OOQ0:Integer;
O000C0OOQ0:OCCQQQOOQ0;
begin
OQCCC0OOQ0:=0;
OCCCC0OOQ0:=0;
while OQCCC0OOQ0<OCQCC0OOQ0.OQ0OQQOOQ0.Count do begin
O000C0OOQ0:=OCCQQQOOQ0(OCQCC0OOQ0.OQ0OQQOOQ0[OQCCC0OOQ0]);
if O0CCC0OOQ0.OCO0QOOOQ0[OQCCC0OOQ0]=OCI_IND_NULL then
if(O000C0OOQ0.OQ0CQQOOQ0<>OCI_TYPECODE_OBJECT)or O000C0OOQ0.O0OCQQOOQ0 then
OQQCC0OOQ0.OQOO00OOQ0(OCOQ0C0OQ0)
else begin
OQQCC0OOQ0.OQOO00OOQ0(OOQQ0C0OQ0);
Inc(OCCCC0OOQ0);
repeat
Inc(OQCCC0OOQ0);
until(OQCCC0OOQ0>=OCQCC0OOQ0.OQ0OQQOOQ0.Count)or
(OCQCC0OOQ0.OQ0OQQOOQ0[OQCCC0OOQ0]=OCQCC0OOQ0.OO0OQQOOQ0[OCCCC0OOQ0]);
continue;
end
else if(O000C0OOQ0.OQ0CQQOOQ0<>OCI_TYPECODE_OBJECT)or O000C0OOQ0.O0OCQQOOQ0 then
O0COC0OOQ0(OQQCC0OOQ0,OCQCC0OOQ0,O000C0OOQ0,O0CCC0OOQ0.O0Q0QOOOQ0[OQCCC0OOQ0]);
if O000C0OOQ0=OCQCC0OOQ0.OO0OQQOOQ0[OCCCC0OOQ0]then
Inc(OCCCC0OOQ0);
Inc(OQCCC0OOQ0);
end;
end;
class procedure O0QQC0OOQ0.OO00C0OOQ0(OQ00C0OOQ0:OO0000OOQ0;OC00C0OOQ0:O0Q0QQOOQ0;O0O0C0OOQ0:OOQ0QOOOQ0);
var
OOO0C0OOQ0,OQO0C0OOQ0:Integer;
OCO0C0OOQ0:Byte;
O0Q0C0OOQ0:OCCQQQOOQ0;
begin
OOO0C0OOQ0:=0;
OQO0C0OOQ0:=0;
while OOO0C0OOQ0<OC00C0OOQ0.OQ0OQQOOQ0.Count do begin
O0Q0C0OOQ0:=OCCQQQOOQ0(OC00C0OOQ0.OQ0OQQOOQ0[OOO0C0OOQ0]);
if(O0Q0C0OOQ0.OQ0CQQOOQ0<>OCI_TYPECODE_OBJECT)or O0Q0C0OOQ0.O0OCQQOOQ0 then
OC0QQ0OOQ0(OQ00C0OOQ0,OC00C0OOQ0,O0Q0C0OOQ0,O0O0C0OOQ0.O0Q0QOOOQ0[OOO0C0OOQ0],O0O0C0OOQ0.OQO0QOOOQ0[OOO0C0OOQ0])
else begin
OCO0C0OOQ0:=OQ00C0OOQ0.OQO000OOQ0;
if OCO0C0OOQ0=OOQQ0C0OQ0 then begin
O0O0C0OOQ0.OCO0QOOOQ0[OOO0C0OOQ0]:=OCI_IND_NULL;
Inc(OQO0C0OOQ0);
repeat
Inc(OOO0C0OOQ0);
until(OOO0C0OOQ0>=OC00C0OOQ0.OQ0OQQOOQ0.Count)or
(OC00C0OOQ0.OQ0OQQOOQ0[OOO0C0OOQ0]=OC00C0OOQ0.OO0OQQOOQ0[OQO0C0OOQ0]);
continue;
end
else begin
O0O0C0OOQ0.OCO0QOOOQ0[OOO0C0OOQ0]:=OCI_IND_NOTNULL;
if OCO0C0OOQ0=OQQQ0C0OQ0 then
OQ00C0OOQ0.OQO000OOQ0()
else
OQ00C0OOQ0.OCC000OOQ0:=OQ00C0OOQ0.OCC000OOQ0-1;
end;
end;
if(OQO0C0OOQ0<OC00C0OOQ0.OO0OQQOOQ0.Count)and(O0Q0C0OOQ0=OC00C0OOQ0.OO0OQQOOQ0[OQO0C0OOQ0])then
Inc(OQO0C0OOQ0);
Inc(OOO0C0OOQ0);
end;
end;
class procedure O0QQC0OOQ0.OOQ0C0OOQ0(OQQ0C0OOQ0:O00O00OOQ0;OCQ0C0OOQ0:O0Q0QQOOQ0;O0C0C0OOQ0:boolean);
begin
OOQ0C0OOQ0(OQQ0C0OOQ0,OCQ0C0OOQ0,OCQQ0C0OQ0+1,O0C0C0OOQ0);
end;
class procedure O0QQC0OOQ0.OOQ0C0OOQ0(OQQ0C0OOQ0:O00O00OOQ0;OCQ0C0OOQ0:O0Q0QQOOQ0;OOC0C0OOQ0:Integer;O0C0C0OOQ0:boolean);
begin
if O0C0C0OOQ0 then
OQQ0C0OOQ0.OQOO00OOQ0(O0CQ0C0OQ0)
else
OQQ0C0OOQ0.OQOO00OOQ0(O0CQ0C0OQ0 or OCCQ0C0OQ0);
OQQ0C0OOQ0.OQOO00OOQ0(OO0C0C0OQ0);
OQC0C0OOQ0(OQQ0C0OOQ0,OOC0C0OOQ0);
end;
class procedure O0QQC0OOQ0.OQC0C0OOQ0(OCC0C0OOQ0:O00O00OOQ0;O00OC0OOQ0:Integer);
begin
if O00OC0OOQ0<=OCQQ0C0OQ0 then
OCC0C0OOQ0.OQOO00OOQ0(O00OC0OOQ0)
else begin
OCC0C0OOQ0.OQOO00OOQ0(O0QQ0C0OQ0);
OCC0C0OOQ0.OQQO00OOQ0(O00OC0OOQ0);
end;
end;
class function O0QQC0OOQ0.OO0OC0OOQ0(OQ0OC0OOQ0:OO0000OOQ0):Integer;
var
OC0OC0OOQ0:Integer;
begin
OC0OC0OOQ0:=OQ0OC0OOQ0.OQO000OOQ0;
if OC0OC0OOQ0>OCQQ0C0OQ0 then
if OC0OC0OOQ0=OCOQ0C0OQ0 then
Result:=-1
else
Result:=OQ0OC0OOQ0.OOQ000OOQ0
else
Result:=OC0OC0OOQ0;
end;
class procedure O0QQC0OOQ0.O0OOC0OOQ0(OOOOC0OOQ0:O00O00OOQ0;OQOOC0OOQ0:integer;OCOOC0OOQ0:integer);
var
O0QOC0OOQ0:Integer;
begin
O0QOC0OOQ0:=OOOOC0OOQ0.OOOQC0OOQ0;
OOOOC0OOQ0.OOOQC0OOQ0:=OQOOC0OOQ0;
OOOOC0OOQ0.OQOO00OOQ0(O0QQ0C0OQ0);
OOOOC0OOQ0.OQQO00OOQ0(OCOOC0OOQ0);
OOOOC0OOQ0.OOOQC0OOQ0:=O0QOC0OOQ0;
end;
class function O0QQC0OOQ0.OOQOC0OOQ0(OQQOC0OOQ0:OO0000OOQ0):TBytes;
var
OCQOC0OOQ0:Integer;
begin
OCQOC0OOQ0:=OQQOC0OOQ0.OQO000OOQ0;
if OCQOC0OOQ0=OCOQ0C0OQ0 then
SetLength(Result,0)
else begin
if OCQOC0OOQ0>OCQQ0C0OQ0 then
OCQOC0OOQ0:=OQQOC0OOQ0.OOQ000OOQ0;
Result:=OQQOC0OOQ0.OQQ000OOQ0(OCQOC0OOQ0);
end;
end;
class procedure O0QQC0OOQ0.O0COC0OOQ0(OOCOC0OOQ0:O00O00OOQ0;OQCOC0OOQ0:O0Q0QQOOQ0;OCCOC0OOQ0:OCCQQQOOQ0;O00QQ0OOQ0:IntPtr);
var
OO0QQ0OOQ0:Integer;
OQ0QQ0OOQ0:O0CCCOOOQ0;
begin
if OCCOC0OOQ0.O00OO0COQ0<>nil then begin
OQC0C0OOQ0(OOCOC0OOQ0,OCQQ0C0OQ0+1);
OO0QQ0OOQ0:=OOCOC0OOQ0.OOOQC0OOQ0;
O00QQ0OOQ0:=Marshal.ReadIntPtr(O00QQ0OOQ0);
OQ0QQ0OOQ0:=O0CCCOOOQ0(GetGCHandleTarget(O00QQ0OOQ0));
OCCOC0OOQ0.O00OO0COQ0.OOCC0OOOQ0.OC0CCOOOQ0(OOCOC0OOQ0,OCCOC0OOQ0.O00OO0COQ0,OQ0QQ0OOQ0);
O0OOC0OOQ0(OOCOC0OOQ0,OO0QQ0OOQ0-5,OOCOC0OOQ0.OOOQC0OOQ0-OO0QQ0OOQ0);
end
else
OCQQQ0OOQ0(OOCOC0OOQ0,O00QQ0OOQ0,OCCOC0OOQ0);
end;
class procedure O0QQC0OOQ0.OC0QQ0OOQ0(O0OQQ0OOQ0:OO0000OOQ0;OOOQQ0OOQ0:O0Q0QQOOQ0;OQOQQ0OOQ0:OCCQQQOOQ0;OCOQQ0OOQ0,O0QQQ0OOQ0:IntPtr);
var
OOQQQ0OOQ0:TBytes;
OQQQQ0OOQ0:O0CCCOOOQ0;
begin
if OQOQQ0OOQ0.O00OO0COQ0<>nil then begin
OCOQQ0OOQ0:=Marshal.ReadIntPtr(OCOQQ0OOQ0);
OQQQQ0OOQ0:=O0CCCOOOQ0(GetGCHandleTarget(OCOQQ0OOQ0));
if OO0OC0OOQ0(O0OQQ0OOQ0)=-1 then
OQQQQ0OOQ0.OOO0QOOOQ0:=OCI_IND_NULL
else begin
OQOQQ0OOQ0.O00OO0COQ0.OOCC0OOOQ0.OCOCCOOOQ0(O0OQQ0OOQ0,OQOQQ0OOQ0.O00OO0COQ0,OQQQQ0OOQ0);
OQQQQ0OOQ0.OOO0QOOOQ0:=OCI_IND_NOTNULL;
end;
end
else begin
OOQQQ0OOQ0:=OOQOC0OOQ0(O0OQQ0OOQ0);
if Length(OOQQQ0OOQ0)=0 then
sb2(O0QQQ0OOQ0^):=OCI_IND_NULL
else begin
O0QCQ0OOQ0(O0OQQ0OOQ0,OCOQQ0OOQ0,OQOQQ0OOQ0,OOQQQ0OOQ0);
sb2(O0QQQ0OOQ0^):=OCI_IND_NOTNULL;
end;
end;
end;
class procedure O0QQC0OOQ0.OCQQQ0OOQ0(O0CQQ0OOQ0:O00O00OOQ0;OOCQQ0OOQ0:IntPtr;OQCQQ0OOQ0:OCCQQQOOQ0);
var
OCCQQ0OOQ0:Integer;
O00CQ0OOQ0:TBytes;
OO0CQ0OOQ0:IntPtr;
OQ0CQ0OOQ0:OCQOC0QOQ0;
OC0CQ0OOQ0:TOCIDateTime;
O0OCQ0OOQ0:TOCIInterval;
OOOCQ0OOQ0:OOCCQ0QOQ0;
OQOCQ0OOQ0:Encoding;
OCOCQ0OOQ0:Encoding;
begin
case OQCQQ0OOQ0.OQ0CQQOOQ0 of
OCI_TYPECODE_CHAR,
OCI_TYPECODE_NCHAR,
OCI_TYPECODE_VARCHAR,
OCI_TYPECODE_VARCHAR2,
OCI_TYPECODE_NVARCHAR2:begin
SetLength(O00CQ0OOQ0,0);
OQ0CQ0OOQ0:=OCQOC0QOQ0(GetGCHandleTarget(Marshal.ReadIntPtr(OOCQQ0OOQ0)));
if(OQ0CQ0OOQ0<>nil)and(OQ0CQ0OOQ0.OCOCQ0QOQ0>0)then begin
if OQCQQ0OOQ0.OQ00QQOOQ0.O00CQ0COQ0 then
OQOCQ0OOQ0:=Encoding.Unicode
else
OQOCQ0OOQ0:=Encoding.Default;
if(OQCQQ0OOQ0.OQC0O0COQ0=2)or
(OQCQQ0OOQ0.OOO0QQOOQ0=OCI_TYPECODE_NCHAR)or
(OQCQQ0OOQ0.OOO0QQOOQ0=OCI_TYPECODE_NVARCHAR2)
then
OCOCQ0OOQ0:=Encoding.BigEndianUnicode
else
OCOCQ0OOQ0:=OQCQQ0OOQ0.OC00QQOOQ0.OC0QO0QOQ0;
if OQOCQ0OOQ0<>OCOCQ0OOQ0 then
O00CQ0OOQ0:=Encoding.Convert(OQOCQ0OOQ0,OCOCQ0OOQ0,OQ0CQ0OOQ0.OOQCQ0QOQ0)
else
O00CQ0OOQ0:=OQ0CQ0OOQ0.OOQCQ0QOQ0;
end;
OCCQQ0OOQ0:=Length(O00CQ0OOQ0);
OQC0C0OOQ0(O0CQQ0OOQ0,OCCQQ0OOQ0);
O0CQQ0OOQ0.OCCO00OOQ0(O00CQ0OOQ0,OCCQQ0OOQ0);
end;
OCI_TYPECODE_RAW:begin
OO0CQ0OOQ0:=OCIStringPtr_(OQCQQ0OOQ0.OQ00QQOOQ0,IntPtr(OOCQQ0OOQ0^));
OCCQQ0OOQ0:=OCIStringSize_(OQCQQ0OOQ0.OQ00QQOOQ0,IntPtr(OOCQQ0OOQ0^));
OQC0C0OOQ0(O0CQQ0OOQ0,OCCQQ0OOQ0);
O0CQQ0OOQ0.OCCO00OOQ0(OO0CQ0OOQ0,OCCQQ0OOQ0);
end;
OCI_TYPECODE_FLOAT,
OCI_TYPECODE_DOUBLE,
OCI_TYPECODE_NUMBER,
OCI_TYPECODE_DECIMAL:begin
OCCQQ0OOQ0:=Marshal.ReadByte(OOCQQ0OOQ0);
OQC0C0OOQ0(O0CQQ0OOQ0,OCCQQ0OOQ0);
O0CQQ0OOQ0.OCCO00OOQ0(PtrOffset(OOCQQ0OOQ0,1),OCCQQ0OOQ0);
end;
OCI_TYPECODE_BFLOAT:begin
O00CQ0OOQ0:=OQ000QOOQ0.OQO00QOOQ0(CRBitConverter.Int32BitsToSingle(Marshal.ReadInt32(OOCQQ0OOQ0)));
OCCQQ0OOQ0:=Length(O00CQ0OOQ0);
OQC0C0OOQ0(O0CQQ0OOQ0,OCCQQ0OOQ0);
O0CQQ0OOQ0.OCCO00OOQ0(@O00CQ0OOQ0[0],OCCQQ0OOQ0);
end;
OCI_TYPECODE_BDOUBLE:begin
O00CQ0OOQ0:=OOQ00QOOQ0.OOC00QOOQ0(BitConverter.Int64BitsToDouble(Marshal.ReadInt64(OOCQQ0OOQ0)));
OCCQQ0OOQ0:=Length(O00CQ0OOQ0);
OQC0C0OOQ0(O0CQQ0OOQ0,OCCQQ0OOQ0);
O0CQQ0OOQ0.OCCO00OOQ0(OOCQQ0OOQ0,OCCQQ0OOQ0);
end;
OCI_TYPECODE_DATE:begin
OCCQQ0OOQ0:=7;
SetLength(O00CQ0OOQ0,OCCQQ0OOQ0);
O00CQ0OOQ0[0]:=OCIDate(OOCQQ0OOQ0^).OCIDateYYYY div 100+100;
O00CQ0OOQ0[1]:=OCIDate(OOCQQ0OOQ0^).OCIDateYYYY mod 100+100;
O00CQ0OOQ0[2]:=OCIDate(OOCQQ0OOQ0^).OCIDateMM;
O00CQ0OOQ0[3]:=OCIDate(OOCQQ0OOQ0^).OCIDateDD;
O00CQ0OOQ0[4]:=OCIDate(OOCQQ0OOQ0^).OCIDateTime.OCITimeHH+1;
O00CQ0OOQ0[5]:=OCIDate(OOCQQ0OOQ0^).OCIDateTime.OCITimeMI+1;
O00CQ0OOQ0[6]:=OCIDate(OOCQQ0OOQ0^).OCIDateTime.OCITimeSS+1;
OQC0C0OOQ0(O0CQQ0OOQ0,OCCQQ0OOQ0);
O0CQQ0OOQ0.OCCO00OOQ0(O00CQ0OOQ0,OCCQQ0OOQ0);
end;
OCI_TYPECODE_TIMESTAMP,
OCI_TYPECODE_TIMESTAMP_TZ,
OCI_TYPECODE_TIMESTAMP_LTZ:begin
OC0CQ0OOQ0:=O00O0QOOQ0(GetGCHandleTarget(Marshal.ReadIntPtr(OOCQQ0OOQ0))).OC0O0QOOQ0;
if OQCQQ0OOQ0.OQ0CQQOOQ0=OCI_TYPECODE_TIMESTAMP_TZ then
O00CQ0OOQ0:=ConvertToServerTZ(OC0CQ0OOQ0.Value,OQCQQ0OOQ0.OC00QQOOQ0.OO0CO0QOQ0)
else if OQCQQ0OOQ0.OQ0CQQOOQ0=OCI_TYPECODE_TIMESTAMP_LTZ then
O00CQ0OOQ0:=ConvertToLocalTime(OC0CQ0OOQ0.Value,OQCQQ0OOQ0.OC00QQOOQ0.OQOQO0QOQ0-TimeStampLTZServerOffset-GetLocalTimeZoneOffset)
else
O00CQ0OOQ0:=OC0CQ0OOQ0.Value;
OCCQQ0OOQ0:=Length(O00CQ0OOQ0);
OQC0C0OOQ0(O0CQQ0OOQ0,OCCQQ0OOQ0);
O0CQQ0OOQ0.OCCO00OOQ0(O00CQ0OOQ0,OCCQQ0OOQ0);
end;
OCI_TYPECODE_INTERVAL_YM,
OCI_TYPECODE_INTERVAL_DS:begin
O0OCQ0OOQ0:=O0OO0QOOQ0(GetGCHandleTarget(Marshal.ReadIntPtr(OOCQQ0OOQ0))).OQOO0QOOQ0;
O00CQ0OOQ0:=O0OCQ0OOQ0.Value;
OCCQQ0OOQ0:=Length(O00CQ0OOQ0);
OQC0C0OOQ0(O0CQQ0OOQ0,OCCQQ0OOQ0);
O0CQQ0OOQ0.OCCO00OOQ0(O00CQ0OOQ0,OCCQQ0OOQ0);
end;
OCI_TYPECODE_BLOB,
OCI_TYPECODE_CLOB,
OCI_TYPECODE_NCLOB,
OCI_TYPECODE_BFILE,
OCI_TYPECODE_CFILE:begin
OOOCQ0OOQ0:=OOCCQ0QOQ0(GetGCHandleTarget(Marshal.ReadIntPtr(OOCQQ0OOQ0)));
O00CQ0OOQ0:=OOOCQ0OOQ0.OQC0OQOOQ0;
OCCQQ0OOQ0:=Length(O00CQ0OOQ0);
OQC0C0OOQ0(O0CQQ0OOQ0,OCCQQ0OOQ0);
O0CQQ0OOQ0.OCCO00OOQ0(O00CQ0OOQ0,OCCQQ0OOQ0);
end;
else begin
OQC0C0OOQ0(O0CQQ0OOQ0,0);
end;
end;
end;
class procedure O0QQC0OOQ0.O0QCQ0OOQ0(OOQCQ0OOQ0:OO0000OOQ0;OQQCQ0OOQ0:IntPtr;OCQCQ0OOQ0:OCCQQQOOQ0;var O0CCQ0OOQ0:TBytes);
var
OOCCQ0OOQ0:Integer;
OQCCQ0OOQ0:IntPtr;
OCCCQ0OOQ0:OCQOC0QOQ0;
O000Q0OOQ0:TOCIDateTime;
OO00Q0OOQ0:TOCIInterval;
OQ00Q0OOQ0:OOCCQ0QOQ0;
OC00Q0OOQ0:Encoding;
O0O0Q0OOQ0:Encoding;
begin
case OCQCQ0OOQ0.OQ0CQQOOQ0 of
OCI_TYPECODE_CHAR,
OCI_TYPECODE_NCHAR,
OCI_TYPECODE_VARCHAR,
OCI_TYPECODE_VARCHAR2,
OCI_TYPECODE_NVARCHAR2:begin
if Length(O0CCQ0OOQ0)>0 then begin
OCCCQ0OOQ0:=OCQOC0QOQ0.Create(OCQCQ0OOQ0.OQ00QQOOQ0);
if OCQCQ0OOQ0.OQ00QQOOQ0.O00CQ0COQ0 then
O0O0Q0OOQ0:=Encoding.Unicode
else
O0O0Q0OOQ0:=Encoding.Default;
if(OCQCQ0OOQ0.OQC0O0COQ0=2)or
(OCQCQ0OOQ0.OOO0QQOOQ0=OCI_TYPECODE_NCHAR)or
(OCQCQ0OOQ0.OOO0QQOOQ0=OCI_TYPECODE_NVARCHAR2)
then
OC00Q0OOQ0:=Encoding.BigEndianUnicode
else
OC00Q0OOQ0:=OCQCQ0OOQ0.OC00QQOOQ0.OC0QO0QOQ0;
if OC00Q0OOQ0<>O0O0Q0OOQ0 then
OCCCQ0OOQ0.OOQCQ0QOQ0:=Encoding.Convert(OC00Q0OOQ0,O0O0Q0OOQ0,O0CCQ0OOQ0)
else
OCCCQ0OOQ0.OOQCQ0QOQ0:=O0CCQ0OOQ0;
Marshal.WriteIntPtr(OQQCQ0OOQ0,OCCCQ0OOQ0.OQQOQOCOQ0);
end
else
Marshal.WriteIntPtr(OQQCQ0OOQ0,nil);
end;
OCI_TYPECODE_RAW:begin
OOCCQ0OOQ0:=Length(O0CCQ0OOQ0);
OCIStringAssignText_(OCQCQ0OOQ0.OQ00QQOOQ0,nil,@O0CCQ0OOQ0[0],OOCCQ0OOQ0,OQQCQ0OOQ0);
end;
OCI_TYPECODE_FLOAT,
OCI_TYPECODE_DOUBLE,
OCI_TYPECODE_NUMBER,
OCI_TYPECODE_DECIMAL:begin
FillChar(OQQCQ0OOQ0,22,0);
OOCCQ0OOQ0:=Length(O0CCQ0OOQ0);
Marshal.WriteByte(OQQCQ0OOQ0,OOCCQ0OOQ0);
Move(O0CCQ0OOQ0[0],PtrOffset(OQQCQ0OOQ0,1)^,OOCCQ0OOQ0);
end;
OCI_TYPECODE_BFLOAT:
Marshal.WriteInt32(OQQCQ0OOQ0,CRBitConverter.SingleToInt32Bits(OQ000QOOQ0.OC000QOOQ0(O0CCQ0OOQ0)));
OCI_TYPECODE_BDOUBLE:
Marshal.WriteInt64(OQQCQ0OOQ0,BitConverter.DoubleToInt64Bits(OOQ00QOOQ0.OQQ00QOOQ0(O0CCQ0OOQ0)));
OCI_TYPECODE_DATE:begin
OCIDate(OQQCQ0OOQ0^).OCIDateYYYY:=Abs((O0CCQ0OOQ0[0]-100)*100+O0CCQ0OOQ0[1]-100);
OCIDate(OQQCQ0OOQ0^).OCIDateMM:=O0CCQ0OOQ0[2];
OCIDate(OQQCQ0OOQ0^).OCIDateDD:=O0CCQ0OOQ0[3];
OCIDate(OQQCQ0OOQ0^).OCIDateTime.OCITimeHH:=O0CCQ0OOQ0[4]-1;
OCIDate(OQQCQ0OOQ0^).OCIDateTime.OCITimeMI:=O0CCQ0OOQ0[5]-1;
OCIDate(OQQCQ0OOQ0^).OCIDateTime.OCITimeSS:=O0CCQ0OOQ0[6]-1;
end;
OCI_TYPECODE_TIMESTAMP,
OCI_TYPECODE_TIMESTAMP_TZ,
OCI_TYPECODE_TIMESTAMP_LTZ:begin
OQCCQ0OOQ0:=Marshal.ReadIntPtr(OQQCQ0OOQ0);
if OQCCQ0OOQ0=nil then begin
case OCQCQ0OOQ0.OQ0CQQOOQ0 of
OCI_TYPECODE_TIMESTAMP:
OQCCQ0OOQ0:=O00O0QOOQ0.Create(OCQCQ0OOQ0.OQ00QQOOQ0,OCI_DTYPE_TIMESTAMP);
OCI_TYPECODE_TIMESTAMP_TZ:
OQCCQ0OOQ0:=O00O0QOOQ0.Create(OCQCQ0OOQ0.OQ00QQOOQ0,OCI_DTYPE_TIMESTAMP_TZ);
OCI_TYPECODE_TIMESTAMP_LTZ:
OQCCQ0OOQ0:=O00O0QOOQ0.Create(OCQCQ0OOQ0.OQ00QQOOQ0,OCI_DTYPE_TIMESTAMP_LTZ);
else
OQCCQ0OOQ0:=nil;
end;
Marshal.WriteIntPtr(OQQCQ0OOQ0,OQCCQ0OOQ0);
end;
O000Q0OOQ0:=O00O0QOOQ0(GetGCHandleTarget(OQCCQ0OOQ0)).OC0O0QOOQ0;
if Length(O0CCQ0OOQ0)>0 then
if OCQCQ0OOQ0.OQ0CQQOOQ0=OCI_TYPECODE_TIMESTAMP_TZ then
O000Q0OOQ0.Value:=ConvertFromServerTZ(O0CCQ0OOQ0)
else if OCQCQ0OOQ0.OQ0CQQOOQ0=OCI_TYPECODE_TIMESTAMP_LTZ then
O000Q0OOQ0.Value:=ConvertToLocalTime(O0CCQ0OOQ0,TimeStampLTZServerOffset-OCQCQ0OOQ0.OC00QQOOQ0.OQOQO0QOQ0)
else
O000Q0OOQ0.Value:=O0CCQ0OOQ0
else
O000Q0OOQ0.Value:=O0CCQ0OOQ0;
end;
OCI_TYPECODE_INTERVAL_YM,
OCI_TYPECODE_INTERVAL_DS:begin
OQCCQ0OOQ0:=Marshal.ReadIntPtr(OQQCQ0OOQ0);
if OQCCQ0OOQ0=nil then begin
case OCQCQ0OOQ0.OQ0CQQOOQ0 of
OCI_TYPECODE_INTERVAL_YM:
OQCCQ0OOQ0:=O0OO0QOOQ0.Create(OCQCQ0OOQ0.OQ00QQOOQ0,OCI_DTYPE_INTERVAL_YM);
OCI_TYPECODE_INTERVAL_DS:
OQCCQ0OOQ0:=O0OO0QOOQ0.Create(OCQCQ0OOQ0.OQ00QQOOQ0,OCI_DTYPE_INTERVAL_DS);
else
OQCCQ0OOQ0:=nil;
end;
Marshal.WriteIntPtr(OQQCQ0OOQ0,OQCCQ0OOQ0);
end;
OO00Q0OOQ0:=O0OO0QOOQ0(GetGCHandleTarget(OQCCQ0OOQ0)).OQOO0QOOQ0;
OO00Q0OOQ0.Value:=O0CCQ0OOQ0;
end;
OCI_TYPECODE_BLOB,
OCI_TYPECODE_CLOB,
OCI_TYPECODE_NCLOB,
OCI_TYPECODE_BFILE,
OCI_TYPECODE_CFILE:begin
OQCCQ0OOQ0:=Marshal.ReadIntPtr(OQQCQ0OOQ0);
if OQCCQ0OOQ0=nil then begin
OQ00Q0OOQ0:=OOCCQ0QOQ0.Create(OCQCQ0OOQ0.OQ00QQOOQ0,OCQCQ0OOQ0.O000O0COQ0,OCQCQ0OOQ0.OQC0O0COQ0,True);
Marshal.WriteIntPtr(OQQCQ0OOQ0,OQ00Q0OOQ0.OQQOQOCOQ0);
end
else
OQ00Q0OOQ0:=OOCCQ0QOQ0(GetGCHandleTarget(OQCCQ0OOQ0));
OQ00Q0OOQ0.OQC0OQOOQ0:=O0CCQ0OOQ0;
end;
end;
end;
class procedure OOO0Q0OOQ0.OQO0Q0OOQ0(OCO0Q0OOQ0:O00O00OOQ0;O0Q0Q0OOQ0:Integer);
begin
OCO0Q0OOQ0.OQOO00OOQ0(O0CQ0C0OQ0 or OCCQ0C0OQ0 or O00C0C0OQ0);
OCO0Q0OOQ0.OQOO00OOQ0(OO0C0C0OQ0);
O0Q0Q0OOQ0:=O0Q0Q0OOQ0+2;
if O0Q0Q0OOQ0+1<=OCQQ0C0OQ0 then
OQC0C0OOQ0(OCO0Q0OOQ0,O0Q0Q0OOQ0+1)
else
OQC0C0OOQ0(OCO0Q0OOQ0,O0Q0Q0OOQ0+5);
end;
class function OOO0Q0OOQ0.OOQ0Q0OOQ0(OQQ0Q0OOQ0:OO0000OOQ0):Integer;
begin
OQQ0Q0OOQ0.OQO000OOQ0();
OQQ0Q0OOQ0.OQO000OOQ0();
Result:=OO0OC0OOQ0(OQQ0Q0OOQ0);
end;
class procedure OCQ0Q0OOQ0.OC0CCOOOQ0(O0OCCOOOQ0:O00O00OOQ0;OOOCCOOOQ0:O0Q0QQOOQ0;OQOCCOOOQ0:O0CCCOOOQ0);
var
O0C0Q0OOQ0:OOOOQOOOQ0;
OOC0Q0OOQ0:Integer;
begin
O0C0Q0OOQ0:=OOOOQOOOQ0(OQOCCOOOQ0);
OOC0Q0OOQ0:=Length(O0C0Q0OOQ0.O0OOQOOOQ0);
OQO0Q0OOQ0(O0OCCOOOQ0,OOC0Q0OOQ0);
if Length(O0C0Q0OOQ0.O0OOQOOOQ0)>0 then
O0OCCOOOQ0.OCCO00OOQ0(@O0C0Q0OOQ0.OC0OQOOOQ0[0],Length(O0C0Q0OOQ0.O0OOQOOOQ0));
end;
class procedure OCQ0Q0OOQ0.OCOCCOOOQ0(O0QCCOOOQ0:OO0000OOQ0;OOQCCOOOQ0:O0Q0QQOOQ0;OQQCCOOOQ0:O0CCCOOOQ0);
var
OQC0Q0OOQ0:OOOOQOOOQ0;
OCC0Q0OOQ0:Integer;
O00OQ0OOQ0:integer;
begin
OQC0Q0OOQ0:=OOOOQOOOQ0(OQQCCOOOQ0);
OCC0Q0OOQ0:=O0QCCOOOQ0.OCC000OOQ0;
O00OQ0OOQ0:=OOQ0Q0OOQ0(O0QCCOOOQ0);
O00OQ0OOQ0:=O00OQ0OOQ0-(O0QCCOOOQ0.OCC000OOQ0-OCC0Q0OOQ0);
SetLength(OQC0Q0OOQ0.OC0OQOOOQ0,O00OQ0OOQ0);
O0QCCOOOQ0.O0C000OOQ0(@OQC0Q0OOQ0.OC0OQOOOQ0[0],O00OQ0OOQ0);
if OOQCCOOOQ0.O0QQCOOOQ0.OCCOQOQOQ0>=O0OOCOCOQ0 then
if OQC0Q0OOQ0.OC0OQOOOQ0[3]and$10<>0 then begin
OQC0Q0OOQ0.OC0OQOOOQ0[3]:=0;
Move(OQC0Q0OOQ0.OC0OQOOOQ0[39],OQC0Q0OOQ0.OC0OQOOOQ0[5],O00OQ0OOQ0-34);
SetLength(OQC0Q0OOQ0.OC0OQOOOQ0,O00OQ0OOQ0-34);
end;
end;
class procedure OO0OQ0OOQ0.OQ0OQ0OOQ0(OC0OQ0OOQ0:O00O00OOQ0;O0OOQ0OOQ0:OCITypeCode;OOOOQ0OOQ0:O0Q0QQOOQ0);
var
OQOOQ0OOQ0:SmallInt;
begin
OC0OQ0OOQ0.OQOO00OOQ0(1);
OQOOQ0OOQ0:=512;
if(O0OOQ0OOQ0<>108)and(O0OOQ0OOQ0<>122)then
OQOOQ0OOQ0:=OQOOQ0OOQ0 or 2;
if(OOOOQ0OOQ0<>nil)and(O0OOQ0OOQ0<>110)then
OQOOQ0OOQ0:=OQOOQ0OOQ0 or 4;
OC0OQ0OOQ0.O0QO00OOQ0(OQOOQ0OOQ0);
OC0OQ0OOQ0.O0QO00OOQ0(O0OOQ0OOQ0);
if(OOOOQ0OOQ0<>nil)then begin
OC0OQ0OOQ0.O0CO00OOQ0(OOOOQ0OOQ0.OOC0QQOOQ0);
OC0OQ0OOQ0.O0QO00OOQ0(1);
end;
end;
class procedure OO0OQ0OOQ0.OCOOQ0OOQ0(O0QOQ0OOQ0:OO0000OOQ0;out OOQOQ0OOQ0:OCITypeCode;out OQQOQ0OOQ0:TBytes);
var
OCQOQ0OOQ0:SmallInt;
O0COQ0OOQ0:Integer;
begin
O0QOQ0OOQ0.OQO000OOQ0();
OCQOQ0OOQ0:=O0QOQ0OOQ0.O0Q000OOQ0;
OOQOQ0OOQ0:=O0QOQ0OOQ0.O0Q000OOQ0;
if OCQOQ0OOQ0 and$20<>0 then
OOCO0QOOQ0(3115,'Unsupported data type');
if OCQOQ0OOQ0 and$01=0 then begin
if(OCQOQ0OOQ0 and$02=0)or(OOQOQ0OOQ0=110)then begin
OQQOQ0OOQ0:=O0QOQ0OOQ0.OQQ000OOQ0(16);
O0QOQ0OOQ0.O0Q000OOQ0();
if Length(OQQOQ0OOQ0)=0 then
OOCO0QOOQ0(3115,'Unsupported data type');
end
end
else begin
O0COQ0OOQ0:=O0QOQ0OOQ0.OOQ000OOQ0;
if OOQOQ0OOQ0=108 then
OOCO0QOOQ0(3115,'Unsupported data type')
else if O0COQ0OOQ0=1 then begin
O0QOQ0OOQ0.OQO000OOQ0;
OOCO0QOOQ0(3115,'Unsupported data type');
end
else
OOCO0QOOQ0(3115,'Unsupported data type');
end;
end;
class procedure OO0OQ0OOQ0.OC0CCOOOQ0(O0OCCOOOQ0:O00O00OOQ0;OOOCCOOOQ0:O0Q0QQOOQ0;OQOCCOOOQ0:O0CCCOOOQ0);
var
OOCOQ0OOQ0:OQOOQOOOQ0;
OQCOQ0OOQ0:O00O00OOQ0;
OCCOQ0OOQ0:TBytes;
begin
OOCOQ0OOQ0:=OQOOQOOOQ0(OQOCCOOOQ0);
OQCOQ0OOQ0:=O00O00OOQ0.Create;
try
OQCOQ0OOQ0.OQOO00OOQ0(1);
OQ0OQ0OOQ0(OQCOQ0OOQ0,OOCOQ0OOQ0.OC0CO0OOQ0.OOO0QQOOQ0,OOCOQ0OOQ0.OC0CO0OOQ0.O00OO0COQ0);
if Length(OOCOQ0OOQ0.OC0OQOOOQ0)=0 then
OQCOQ0OOQ0.OQOO00OOQ0($FF)
else begin
OQCOQ0OOQ0.OQOO00OOQ0(0);
OQCOQ0OOQ0.OQQO00OOQ0(Length(OOCOQ0OOQ0.OC0OQOOOQ0));
OQCOQ0OOQ0.OCCO00OOQ0(@OOCOQ0OOQ0.OC0OQOOOQ0[0],Length(OOCOQ0OOQ0.OC0OQOOOQ0));
end;
OCCOQ0OOQ0:=OQCOQ0OOQ0.O0OO00OOQ0;
OQO0Q0OOQ0(O0OCCOOOQ0,Length(OCCOQ0OOQ0));
if Length(OCCOQ0OOQ0)>0 then
O0OCCOOOQ0.OCCO00OOQ0(@OCCOQ0OOQ0[0],Length(OCCOQ0OOQ0));
finally
OQCOQ0OOQ0.Free;
end;
end;
class procedure OO0OQ0OOQ0.OCOCCOOOQ0(O0QCCOOOQ0:OO0000OOQ0;OOQCCOOOQ0:O0Q0QQOOQ0;OQQCCOOOQ0:O0CCCOOOQ0);
var
O00QOC0OQ0:OQOOQOOOQ0;
OO0QOC0OQ0:OCITypeCode;
OQ0QOC0OQ0:TBytes;
OC0QOC0OQ0:byte;
O00OQ0OOQ0:Integer;
begin
O00QOC0OQ0:=OQOOQOOOQ0(OQQCCOOOQ0);
OOQ0Q0OOQ0(O0QCCOOOQ0);
OC0QOC0OQ0:=O0QCCOOOQ0.OQO000OOQ0;
if OC0QOC0OQ0=2 then begin
O0QCCOOOQ0.OQO000OOQ0;
O0QCCOOOQ0.OQO000OOQ0;
O0QCCOOOQ0.OQO000OOQ0;
O0QCCOOOQ0.OQO000OOQ0;
end;
OCOOQ0OOQ0(O0QCCOOOQ0,OO0QOC0OQ0,OQ0QOC0OQ0);
if O0QCCOOOQ0.OQO000OOQ0=0 then begin
O00OQ0OOQ0:=O0QCCOOOQ0.OOQ000OOQ0;
O00QOC0OQ0.OC0OQOOOQ0:=O0QCCOOOQ0.OQQ000OOQ0(O00OQ0OOQ0);
O00QOC0OQ0.OQCQO0OOQ0(OO0QOC0OQ0,OQ0QOC0OQ0,O00OQ0OOQ0);
end;
end;
class procedure O0OQOC0OQ0.OC0CCOOOQ0(O0OCCOOOQ0:O00O00OOQ0;OOOCCOOOQ0:O0Q0QQOOQ0;OQOCCOOOQ0:O0CCCOOOQ0);
var
OOOQOC0OQ0:Integer;
OQOQOC0OQ0:OOO0O0OOQ0;
OCOQOC0OQ0:Integer;
OCQQC0OOQ0:Integer;
begin
OQOQOC0OQ0:=OOO0O0OOQ0(OQOCCOOOQ0);
OCOQOC0OQ0:=OQOQOC0OQ0.OQC0O0OOQ0;
OCQQC0OOQ0:=O0OCCOOOQ0.OOOQC0OOQ0;
OC0COC0OQ0(O0OCCOOOQ0,OCOQOC0OQ0);
for OOOQOC0OQ0:=0 to OCOQOC0OQ0-1 do
if OQOQOC0OQ0.OCO0QOOOQ0[OOOQOC0OQ0]=OCI_IND_NULL then
O0OCCOOOQ0.OQOO00OOQ0(OCOQ0C0OQ0)
else
O0COC0OOQ0(O0OCCOOOQ0,OOOCCOOOQ0,OOOCCOOOQ0.OC0OQQOOQ0,OQOQOC0OQ0.O0Q0QOOOQ0[OOOQOC0OQ0]);
O0OOC0OOQ0(O0OCCOOOQ0,OCQQC0OOQ0+2,O0OCCOOOQ0.OOOQC0OOQ0-OCQQC0OOQ0);
end;
class procedure O0OQOC0OQ0.OCOCCOOOQ0(O0QCCOOOQ0:OO0000OOQ0;OOQCCOOOQ0:O0Q0QQOOQ0;OQQCCOOOQ0:O0CCCOOOQ0);
var
O0QQOC0OQ0:OOO0O0OOQ0;
begin
O0QQOC0OQ0:=OOO0O0OOQ0(OQQCCOOOQ0);
if OOQQOC0OQ0(O0QCCOOOQ0)then
OOCQOC0OQ0(O0QCCOOOQ0,OOQCCOOOQ0,O0QQOC0OQ0);
end;
class function O0OQOC0OQ0.OOQQOC0OQ0(OQQQOC0OQ0:OO0000OOQ0):boolean;
var
OCQQOC0OQ0:Byte;
O0CQOC0OQ0:Integer;
begin
OCQQOC0OQ0:=OQQQOC0OQ0.OQO000OOQ0;
if OCQQOC0OQ0 and OQCQ0C0OQ0<>0 then
Result:=True
else if OCQQOC0OQ0 and OOCQ0C0OQ0<>0 then
Result:=False
else begin
O00QCQOOQ0(17001);
Result:=False;
end;
OQQQOC0OQ0.OQO000OOQ0;
OO0OC0OOQ0(OQQQOC0OQ0);
O0CQOC0OQ0:=OO0OC0OOQ0(OQQQOC0OQ0);
OQQQOC0OQ0.OQO000OOQ0;
OQQQOC0OQ0.OQQ000OOQ0(O0CQOC0OQ0-1);
end;
class procedure O0OQOC0OQ0.OOCQOC0OQ0(OQCQOC0OQ0:OO0000OOQ0;OCCQOC0OQ0:O0Q0QQOOQ0;O00COC0OQ0:OOO0O0OOQ0);
var
OO0COC0OQ0:integer;
OQ0COC0OQ0:Integer;
begin
OQCQOC0OQ0.OQO000OOQ0;
OQ0COC0OQ0:=OO0OC0OOQ0(OQCQOC0OQ0);
if O00COC0OQ0 is OCC0O0OOQ0 then
OCC0O0OOQ0(O00COC0OQ0).OQQOO0OOQ0(OQ0COC0OQ0);
for OO0COC0OQ0:=0 to OQ0COC0OQ0-1 do begin
if O00COC0OQ0.OQC0O0OOQ0<=OO0COC0OQ0 then
if not O00COC0OQ0.OCQ0O0OOQ0 then
O00QCQOOQ0(17002);
OC0QQ0OOQ0(OQCQOC0OQ0,OCCQOC0OQ0,OCCQOC0OQ0.OC0OQQOOQ0,O00COC0OQ0.O0Q0QOOOQ0[OO0COC0OQ0],O00COC0OQ0.OQO0QOOOQ0[OO0COC0OQ0]);
end;
end;
class procedure O0OQOC0OQ0.OC0COC0OQ0(O0OCOC0OQ0:O00O00OOQ0;OOOCOC0OQ0:Integer);
begin
OC0COC0OQ0(O0OCOC0OQ0,OCQQ0C0OQ0+1,OOOCOC0OQ0);
end;
class procedure O0OQOC0OQ0.OC0COC0OQ0(O0OCOC0OQ0:O00O00OOQ0;OQOCOC0OQ0,OOOCOC0OQ0:Integer);
begin
O0OCOC0OQ0.OQOO00OOQ0(O0CQ0C0OQ0 or OQCQ0C0OQ0);
O0OCOC0OQ0.OQOO00OOQ0(OO0C0C0OQ0);
OQC0C0OOQ0(O0OCOC0OQ0,OQOCOC0OQ0);
O0OCOC0OQ0.OQOO00OOQ0(1);
O0OCOC0OQ0.OQOO00OOQ0(1);
O0OCOC0OQ0.OQOO00OOQ0(0);
OQC0C0OOQ0(O0OCOC0OQ0,OOOCOC0OQ0);
end;
destructor OCOCOC0OQ0.Destroy;
begin
O0CCOC0OQ0;
inherited;
end;
procedure OCOCOC0OQ0.O0CCOC0OQ0;
begin
O0QCOC0OQ0:=nil;
FreeAndNil(OOQCOC0OQ0);
end;
class function OCOCOC0OQ0.OOCCOC0OQ0(OQCCOC0OQ0:OOO0CQQOQ0;const OCCCOC0OQ0:string;O000OC0OQ0:OOOOQOOOQ0;OO00OC0OQ0:pOCIError):sword;
var
OQ00OC0OQ0:OOCCQ0COQ0;
OC00OC0OQ0:OOQ0O0QOQ0;
O0O0OC0OQ0,OOO0OC0OQ0:sb2;
OQO0OC0OQ0:TBytes;
begin
O0O0OC0OQ0:=-1;
OOO0OC0OQ0:=0;
OQ00OC0OQ0:=OOCCQ0COQ0.Create(OQCCOC0OQ0.OOCOQOQOQ0);
try
OQ00OC0OQ0.OQQCCQQOQ0:=OQCCOC0OQ0;
OQ00OC0OQ0.O0CCCQQOQ0:='DECLARE VAL VARCHAR2(4000) := :1; BEGIN :2 := XMLTYPE(VAL); END;';
OQ00OC0OQ0.OOCCCQQOQ0:=OCI_STMT_DECLARE;
OQO0OC0OQ0:=O00CCQOOQ0(OQCCOC0OQ0.OOCOQOQOQ0.O00CQ0COQ0,O0OQCQOOQ0(OQCCOC0OQ0.OOQQO0QOQ0),OCCCOC0OQ0);
OC00OC0OQ0:=OOQ0O0QOQ0.Create(OQ00OC0OQ0);
OC00OC0OQ0.OCCCO0COQ0:='1';
OC00OC0OQ0.O000O0COQ0:=SQLT_CHR;
if Length(OQO0OC0OQ0)<>0 then begin
OC00OC0OQ0.O0Q0O0COQ0:=@OQO0OC0OQ0[0];
OC00OC0OQ0.OOQ0O0COQ0:=Length(OQO0OC0OQ0);
OC00OC0OQ0.OQQ0O0COQ0:=@OOO0OC0OQ0;
if OQCCOC0OQ0.OOCOQOQOQ0.O00CQ0COQ0 then
OC00OC0OQ0.OOC0O0COQ0:=GetUTF8Charset(OQCCOC0OQ0.OO0QO0QOQ0);
end
else begin
OC00OC0OQ0.O0Q0O0COQ0:=nil;
OC00OC0OQ0.OOQ0O0COQ0:=0;
OC00OC0OQ0.OQQ0O0COQ0:=@O0O0OC0OQ0
end;
OQ00OC0OQ0.OCCCCQQOQ0.Add(OC00OC0OQ0);
OC00OC0OQ0:=OOQ0O0QOQ0.Create(OQ00OC0OQ0);
OC00OC0OQ0.OCCCO0COQ0:='2';
OC00OC0OQ0.O000O0COQ0:=SQLT_NTY;
OC00OC0OQ0.O00OO0COQ0:=O000OC0OQ0.OO00QOOOQ0;
OC00OC0OQ0.O0Q0O0COQ0:=O000OC0OQ0.OQQOQOCOQ0;
OC00OC0OQ0.OOQ0O0COQ0:=0;
OC00OC0OQ0.OQQ0O0COQ0:=O000OC0OQ0.O0O0QOOOQ0;
OQ00OC0OQ0.OCCCCQQOQ0.Add(OC00OC0OQ0);
Result:=OQ00OC0OQ0.OQQQCQQOQ0(OO00OC0OQ0,1,0,OCI_DEFAULT);
finally
OQ00OC0OQ0.Free;
end;
end;
class function OCOCOC0OQ0.OCO0OC0OQ0(O0Q0OC0OQ0:OOO0CQQOQ0;OOQ0OC0OQ0:OOCCQ0QOQ0;OQQ0OC0OQ0:OOOOQOOOQ0;OCQ0OC0OQ0:pOCIError):sword;
var
O0C0OC0OQ0:OOCCQ0COQ0;
OOC0OC0OQ0:OOQ0O0QOQ0;
OQC0OC0OQ0:IntPtr;
OCC0OC0OQ0:sb2;
begin
OCC0OC0OQ0:=0;
O0C0OC0OQ0:=OOCCQ0COQ0.Create(O0Q0OC0OQ0.OOCOQOQOQ0);
try
O0C0OC0OQ0.OQQCCQQOQ0:=O0Q0OC0OQ0;
O0C0OC0OQ0.O0CCCQQOQ0:='DECLARE VAL CLOB := :1; BEGIN :2 := XMLTYPE(VAL); END;';
O0C0OC0OQ0.OOCCCQQOQ0:=OCI_STMT_DECLARE;
OQC0OC0OQ0:=OOQ0OC0OQ0.OQQOQOCOQ0;
OOC0OC0OQ0:=OOQ0O0QOQ0.Create(O0C0OC0OQ0);
OOC0OC0OQ0.OCCCO0COQ0:='1';
OOC0OC0OQ0.O000O0COQ0:=SQLT_CLOB;
OOC0OC0OQ0.O0Q0O0COQ0:=@OQC0OC0OQ0;
OOC0OC0OQ0.OOQ0O0COQ0:=0;
OOC0OC0OQ0.OQQ0O0COQ0:=@OCC0OC0OQ0;
O0C0OC0OQ0.OCCCCQQOQ0.Add(OOC0OC0OQ0);
OOC0OC0OQ0:=OOQ0O0QOQ0.Create(O0C0OC0OQ0);
OOC0OC0OQ0.OCCCO0COQ0:='2';
OOC0OC0OQ0.O000O0COQ0:=SQLT_NTY;
OOC0OC0OQ0.O00OO0COQ0:=OQQ0OC0OQ0.OO00QOOOQ0;
OOC0OC0OQ0.O0Q0O0COQ0:=OQQ0OC0OQ0.OQQOQOCOQ0;
OOC0OC0OQ0.OOQ0O0COQ0:=0;
OOC0OC0OQ0.OQQ0O0COQ0:=OQQ0OC0OQ0.O0O0QOOOQ0;
O0C0OC0OQ0.OCCCCQQOQ0.Add(OOC0OC0OQ0);
Result:=O0C0OC0OQ0.OQQQCQQOQ0(OCQ0OC0OQ0,1,0,OCI_DEFAULT);
finally
O0C0OC0OQ0.Free;
end;
end;
class function OCOCOC0OQ0.O00OOC0OQ0(OO0OOC0OQ0:OOO0CQQOQ0;OQ0OOC0OQ0:OOOOQOOOQ0;out OC0OOC0OQ0:string;O0OOOC0OQ0:pOCIError):sword;
var
OOOOOC0OQ0:OOCCQ0COQ0;
OQOOOC0OQ0:OOQ0O0QOQ0;
OCOOOC0OQ0:TBytes;
O0QOOC0OQ0:sb2;
OOQOOC0OQ0:sb2;
begin
OOOOOC0OQ0:=OOCCQ0COQ0.Create(OO0OOC0OQ0.OOCOQOQOQ0);
try
OOOOOC0OQ0.OQQCCQQOQ0:=OO0OOC0OQ0;
OOOOOC0OQ0.O0CCCQQOQ0:='DECLARE XML SYS.XMLTYPE := :1; BEGIN :2 := XML.GetStringVal; END;';
OOOOOC0OQ0.OOCCCQQOQ0:=OCI_STMT_DECLARE;
OQOOOC0OQ0:=OOQ0O0QOQ0.Create(OOOOOC0OQ0);
OQOOOC0OQ0.OCCCO0COQ0:='1';
OQOOOC0OQ0.O000O0COQ0:=SQLT_NTY;
OQOOOC0OQ0.O00OO0COQ0:=OQ0OOC0OQ0.OO00QOOOQ0;
OQOOOC0OQ0.O0Q0O0COQ0:=OQ0OOC0OQ0.OQQOQOCOQ0;
OQOOOC0OQ0.OOQ0O0COQ0:=0;
OQOOOC0OQ0.OQQ0O0COQ0:=OQ0OOC0OQ0.O0O0QOOOQ0;
OOOOOC0OQ0.OCCCCQQOQ0.Add(OQOOOC0OQ0);
OOQOOC0OQ0:=-1;
SetLength(OCOOOC0OQ0,16384);
OQOOOC0OQ0:=OOQ0O0QOQ0.Create(OOOOOC0OQ0);
OQOOOC0OQ0.OCCCO0COQ0:='2';
OQOOOC0OQ0.O000O0COQ0:=SQLT_CHR;
OQOOOC0OQ0.O0Q0O0COQ0:=@OCOOOC0OQ0[0];
OQOOOC0OQ0.OOQ0O0COQ0:=Length(OCOOOC0OQ0);
OQOOOC0OQ0.OCQ0O0COQ0:=@O0QOOC0OQ0;
OQOOOC0OQ0.OQQ0O0COQ0:=@OOQOOC0OQ0;
if OO0OOC0OQ0.OOCOQOQOQ0.O00CQ0COQ0 then
OQOOOC0OQ0.OOC0O0COQ0:=GetUTF8Charset(OO0OOC0OQ0.OO0QO0QOQ0);
OOOOOC0OQ0.OCCCCQQOQ0.Add(OQOOOC0OQ0);
Result:=OOOOOC0OQ0.OQQQCQQOQ0(O0OOOC0OQ0,1,0,OCI_DEFAULT);
if(Result=0)and(OOQOOC0OQ0=OCI_IND_NULL)then
Result:=OCI_NO_DATA;
if Result=0 then
if OO0OOC0OQ0.OOCOQOQOQ0.O00CQ0COQ0 then
OC0OOC0OQ0:=Encoding.UTF8.GetString(OCOOOC0OQ0,0,O0QOOC0OQ0)
else
OC0OOC0OQ0:=Encoding.Default.GetString(OCOOOC0OQ0,0,O0QOOC0OQ0)
else
OC0OOC0OQ0:='';
finally
OOOOOC0OQ0.Free;
end;
end;
class function OCOCOC0OQ0.OQQOOC0OQ0(OCQOOC0OQ0:OOO0CQQOQ0;O0COOC0OQ0:OOOOQOOOQ0;out OOCOOC0OQ0:OOCCQ0QOQ0;OQCOOC0OQ0:pOCIError):sword;
var
OCCOOC0OQ0:OOCCQ0COQ0;
O00Q0C0OQ0:OOQ0O0QOQ0;
OO0Q0C0OQ0:IntPtr;
OQ0Q0C0OQ0:sb2;
begin
OCCOOC0OQ0:=OOCCQ0COQ0.Create(OCQOOC0OQ0.OOCOQOQOQ0);
try
OCCOOC0OQ0.OQQCCQQOQ0:=OCQOOC0OQ0;
OCCOOC0OQ0.O0CCCQQOQ0:='DECLARE XML SYS.XMLTYPE := :1; BEGIN :2 := XML.GetClobVal; END;';
OCCOOC0OQ0.OOCCCQQOQ0:=OCI_STMT_DECLARE;
O00Q0C0OQ0:=OOQ0O0QOQ0.Create(OCCOOC0OQ0);
O00Q0C0OQ0.OCCCO0COQ0:='1';
O00Q0C0OQ0.O000O0COQ0:=SQLT_NTY;
O00Q0C0OQ0.O00OO0COQ0:=O0COOC0OQ0.OO00QOOOQ0;
O00Q0C0OQ0.O0Q0O0COQ0:=O0COOC0OQ0.OQQOQOCOQ0;
O00Q0C0OQ0.OOQ0O0COQ0:=0;
O00Q0C0OQ0.OQQ0O0COQ0:=O0COOC0OQ0.O0O0QOOOQ0;
OCCOOC0OQ0.OCCCCQQOQ0.Add(O00Q0C0OQ0);
OQ0Q0C0OQ0:=-1;
OOCOOC0OQ0:=OOCCQ0QOQ0.Create(OCQOOC0OQ0.OOCOQOQOQ0,SQLT_CLOB);
OO0Q0C0OQ0:=OOCOOC0OQ0.OQQOQOCOQ0;
O00Q0C0OQ0:=OOQ0O0QOQ0.Create(OCCOOC0OQ0);
O00Q0C0OQ0.OCCCO0COQ0:='2';
O00Q0C0OQ0.O000O0COQ0:=SQLT_CLOB;
O00Q0C0OQ0.O0Q0O0COQ0:=@OO0Q0C0OQ0;
O00Q0C0OQ0.OOQ0O0COQ0:=0;
O00Q0C0OQ0.OQQ0O0COQ0:=@OQ0Q0C0OQ0;
OCCOOC0OQ0.OCCCCQQOQ0.Add(O00Q0C0OQ0);
Result:=OCCOOC0OQ0.OQQQCQQOQ0(OQCOOC0OQ0,1,0,OCI_DEFAULT);
if(Result=0)and(OQ0Q0C0OQ0=OCI_IND_NULL)then
Result:=OCI_NO_DATA;
if Result<>0 then begin
OOCOOC0OQ0.OCQ0QOCOQ0;
OOCOOC0OQ0:=nil;
end;
finally
OCCOOC0OQ0.Free;
end;
end;
end.
