//////////////////////////////////////////////////
//  SecureBridge Components
//  Copyright © 2007-2021 Devart. All right reserved.
//////////////////////////////////////////////////
{$I Tds.inc}
unit TdsASN1Uni;
interface
uses
SysUtils,Classes,
CRTypes,CRFunctions,CLRClasses,
{$IFNDEF UNIDACPRO}
TdsUtils;
{$ELSE}
TdsUtilsUni;
{$ENDIF}
type
O0QCQCOOQ0=(
O0QQCCOOQ0,OOQQCCOOQ0,OQQQCCOOQ0,
OCQQCCOOQ0,O0CQCCOOQ0,
OOCQCCOOQ0,OQCQCCOOQ0,
OCCQCCOOQ0,O00CCCOOQ0,OO0CCCOOQ0,
OQ0CCCOOQ0,OC0CCCOOQ0,O0OCCCOOQ0,
OOOCCCOOQ0,OQOCCCOOQ0,
OCOCCCOOQ0,O0QCCCOOQ0,
OOQCCCOOQ0,OQQCCCOOQ0,OCQCCCOOQ0,
O0CCCCOOQ0,OOCCCCOOQ0,
OQCCCCOOQ0,OCCCCCOOQ0,
O000CCOOQ0,OO00CCOOQ0,
OQ00CCOOQ0,OC00CCOOQ0,O0O0CCOOQ0,
OOO0CCOOQ0,OQO0CCOOQ0,
OCO0CCOOQ0,O0Q0CCOOQ0,
OOQ0CCOOQ0,OQQ0CCOOQ0,OCQ0CCOOQ0,
O0C0CCOOQ0,OOC0CCOOQ0,
OQC0CCOOQ0,OCC0CCOOQ0,
O00OCCOOQ0,OO0OCCOOQ0,
OQ0OCCOOQ0,OC0OCCOOQ0,
O0OOCCOOQ0,OOOOCCOOQ0,
OQOOCCOOQ0,OCOOCCOOQ0,O0QOCCOOQ0,
OOQOCCOOQ0,OQQOCCOOQ0,
OCQOCCOOQ0,O0COCCOOQ0,
OOCOCCOOQ0,OQCOCCOOQ0,
OCCOCCOOQ0,O00QQCOOQ0,
OO0QQCOOQ0,
OQ0QQCOOQ0,OC0QQCOOQ0,
O0OQQCOOQ0,OOOQQCOOQ0,
OQOQQCOOQ0,OCOQQCOOQ0,
O0QQQCOOQ0,OOQQQCOOQ0,
OQQQQCOOQ0,
OCQQQCOOQ0,O0CQQCOOQ0,OOCQQCOOQ0,
OQCQQCOOQ0,OCCQQCOOQ0,
O00CQCOOQ0,OO0CQCOOQ0,OQ0CQCOOQ0,
OC0CQCOOQ0,O0OCQCOOQ0,OOOCQCOOQ0,
OQOCQCOOQ0,OCOCQCOOQ0
);
OOQCQCOOQ0=array of integer;
O0OOQCOOQ0=(
OQQCQCOOQ0,OCQCQCOOQ0,O0CCQCOOQ0,OOCCQCOOQ0,
OQCCQCOOQ0,OCCCQCOOQ0,O000QCOOQ0,OO00QCOOQ0,OQ00QCOOQ0,
OC00QCOOQ0,O0O0QCOOQ0,
OOO0QCOOQ0,OQO0QCOOQ0,OCO0QCOOQ0,O0Q0QCOOQ0,OOQ0QCOOQ0,
OQQ0QCOOQ0,OCQ0QCOOQ0,O0C0QCOOQ0,OOC0QCOOQ0,OQC0QCOOQ0,OCC0QCOOQ0,
O00OQCOOQ0,OO0OQCOOQ0,OQ0OQCOOQ0,OC0OQCOOQ0
);
TScASN1DataTypes=set of O0OOQCOOQ0;
OQQOQCOOQ0=(OOOOQCOOQ0,OQOOQCOOQ0,OCOOQCOOQ0,O0QOQCOOQ0,OOQOQCOOQ0);
TScLexemStatuses=set of OQQOQCOOQ0;
OCQOQCOOQ0=^O0COQCOOQ0;
O0COQCOOQ0=packed record
OOCOQCOOQ0:TBytes;
OQCOQCOOQ0:Int64;
OCCOQCOOQ0:Int64;
O00QOQOOQ0:integer;
OO0QOQOOQ0:O0OOQCOOQ0;
OQ0QOQOOQ0:boolean;
end;
OC0QOQOOQ0=class;
TScLexemInfos=array of OC0QOQOOQ0;
{$IFNDEF VER12P}
{$EXTERNALSYM TScLexemInfos}
{$ENDIF}
O0OC0QOOQ0={$IFDEF AUTOREFCOUNT}^{$ENDIF}OC0QOQOOQ0;
OOOC0QOOQ0=class of OC0QOQOOQ0;
OC0QOQOOQ0=class
private
O0OQOQOOQ0:O0COQCOOQ0;
OOOQOQOOQ0:O0OC0QOOQ0;
OQOQOQOOQ0:string;
OCOQOQOOQ0:TScLexemStatuses;
O0QQOQOOQ0:TScASN1DataTypes;
OOQQOQOOQ0:byte;
function OQQQOQOOQ0:boolean;
function OCQQOQOOQ0:O0OOQCOOQ0;
procedure O0CQOQOOQ0(OOCQOQOOQ0:O0OOQCOOQ0);
function OQCQOQOOQ0:TBytes;
procedure OCCQOQOOQ0(const O00COQOOQ0:TBytes);
function OO0COQOOQ0:string;
procedure OQ0COQOOQ0(const OC0COQOOQ0:string);
function O0OCOQOOQ0:WideString;
procedure OOOCOQOOQ0(const OQOCOQOOQ0:WideString);
function OCOCOQOOQ0:boolean;
procedure O0QCOQOOQ0(OOQCOQOOQ0:boolean);
function OQQCOQOOQ0:Int64;
procedure OCQCOQOOQ0(O0CCOQOOQ0:Int64);
function OOCCOQOOQ0:TBytes;
procedure OQCCOQOOQ0(const OCCCOQOOQ0:TBytes);
function O000OQOOQ0:string;
procedure OO00OQOOQ0(const OQ00OQOOQ0:string);
function OC00OQOOQ0:TDateTime;
procedure O0O0OQOOQ0(const OOO0OQOOQ0:TDateTime);
procedure OQO0OQOOQ0(OCO0OQOOQ0:Int64);
function O0Q0OQOOQ0:TBytes;
procedure OQQ0OQOOQ0(const OCQ0OQOOQ0:TBytes);
procedure O0C0OQOOQ0;
function OQC0OQOOQ0:TStream;
protected
function O00OOQOOQ0(OO0OOQOOQ0:integer):OC0QOQOOQ0;virtual;
function OQ0OOQOOQ0:integer;virtual;
procedure OC0OOQOOQ0(O0OOOQOOQ0:integer);virtual;
procedure OOOOOQOOQ0(OQOOOQOOQ0:OC0QOQOOQ0);virtual;
function OCOOOQOOQ0(const O0QOOQOOQ0:OOOC0QOOQ0=nil):OC0QOQOOQ0;virtual;
function OOQOOQOOQ0(const OQQOOQOOQ0:string):OC0QOQOOQ0;
function OCQOOQOOQ0(const O0COOQOOQ0:string):OC0QOQOOQ0;virtual;
public
constructor Create;virtual;
destructor Destroy;override;
function OCCOOQOOQ0:OC0QOQOOQ0;virtual;
procedure O00Q0QOOQ0(const OO0Q0QOOQ0:string);virtual;
function OQ0Q0QOOQ0:Int64;
function OC0Q0QOOQ0:OQC0O0QOQ0;
property O0OQ0QOOQ0:TBytes read O0Q0OQOOQ0 write OQQ0OQOOQ0;
property OOOQ0QOOQ0:boolean read OQQQOQOOQ0;
property OQOQ0QOOQ0:TBytes read OQCQOQOOQ0 write OCCQOQOOQ0;
property OCOQ0QOOQ0:string read OO0COQOOQ0 write OQ0COQOOQ0;
property O0QQ0QOOQ0:WideString read O0OCOQOOQ0 write OOOCOQOOQ0;
property OOQQ0QOOQ0:boolean read OCOCOQOOQ0 write O0QCOQOOQ0;
property OQQQ0QOOQ0:Int64 read OQQCOQOOQ0 write OCQCOQOOQ0;
property OCQQ0QOOQ0:TBytes read OOCCOQOOQ0 write OQCCOQOOQ0;
property O0CQ0QOOQ0:string read O000OQOOQ0 write OO00OQOOQ0;
property OOCQ0QOOQ0:TDateTime read OC00OQOOQ0 write O0O0OQOOQ0;
property OQCQ0QOOQ0:O0OOQCOOQ0 read OCQQOQOOQ0 write O0CQOQOOQ0;
property OCCQ0QOOQ0:Int64 write OQO0OQOOQ0;
property O00C0QOOQ0:string read OQOQOQOOQ0;
property OO0C0QOOQ0[Index:integer]:OC0QOQOOQ0 read O00OOQOOQ0;
property OQ0C0QOOQ0:integer read OQ0OOQOOQ0 write OC0OOQOOQ0;
property OC0C0QOOQ0[const Name:string]:OC0QOQOOQ0 read OOQOOQOOQ0;default;
end;
OQOC0QOOQ0=class(OC0QOQOOQ0)
private
OCOC0QOOQ0:string;
protected
procedure OOOOOQOOQ0(OQOOOQOOQ0:OC0QOQOOQ0);override;
public
constructor Create;override;
end;
O0QC0QOOQ0=class(OC0QOQOOQ0)
private
OOQC0QOOQ0:TScLexemInfos;
OQQC0QOOQ0:integer;
protected
procedure OOOOOQOOQ0(OQOOOQOOQ0:OC0QOQOOQ0);override;
function OCOOOQOOQ0(const O0QOOQOOQ0:OOOC0QOOQ0=nil):OC0QOQOOQ0;override;
function OOCC0QOOQ0(OQCC0QOOQ0:O0OOQCOOQ0;OCCC0QOOQ0:boolean):OC0QOQOOQ0;
function OCQOOQOOQ0(const O0COOQOOQ0:string):OC0QOQOOQ0;override;
public
constructor Create;override;
destructor Destroy;override;
function OCCOOQOOQ0:OC0QOQOOQ0;override;
procedure O00Q0QOOQ0(const OO0Q0QOOQ0:string);override;
end;
O0Q00QOOQ0=class(O0QC0QOOQ0)
private
OOQ00QOOQ0:TCRObjectList;
protected
function O00OOQOOQ0(OO0OOQOOQ0:integer):OC0QOQOOQ0;override;
function OQ0OOQOOQ0:integer;override;
procedure OC0OOQOOQ0(O0OOOQOOQ0:integer);override;
public
constructor Create;override;
destructor Destroy;override;
end;
OQQ00QOOQ0=class(O0Q00QOOQ0)
private
OCQ00QOOQ0:TStream;
public
constructor Create;override;
end;
O0C00QOOQ0=class
public
class function OOC00QOOQ0(OQC00QOOQ0:TStream;const OCC00QOOQ0:O0COQCOOQ0):TBytes;
class function O00O0QOOQ0(OO0O0QOOQ0:TStream;const OQ0O0QOOQ0:O0COQCOOQ0):string;
class function O0QO0QOOQ0(OOQO0QOOQ0:TStream;const OQQO0QOOQ0:O0COQCOOQ0):WideString;
class function OOCO0QOOQ0(OQCO0QOOQ0:TStream;const OCCO0QOOQ0:O0COQCOOQ0):boolean;
class function OO0QCQOOQ0(OQ0QCQOOQ0:TStream;const OC0QCQOOQ0:O0COQCOOQ0):Int64;
class function OQOQCQOOQ0(OCOQCQOOQ0:TStream;const O0QQCQOOQ0:O0COQCOOQ0):TBytes;
class function O0CQCQOOQ0(OOCQCQOOQ0:TStream;const OQCQCQOOQ0:O0COQCOOQ0):string;
class function OOOCCQOOQ0(OQOCCQOOQ0:TStream;const OCOCCQOOQ0:O0COQCOOQ0):TDateTime;
end;
OQCCCQOOQ0=class
public
class procedure OCCCCQOOQ0(var O000CQOOQ0:O0COQCOOQ0;const O00COQOOQ0:TBytes);
class procedure OO00CQOOQ0(var OQ00CQOOQ0:O0COQCOOQ0;const OC0COQOOQ0:string);
class procedure OQQ0CQOOQ0(var OCQ0CQOOQ0:O0COQCOOQ0;const OQOCOQOOQ0:WideString);
class procedure O0C0CQOOQ0(var OOC0CQOOQ0:O0COQCOOQ0;OOQCOQOOQ0:boolean);
class procedure OQC0CQOOQ0(var OCC0CQOOQ0:O0COQCOOQ0;O0CCOQOOQ0:Int64);
class procedure OO0OCQOOQ0(var OQ0OCQOOQ0:O0COQCOOQ0;const OCCCOQOOQ0:TBytes);
class procedure OC0OCQOOQ0(var O0OOCQOOQ0:O0COQCOOQ0;const OQ00OQOOQ0:string);
class procedure OOQOCQOOQ0(var OQQOCQOOQ0:O0COQCOOQ0;OOO0OQOOQ0:TDateTime);
end;
OQCOCQOOQ0=class
protected
OCCOCQOOQ0:OQQ00QOOQ0;
O00QQQOOQ0:TStream;
function OO0QQQOOQ0(OQ0QQQOOQ0:OC0QOQOOQ0;var OC0QQQOOQ0:Int64):byte;{$IFDEF USE_INLINE}inline;{$ENDIF}
function O0OQQQOOQ0(OOOQQQOOQ0:OC0QOQOOQ0;OQOQQQOOQ0:integer;var OCOQQQOOQ0:Int64):Int64;
function OQQQQQOOQ0(OCQQQQOOQ0:OC0QOQOOQ0;var O0CQQQOOQ0:Int64):Int64;
class function OQCQQQOOQ0(const OCCQQQOOQ0:string):O0OOQCOOQ0;
class function O00CQQOOQ0(OO0CQQOOQ0:byte):O0OOQCOOQ0;
class procedure OQ0CQQOOQ0(const OC0CQQOOQ0:string;O0OCQQOOQ0,OOOCQQOOQ0:integer;OQOCQQOOQ0:O0QC0QOOQ0);
function OOQ0QQOOQ0(OQQ0QQOOQ0:O0QC0QOOQ0;var OCQ0QQOOQ0:Int64):boolean;
class function OOQOQQOOQ0(OQQOQQOOQ0:Int64):integer;
class function OCQOQQOOQ0(O0COQQOOQ0:OC0QOQOOQ0):Int64;
class procedure OQCOQQOOQ0(OCCOQQOOQ0:OC0QOQOOQ0;out O00QOOOOQ0:Int64);
class procedure OOOQOOOOQ0(OQOQOOOOQ0:OC0QOQOOQ0;out OCOQOOOOQ0:Int64);
class procedure OOCQOOOOQ0(OQCQOOOOQ0:O0QC0QOOQ0;var OCCQOOOOQ0:TBytes);
function OQOCOOOOQ0(const OQQOOQOOQ0:string):OC0QOQOOQ0;
function OCOCOOOOQ0:OC0QOQOOQ0;
public
destructor Destroy;override;
function OOQCOOOOQ0:TBytes;
function OCQCOOOOQ0(const O0CCOOOOQ0:O0QCQCOOQ0):boolean;overload;
function OCQCOOOOQ0(const O0CCOOOOQ0:O0QCQCOOQ0;const OOCCOOOOQ0:TBytes):boolean;overload;
function OCQCOOOOQ0(const O0CCOOOOQ0:O0QCQCOOQ0;const OOCCOOOOQ0:TBytes;OQCCOOOOQ0,OCCCOOOOQ0:integer):boolean;overload;
function OCQCOOOOQ0(const O0CCOOOOQ0:O0QCQCOOQ0;O000OOOOQ0:TStream):boolean;overload;
property O0O0OOOOQ0:OC0QOQOOQ0 read OCOCOOOOQ0;
property OOO0OOOOQ0[const Name:string]:OC0QOQOOQ0 read OQOCOOOOQ0;default;
end;
implementation
uses
{$IFDEF MSWINDOWS}
Windows,
{$ENDIF}
DateUtils,SyncObjs,
{$IFNDEF UNIDACPRO}
TdsSSLConsts,TdsCertificateConsts;
{$ELSE}
TdsSSLConstsUni,TdsCertificateConstsUni;
{$ENDIF}
const
OQO0OOOOQ0:array[O0QCQCOOQ0]of string=(
CERTIFICATE_DESC,EC_SIGN_DESC,X25519_PUBLIC_KEY_PARAMS_DESC,
EC_DOMAIN_PARAMS_DESC,RSA_PUBLIC_KEY_PKCS1_DESC,
RSA_PRIVATE_KEY_PKCS1_DESC,DSA_PUBLIC_KEY_PKCS1_DESC,
DSA_PRIVATE_KEY_PKCS1_DESC,EC_PUBLIC_KEY_DESC,EC_POINT_DESC,
EC_PRIVATE_KEY_DESC,RSA_PKCS8_KEY_DESC,DSA_PKCS8_KEY_DESC,
Ed25519_PKCS8_KEY_DESC,EC_PKCS8_KEY_DESC,
PRIVATE_KEY_PKCS8_PBES2ENC_DESC,RSAES_OAEP_PARAMS_DESC,
RSASSA_PSS_PARAMS_DESC,ATTR_AND_VALUE_DESC,ATTRIBUTE_DESC,
RDN_FORMAT,DISTINGUISHED_NAME_FORMAT,
ISSUER_AND_SERIAL_NUMBER_DESC,SUBJECT_KEY_IDENTIFIER_DESC,
RECIPIENT_KEY_IDENTIFIER_DESC,PUBLIC_KEY_DESC,
SMIME_ATTRIBUTE_DESC,SIGNER_INFO_DESC,SIGNED_DATA_DESC,
KEY_TRANS_RECIPIENT_INFO_DESC,KEY_AGREE_RECIPIENT_INFO_DESC,
KEK_RECIPIENT_INFO_DESC,PASSWORD_RECIPIENT_INFO_DESC,
ENVELOPED_DATA_DESC,DISTINGUISHED_NAMES,EC_PK_RESTRICTIONS_DESC,
RSA_PUBLIC_KEY_OPENSSL_DESC,RSA_PUBLIC_KEY_OPENSSL_DESC2,
DSA_PUBLIC_KEY_OPENSSL_DESC,RSA_PRIVATE_KEY_OPENSSL_DESC,
DSA_PRIVATE_KEY_OPENSSL_DESC,DSA_CERT_PUBLIC_KEY_DESC,
DSA_TRUNC_PUBLIC_KEY_PKCS1_DESC,PKCS8_KEY_DESC,
DSA_PRIVATE_KEY_PKCS8_DESC,PRIVATE_KEY_PKCS8ENC_DESC,
PBES2_PARAMS_DESC,PBES1_PARAMS_DESC,PKCS12_PBE_PARAMS_DESC,
BASIC_CONSTRAINTS_EXTENSION_DESC,BASIC_CONSTRAINTS2_EXTENSION_DESC,
KEY_USAGE_EXTENSION_DESC,EXTENDED_KEY_USAGE_EXTENSION_DESC,
SUBJECT_KEY_ID_EXTENSION_DESC,CERTIFICATE_POLICIES_EXTENSION_DESC,
POLICY_MAPPINGS_EXTENSION_DESC,ALTERNATIVE_NAME_EXTENSION_DESC,
SUBJECT_DIRECTORY_ATTRIBUTES_EXTENSION_DESC,
CRL_DISTRIBUTION_POINTS_EXTENSION_DESC,AUTHORITY_INFO_ACCESS_EXTENSION_DESC,
SUBJECT_INFO_ACCESS_EXTENSION_DESC,CRL_NUMBER_EXTENSION_DESC,
CRL_ISSUING_DISTRIBUTION_POINT_EXTENSION_DESC,CRL_REASON_EXTENSION_DESC,
CRL_INVALIDITY_DATE_EXTENSION_DESC,CRL_CERTIFICATE_ISSUER_EXTENSION_DESC,
SIGNED_CERTIFICATE_TIMESTAMP_LIST_DESC,
CERTIFICATE_LIST_DESC,PARTIAL_CERTIFICATE_LIST_DESC,EXTENSIONS_DESC,
AUTHORITY_KEY_ID_EXTENSION_DESC,AUTHORITY_KEY_ID_EXTENSION_DESC2,
ATTRIBUTES_DESC,SIGNED_ATTRS_DESC,UNSIGNED_ATTRS_DESC,
PFX_DESC,AUTH_SAFE_DESC_EX,ENCRYPTED_DATA_DESC,
SAFE_CONTENTS_DESC_EX,SAFE_BAG_VALUE_DESC
);
var
OCO0OOOOQ0:TCriticalSection;
O0Q0OOOOQ0:array[O0QCQCOOQ0]of OC0QOQOOQ0;
type
TASN1ClassInfo=record
No:byte;
Desc:string;
end;
const
OOQ0OOOOQ0:array[O0OOQCOOQ0]of TASN1ClassInfo=(
(No:$3F;Desc:'ANY'),
(No:$3F;Desc:'ARRAY'),
(No:$3F;Desc:'CHOICE'),
(No:$3F;Desc:'CHOICE'),
(No:$01;Desc:'BOOL'),
(No:$02;Desc:'INT'),
(No:$03;Desc:'BIT'),
(No:$04;Desc:'OCTSTR'),
(No:$05;Desc:'NULL'),
(No:$06;Desc:'OID'),
(No:$0A;Desc:'ENUM'),
(No:$0C;Desc:'UTF8STR'),
(No:$12;Desc:'NUMERICSTR'),
(No:$13;Desc:'PRINTABLESTR'),
(No:$14;Desc:'TELETEXSTR'),
(No:$15;Desc:'VIDEOTEXSTR'),
(No:$16;Desc:'IA5STR'),
(No:$19;Desc:'GRAPHICSTR'),
(No:$1A;Desc:'VISIBLESTR'),
(No:$1B;Desc:'GENERALSTR'),
(No:$1C;Desc:'UNIVERSALSTR'),
(No:$1E;Desc:'BMPSTR'),
(No:$17;Desc:'UTCTIME'),
(No:$18;Desc:'GENTIME'),
(No:$30;Desc:'SEQ'),
(No:$31;Desc:'SET')
);
const
OQQ0OOOOQ0=[
OQCCQCOOQ0,OCCCQCOOQ0,OQ00QCOOQ0,O0O0QCOOQ0,
OOO0QCOOQ0,OQO0QCOOQ0,OCO0QCOOQ0,O0Q0QCOOQ0,OOQ0QCOOQ0,
OQQ0QCOOQ0,OCQ0QCOOQ0,O0C0QCOOQ0,OOC0QCOOQ0,OQC0QCOOQ0,OCC0QCOOQ0,
O00OQCOOQ0,OO0OQCOOQ0
];
const
OCQ0OOOOQ0:packed array[0..255]of array[1..2]of Char=
('00','01','02','03','04','05','06','07','08','09','0A','0B','0C','0D','0E','0F',
'10','11','12','13','14','15','16','17','18','19','1A','1B','1C','1D','1E','1F',
'20','21','22','23','24','25','26','27','28','29','2A','2B','2C','2D','2E','2F',
'30','31','32','33','34','35','36','37','38','39','3A','3B','3C','3D','3E','3F',
'40','41','42','43','44','45','46','47','48','49','4A','4B','4C','4D','4E','4F',
'50','51','52','53','54','55','56','57','58','59','5A','5B','5C','5D','5E','5F',
'60','61','62','63','64','65','66','67','68','69','6A','6B','6C','6D','6E','6F',
'70','71','72','73','74','75','76','77','78','79','7A','7B','7C','7D','7E','7F',
'80','81','82','83','84','85','86','87','88','89','8A','8B','8C','8D','8E','8F',
'90','91','92','93','94','95','96','97','98','99','9A','9B','9C','9D','9E','9F',
'A0','A1','A2','A3','A4','A5','A6','A7','A8','A9','AA','AB','AC','AD','AE','AF',
'B0','B1','B2','B3','B4','B5','B6','B7','B8','B9','BA','BB','BC','BD','BE','BF',
'C0','C1','C2','C3','C4','C5','C6','C7','C8','C9','CA','CB','CC','CD','CE','CF',
'D0','D1','D2','D3','D4','D5','D6','D7','D8','D9','DA','DB','DC','DD','DE','DF',
'E0','E1','E2','E3','E4','E5','E6','E7','E8','E9','EA','EB','EC','ED','EE','EF',
'F0','F1','F2','F3','F4','F5','F6','F7','F8','F9','FA','FB','FC','FD','FE','FF');
constructor OC0QOQOOQ0.Create;
begin
inherited;
OCOQOQOOQ0:=[OQOOQCOOQ0];
end;
destructor OC0QOQOOQ0.Destroy;
begin
inherited;
end;
procedure OC0QOQOOQ0.OOOOOQOOQ0(OQOOOQOOQ0:OC0QOQOOQ0);
begin
OQOOOQOOQ0.O0OQOQOOQ0.OQCOQCOOQ0:=O0OQOQOOQ0.OQCOQCOOQ0;
OQOOOQOOQ0.O0OQOQOOQ0.O00QOQOOQ0:=O0OQOQOOQ0.O00QOQOOQ0;
OQOOOQOOQ0.O0OQOQOOQ0.OCCOQCOOQ0:=O0OQOQOOQ0.OCCOQCOOQ0;
OQOOOQOOQ0.O0OQOQOOQ0.OO0QOQOOQ0:=O0OQOQOOQ0.OO0QOQOOQ0;
OQOOOQOOQ0.OQOQOQOOQ0:=OQOQOQOOQ0;
OQOOOQOOQ0.OOQQOQOOQ0:=OOQQOQOOQ0;
OQOOOQOOQ0.OCOQOQOOQ0:=OCOQOQOOQ0;
OQOOOQOOQ0.O0QQOQOOQ0:=O0QQOQOOQ0;
end;
function OC0QOQOOQ0.OCOOOQOOQ0(const O0QOOQOOQ0:OOOC0QOOQ0=nil):OC0QOQOOQ0;
begin
if O0QOOQOOQ0<>nil then
Result:=OOOC0QOOQ0(O0QOOQOOQ0).Create
else
Result:=OOOC0QOOQ0(Self.ClassType).Create;
Self.OOOOOQOOQ0(Result);
Result.OOOQOQOOQ0:=O0OC0QOOQ0(Self);
end;
function OC0QOQOOQ0.OQQQOQOOQ0:boolean;
begin
Result:=OQOOQCOOQ0 in OCOQOQOOQ0;
end;
function OC0QOQOOQ0.OCQQOQOOQ0:O0OOQCOOQ0;
begin
Result:=O0OQOQOOQ0.OO0QOQOOQ0;
end;
procedure OC0QOQOOQ0.O0CQOQOOQ0(OOCQOQOOQ0:O0OOQCOOQ0);
begin
if O0OQOQOOQ0.OO0QOQOOQ0<>OQQCQCOOQ0 then
raise EScError.Create(seDataTypeIsSet);
O0OQOQOOQ0.OO0QOQOOQ0:=OOCQOQOOQ0;
end;
function OC0QOQOOQ0.O00OOQOOQ0(OO0OOQOOQ0:integer):OC0QOQOOQ0;
begin
{$IFDEF FPC}
Result:=nil;
{$ENDIF}
raise EScError.Create(seInvalidInputArgs);
end;
function OC0QOQOOQ0.OQ0OOQOOQ0:integer;
begin
Result:=0;
end;
procedure OC0QOQOOQ0.OC0OOQOOQ0(O0OOOQOOQ0:integer);
begin
raise EScError.Create(seCannotConvert);
end;
procedure OC0QOQOOQ0.O0C0OQOOQ0;
var
OOC0OQOOQ0:OC0QOQOOQ0;
begin
if OOOQOQOOQ0<>nil then begin
OOC0OQOOQ0:=OC0QOQOOQ0(OOOQOQOOQ0);
Exclude(OOC0OQOOQ0.OCOQOQOOQ0,OQOOQCOOQ0);
OOC0OQOOQ0.O0C0OQOOQ0;
end;
end;
function OC0QOQOOQ0.O0Q0OQOOQ0:TBytes;
var
OOQ0OQOOQ0:TStream;
begin
SetLength(Result,O0OQOQOOQ0.OCCOQCOOQ0+O0OQOQOOQ0.O00QOQOOQ0);
OOQ0OQOOQ0:=OQC0OQOOQ0;
if(OOQ0OQOOQ0<>nil)and(Length(Result)>0)then begin
OOQ0OQOOQ0.Position:=O0OQOQOOQ0.OQCOQCOOQ0;
OOQ0OQOOQ0.Read(Result[0],Length(Result));
end;
end;
procedure OC0QOQOOQ0.OQQ0OQOOQ0(const OCQ0OQOOQ0:TBytes);
begin
O0OQOQOOQ0.OOCOQCOOQ0:=OCQ0OQOOQ0;
Include(OCOQOQOOQ0,OOOOQCOOQ0);
Exclude(OCOQOQOOQ0,OQOOQCOOQ0);
O0C0OQOOQ0;
end;
function OC0QOQOOQ0.OQCQOQOOQ0:TBytes;
begin
Result:=O0C00QOOQ0.OOC00QOOQ0(OQC0OQOOQ0,O0OQOQOOQ0);
end;
procedure OC0QOQOOQ0.OCCQOQOOQ0(const O00COQOOQ0:TBytes);
begin
OQCCCQOOQ0.OCCCCQOOQ0(O0OQOQOOQ0,O00COQOOQ0);
Exclude(OCOQOQOOQ0,OQOOQCOOQ0);
O0C0OQOOQ0;
end;
function OC0QOQOOQ0.OO0COQOOQ0:string;
begin
Result:=O0C00QOOQ0.O00O0QOOQ0(OQC0OQOOQ0,O0OQOQOOQ0);
end;
procedure OC0QOQOOQ0.OQ0COQOOQ0(const OC0COQOOQ0:string);
begin
OQCCCQOOQ0.OO00CQOOQ0(O0OQOQOOQ0,OC0COQOOQ0);
Exclude(OCOQOQOOQ0,OQOOQCOOQ0);
O0C0OQOOQ0;
end;
function OC0QOQOOQ0.O0OCOQOOQ0:WideString;
begin
Result:=O0C00QOOQ0.O0QO0QOOQ0(OQC0OQOOQ0,O0OQOQOOQ0);
end;
procedure OC0QOQOOQ0.OOOCOQOOQ0(const OQOCOQOOQ0:WideString);
begin
OQCCCQOOQ0.OQQ0CQOOQ0(O0OQOQOOQ0,OQOCOQOOQ0);
Exclude(OCOQOQOOQ0,OQOOQCOOQ0);
O0C0OQOOQ0;
end;
function OC0QOQOOQ0.OCOCOQOOQ0:boolean;
begin
Result:=O0C00QOOQ0.OOCO0QOOQ0(OQC0OQOOQ0,O0OQOQOOQ0);
end;
procedure OC0QOQOOQ0.O0QCOQOOQ0(OOQCOQOOQ0:boolean);
begin
OQCCCQOOQ0.O0C0CQOOQ0(O0OQOQOOQ0,OOQCOQOOQ0);
Exclude(OCOQOQOOQ0,OQOOQCOOQ0);
O0C0OQOOQ0;
end;
function OC0QOQOOQ0.OQQCOQOOQ0:Int64;
begin
Result:=O0C00QOOQ0.OO0QCQOOQ0(OQC0OQOOQ0,O0OQOQOOQ0);
end;
procedure OC0QOQOOQ0.OCQCOQOOQ0(O0CCOQOOQ0:Int64);
begin
OQCCCQOOQ0.OQC0CQOOQ0(O0OQOQOOQ0,O0CCOQOOQ0);
Exclude(OCOQOQOOQ0,OQOOQCOOQ0);
O0C0OQOOQ0;
end;
function OC0QOQOOQ0.OOCCOQOOQ0:TBytes;
begin
Result:=O0C00QOOQ0.OQOQCQOOQ0(OQC0OQOOQ0,O0OQOQOOQ0);
end;
procedure OC0QOQOOQ0.OQCCOQOOQ0(const OCCCOQOOQ0:TBytes);
begin
OQCCCQOOQ0.OO0OCQOOQ0(O0OQOQOOQ0,OCCCOQOOQ0);
Exclude(OCOQOQOOQ0,OQOOQCOOQ0);
O0C0OQOOQ0;
end;
function OC0QOQOOQ0.O000OQOOQ0:string;
begin
Result:=O0C00QOOQ0.O0CQCQOOQ0(OQC0OQOOQ0,O0OQOQOOQ0);
end;
procedure OC0QOQOOQ0.OO00OQOOQ0(const OQ00OQOOQ0:string);
begin
OQCCCQOOQ0.OC0OCQOOQ0(O0OQOQOOQ0,OQ00OQOOQ0);
Exclude(OCOQOQOOQ0,OQOOQCOOQ0);
O0C0OQOOQ0;
end;
function OC0QOQOOQ0.OC00OQOOQ0:TDateTime;
begin
Result:=O0C00QOOQ0.OOOCCQOOQ0(OQC0OQOOQ0,O0OQOQOOQ0);
end;
procedure OC0QOQOOQ0.O0O0OQOOQ0(const OOO0OQOOQ0:TDateTime);
begin
OQCCCQOOQ0.OOQOCQOOQ0(O0OQOQOOQ0,OOO0OQOOQ0);
Exclude(OCOQOQOOQ0,OQOOQCOOQ0);
O0C0OQOOQ0;
end;
function OC0QOQOOQ0.OC0Q0QOOQ0:OQC0O0QOQ0;
begin
if not(OQOOQCOOQ0 in OCOQOQOOQ0)and(OQC0OQOOQ0=nil)then
raise EScError.Create(seInternalError);
Result.OCC0O0QOQ0:=OQC0OQOOQ0;
Result.O00OO0QOQ0:=O0OQOQOOQ0.OQCOQCOOQ0+O0OQOQOOQ0.O00QOQOOQ0;
Result.OO0OO0QOQ0:=O0OQOQOOQ0.OCCOQCOOQ0;
end;
procedure OC0QOQOOQ0.OQO0OQOOQ0(OCO0OQOOQ0:Int64);
begin
if OCO0OQOOQ0<0 then
raise EScError.Create(seInvalidInputArgs);
O0OQOQOOQ0.OCCOQCOOQ0:=OCO0OQOOQ0;
if OCO0OQOOQ0>0 then
Include(OCOQOQOOQ0,OOQOQCOOQ0)
else
Exclude(OCOQOQOOQ0,OOQOQCOOQ0);
Exclude(OCOQOQOOQ0,OQOOQCOOQ0);
O0C0OQOOQ0;
end;
function OC0QOQOOQ0.OQC0OQOOQ0:TStream;
var
OCC0OQOOQ0:OC0QOQOOQ0;
begin
OCC0OQOOQ0:=Self;
while OCC0OQOOQ0.OOOQOQOOQ0<>nil do
OCC0OQOOQ0:=OC0QOQOOQ0(OCC0OQOOQ0.OOOQOQOOQ0);
if OCC0OQOOQ0 is OQQ00QOOQ0 then
Result:=OQQ00QOOQ0(OCC0OQOOQ0).OCQ00QOOQ0
else
raise EScError.Create(seInvalidInputArgs);
end;
function OC0QOQOOQ0.OQ0Q0QOOQ0:Int64;
begin
Result:=O0OQOQOOQ0.OQCOQCOOQ0;
end;
function OC0QOQOOQ0.OCCOOQOOQ0:OC0QOQOOQ0;
begin
Result:=Self;
end;
procedure OC0QOQOOQ0.O00Q0QOOQ0(const OO0Q0QOOQ0:string);
begin
raise EScError.Create(seInvalidInputArgs);
end;
function OC0QOQOOQ0.OOQOOQOOQ0(const OQQOOQOOQ0:string):OC0QOQOOQ0;
begin
Result:=OCQOOQOOQ0(OQQOOQOOQ0);
if(Result<>nil)and(Result.O0OQOQOOQ0.OO0QOQOOQ0=O0CCQCOOQ0)and((Result as O0QC0QOOQ0).OQQC0QOOQ0>-1)then
Result:=O0QC0QOOQ0(Result).OOQC0QOOQ0[O0QC0QOOQ0(Result).OQQC0QOOQ0];
end;
function OC0QOQOOQ0.OCQOOQOOQ0(const O0COOQOOQ0:string):OC0QOQOOQ0;
begin
{$IFDEF FPC}
Result:=nil;
{$ENDIF}
raise EScError.CreateFmt(SLexemNotFound,[O0COOQOOQ0],seLexemNotFound);
end;
constructor OQOC0QOOQ0.Create;
begin
inherited;
end;
procedure OQOC0QOOQ0.OOOOOQOOQ0(OQOOOQOOQ0:OC0QOQOOQ0);
begin
inherited OOOOOQOOQ0(OQOOOQOOQ0);
if OQOOOQOOQ0 is OQOC0QOOQ0 then
OQOC0QOOQ0(OQOOOQOOQ0).OCOC0QOOQ0:=OCOC0QOOQ0;
end;
constructor O0QC0QOOQ0.Create;
begin
inherited;
OQQC0QOOQ0:=-1;
end;
destructor O0QC0QOOQ0.Destroy;
var
OQO00QOOQ0:integer;
begin
for OQO00QOOQ0:=0 to Length(OOQC0QOOQ0)-1 do
OOQC0QOOQ0[OQO00QOOQ0].Free;
inherited;
end;
procedure O0QC0QOOQ0.OOOOOQOOQ0(OQOOOQOOQ0:OC0QOQOOQ0);
begin
inherited OOOOOQOOQ0(OQOOOQOOQ0);
if OQOOOQOOQ0 is O0QC0QOOQ0 then
O0QC0QOOQ0(OQOOOQOOQ0).OQQC0QOOQ0:=OQQC0QOOQ0;
end;
function O0QC0QOOQ0.OCOOOQOOQ0(const O0QOOQOOQ0:OOOC0QOOQ0=nil):OC0QOQOOQ0;
var
OCQC0QOOQ0:integer;
O0CC0QOOQ0:integer;
begin
Result:=inherited OCOOOQOOQ0(O0QOOQOOQ0);
OCQC0QOOQ0:=Length(OOQC0QOOQ0);
if OCQC0QOOQ0=0 then
Exit;
SetLength(O0QC0QOOQ0(Result).OOQC0QOOQ0,OCQC0QOOQ0);
for O0CC0QOOQ0:=0 to OCQC0QOOQ0-1 do begin
O0QC0QOOQ0(Result).OOQC0QOOQ0[O0CC0QOOQ0]:=OOQC0QOOQ0[O0CC0QOOQ0].OCOOOQOOQ0;
O0QC0QOOQ0(Result).OOQC0QOOQ0[O0CC0QOOQ0].OOOQOQOOQ0:=O0OC0QOOQ0(Result);
end;
end;
function O0QC0QOOQ0.OOCC0QOOQ0(OQCC0QOOQ0:O0OOQCOOQ0;OCCC0QOOQ0:boolean):OC0QOQOOQ0;
var
O0000QOOQ0:integer;
begin
O0000QOOQ0:=Length(OOQC0QOOQ0);
SetLength(OOQC0QOOQ0,O0000QOOQ0+1);
if OCCC0QOOQ0 then
OOQC0QOOQ0[O0000QOOQ0]:=O0Q00QOOQ0.Create
else
if OQCC0QOOQ0 in[OQQCQCOOQ0,O0CCQCOOQ0,OQ0OQCOOQ0,OC0OQCOOQ0,OO00QCOOQ0,O000QCOOQ0,OCQCQCOOQ0]then
OOQC0QOOQ0[O0000QOOQ0]:=O0QC0QOOQ0.Create
else
if OQCC0QOOQ0=OC00QCOOQ0 then
OOQC0QOOQ0[O0000QOOQ0]:=OQOC0QOOQ0.Create
else
OOQC0QOOQ0[O0000QOOQ0]:=OC0QOQOOQ0.Create;
OOQC0QOOQ0[O0000QOOQ0].O0OQOQOOQ0.OO0QOQOOQ0:=OQCC0QOOQ0;
OOQC0QOOQ0[O0000QOOQ0].OOOQOQOOQ0:=O0OC0QOOQ0(Self);
Result:=OOQC0QOOQ0[O0000QOOQ0];
end;
function O0QC0QOOQ0.OCQOOQOOQ0(const O0COOQOOQ0:string):OC0QOQOOQ0;
function OO000QOOQ0(OQ000QOOQ0:O0QC0QOOQ0):OC0QOQOOQ0;
var
OC000QOOQ0:OC0QOQOOQ0;
O0O00QOOQ0:O0QC0QOOQ0;
OOO00QOOQ0:integer;
begin
Result:=nil;
if(OQ000QOOQ0.ClassType=O0Q00QOOQ0)and(O0Q00QOOQ0(OQ000QOOQ0).OOQ00QOOQ0<>nil)then begin
for OOO00QOOQ0:=0 to O0Q00QOOQ0(OQ000QOOQ0).OOQ00QOOQ0.Count-1 do begin
OC000QOOQ0:=OC0QOQOOQ0(O0Q00QOOQ0(OQ000QOOQ0).OOQ00QOOQ0[OOO00QOOQ0]);
if OC000QOOQ0 is O0QC0QOOQ0 then
Result:=OO000QOOQ0(O0QC0QOOQ0(OC000QOOQ0))
else
Result:=nil;
if Result<>nil then
Exit;
end;
end
else begin
for OOO00QOOQ0:=0 to Length(OQ000QOOQ0.OOQC0QOOQ0)-1 do begin
if SameText(OQ000QOOQ0.OOQC0QOOQ0[OOO00QOOQ0].OQOQOQOOQ0,O0COOQOOQ0)then begin
Result:=OQ000QOOQ0.OOQC0QOOQ0[OOO00QOOQ0];
Exit;
end;
end;
for OOO00QOOQ0:=0 to Length(OQ000QOOQ0.OOQC0QOOQ0)-1 do begin
if OQ000QOOQ0.OOQC0QOOQ0[OOO00QOOQ0]is O0QC0QOOQ0 then begin
O0O00QOOQ0:=O0QC0QOOQ0(OQ000QOOQ0.OOQC0QOOQ0[OOO00QOOQ0]);
if(O0O00QOOQ0.O0OQOQOOQ0.OO0QOQOOQ0=O0CCQCOOQ0)and(O0O00QOOQ0.OQQC0QOOQ0>-1)then begin
OC000QOOQ0:=O0O00QOOQ0.OOQC0QOOQ0[O0O00QOOQ0.OQQC0QOOQ0];
if SameText(OC000QOOQ0.OQOQOQOOQ0,O0COOQOOQ0)then
Result:=OC000QOOQ0
else
if OC000QOOQ0 is O0QC0QOOQ0 then
Result:=OO000QOOQ0(O0QC0QOOQ0(OC000QOOQ0));
end
else
if Length(O0O00QOOQ0.OOQC0QOOQ0)>0 then
Result:=OO000QOOQ0(O0O00QOOQ0);
if Result<>nil then
Exit;
end;
end;
end;
end;
begin
Result:=OO000QOOQ0(Self);
if Result=nil then
raise EScError.CreateFmt(SLexemNotFound,[O0COOQOOQ0],seLexemNotFound);
end;
function O0QC0QOOQ0.OCCOOQOOQ0:OC0QOQOOQ0;
begin
if(O0OQOQOOQ0.OO0QOQOOQ0=O0CCQCOOQ0)and(OQQC0QOOQ0>-1)then
Result:=OOQC0QOOQ0[OQQC0QOOQ0]
else
Result:=Self;
end;
procedure O0QC0QOOQ0.O00Q0QOOQ0(const OO0Q0QOOQ0:string);
var
OCO00QOOQ0:integer;
begin
if O0OQOQOOQ0.OO0QOQOOQ0<>O0CCQCOOQ0 then
raise EScError.Create(seInvalidInputArgs);
for OCO00QOOQ0:=0 to Length(OOQC0QOOQ0)-1 do begin
if SameText(OOQC0QOOQ0[OCO00QOOQ0].OQOQOQOOQ0,OO0Q0QOOQ0)then begin
OQQC0QOOQ0:=OCO00QOOQ0;
Exit;
end;
end;
raise EScError.Create(seInvalidInputArgs);
end;
constructor O0Q00QOOQ0.Create;
begin
inherited;
end;
destructor O0Q00QOOQ0.Destroy;
begin
OOQ00QOOQ0.Free;
inherited;
end;
function O0Q00QOOQ0.O00OOQOOQ0(OO0OOQOOQ0:integer):OC0QOQOOQ0;
begin
if OOQ00QOOQ0=nil then
raise EScError.Create(seInvalidInputArgs);
Result:=OC0QOQOOQ0(OOQ00QOOQ0[OO0OOQOOQ0]);
end;
function O0Q00QOOQ0.OQ0OOQOOQ0:integer;
begin
if OOQ00QOOQ0=nil then
Result:=0
else
Result:=OOQ00QOOQ0.Count;
end;
procedure O0Q00QOOQ0.OC0OOQOOQ0(O0OOOQOOQ0:integer);
begin
if not(O0OQOQOOQ0.OO0QOQOOQ0 in[OCQCQCOOQ0,OQ0OQCOOQ0,OC0OQCOOQ0])then
raise EScError.Create(seCannotConvert);
if O0OOOQOOQ0<=0 then begin
FreeAndNil(OOQ00QOOQ0);
Exit;
end;
if OOQ00QOOQ0=nil then
OOQ00QOOQ0:=TCRObjectList.Create;
if OOQ00QOOQ0.Count>O0OOOQOOQ0 then begin
while OOQ00QOOQ0.Count>O0OOOQOOQ0 do
OOQ00QOOQ0.Delete(OOQ00QOOQ0.Count);
end
else
if OOQ00QOOQ0.Count<O0OOOQOOQ0 then begin
while OOQ00QOOQ0.Count<O0OOOQOOQ0 do
OOQ00QOOQ0.Add(Self.OCOOOQOOQ0);
end;
end;
constructor OQQ00QOOQ0.Create;
begin
inherited;
end;
class function O0C00QOOQ0.OOC00QOOQ0(OQC00QOOQ0:TStream;const OCC00QOOQ0:O0COQCOOQ0):TBytes;
begin
if(OCC00QOOQ0.OO0QOQOOQ0=O000QCOOQ0)and(OCC00QOOQ0.OCCOQCOOQ0>0)then begin
SetLength(Result,OCC00QOOQ0.OCCOQCOOQ0-1);
if OCC00QOOQ0.OCCOQCOOQ0>1 then begin
OQC00QOOQ0.Position:=OCC00QOOQ0.OQCOQCOOQ0+OCC00QOOQ0.O00QOQOOQ0+1;
OQC00QOOQ0.Read(Result[0],OCC00QOOQ0.OCCOQCOOQ0-1);
end;
end
else begin
SetLength(Result,OCC00QOOQ0.OCCOQCOOQ0);
if OCC00QOOQ0.OCCOQCOOQ0>0 then begin
OQC00QOOQ0.Position:=OCC00QOOQ0.OQCOQCOOQ0+OCC00QOOQ0.O00QOQOOQ0;
OQC00QOOQ0.Read(Result[0],OCC00QOOQ0.OCCOQCOOQ0);
end;
end;
end;
class function O0C00QOOQ0.O00O0QOOQ0(OO0O0QOOQ0:TStream;const OQ0O0QOOQ0:O0COQCOOQ0):string;
var
OC0O0QOOQ0:TBytes;
O0OO0QOOQ0:WideString;
OOOO0QOOQ0:AnsiString;
OQOO0QOOQ0,OCOO0QOOQ0:integer;
begin
case OQ0O0QOOQ0.OO0QOQOOQ0 of
OQCCQCOOQ0:
Result:=BoolToStr(OOCO0QOOQ0(OO0O0QOOQ0,OQ0O0QOOQ0),True);
OCCCQCOOQ0,O0O0QCOOQ0:begin
SetLength(Result,OQ0O0QOOQ0.OCCOQCOOQ0*2);
SetLength(OC0O0QOOQ0,OQ0O0QOOQ0.OCCOQCOOQ0);
if OQ0O0QOOQ0.OCCOQCOOQ0>0 then begin
OO0O0QOOQ0.Position:=OQ0O0QOOQ0.OQCOQCOOQ0+OQ0O0QOOQ0.O00QOQOOQ0;
OO0O0QOOQ0.Read(OC0O0QOOQ0[0],OQ0O0QOOQ0.OCCOQCOOQ0);
end;
OCOO0QOOQ0:=1;
for OQOO0QOOQ0:=0 to OQ0O0QOOQ0.OCCOQCOOQ0-1 do begin
Result[OCOO0QOOQ0]:=OCQ0OOOOQ0[OC0O0QOOQ0[OQOO0QOOQ0]][1];
Result[OCOO0QOOQ0+1]:=OCQ0OOOOQ0[OC0O0QOOQ0[OQOO0QOOQ0]][2];
Inc(OCOO0QOOQ0,2);
end;
end;
O000QCOOQ0:begin
if OQ0O0QOOQ0.OCCOQCOOQ0<=1 then begin
Result:='';
end
else begin
SetLength(Result,(OQ0O0QOOQ0.OCCOQCOOQ0-1)*2);
SetLength(OC0O0QOOQ0,OQ0O0QOOQ0.OCCOQCOOQ0);
if OQ0O0QOOQ0.OCCOQCOOQ0>0 then begin
OO0O0QOOQ0.Position:=OQ0O0QOOQ0.OQCOQCOOQ0+OQ0O0QOOQ0.O00QOQOOQ0;
OO0O0QOOQ0.Read(OC0O0QOOQ0[0],OQ0O0QOOQ0.OCCOQCOOQ0);
end;
OCOO0QOOQ0:=1;
for OQOO0QOOQ0:=1 to OQ0O0QOOQ0.OCCOQCOOQ0-1 do begin
Result[OCOO0QOOQ0]:=OCQ0OOOOQ0[OC0O0QOOQ0[OQOO0QOOQ0]][1];
Result[OCOO0QOOQ0+1]:=OCQ0OOOOQ0[OC0O0QOOQ0[OQOO0QOOQ0]][2];
Inc(OCOO0QOOQ0,2);
end;
end;
end;
OQ00QCOOQ0:
Result:='';
OC00QCOOQ0:
Result:=O0CQCQOOQ0(OO0O0QOOQ0,OQ0O0QOOQ0);
O00OQCOOQ0,OO0OQCOOQ0:
Result:=DateTimeToStr(OOOCCQOOQ0(OO0O0QOOQ0,OQ0O0QOOQ0));
OOO0QCOOQ0:begin
SetLengthA(OOOO0QOOQ0,OQ0O0QOOQ0.OCCOQCOOQ0);
if OQ0O0QOOQ0.OCCOQCOOQ0>0 then begin
OO0O0QOOQ0.Position:=OQ0O0QOOQ0.OQCOQCOOQ0+OQ0O0QOOQ0.O00QOQOOQ0;
OO0O0QOOQ0.Read(PAnsiChar(OOOO0QOOQ0)^,OQ0O0QOOQ0.OCCOQCOOQ0);
end;
Result:=string(CRFunctions.UTF8Decode(OOOO0QOOQ0));
end;
OQC0QCOOQ0:begin
SetLength(O0OO0QOOQ0,OQ0O0QOOQ0.OCCOQCOOQ0 shr 1);
if OQ0O0QOOQ0.OCCOQCOOQ0>0 then begin
OO0O0QOOQ0.Position:=OQ0O0QOOQ0.OQCOQCOOQ0+OQ0O0QOOQ0.O00QOQOOQ0;
OO0O0QOOQ0.Read(O0OO0QOOQ0[1],OQ0O0QOOQ0.OCCOQCOOQ0);
end;
Result:=string(O0OO0QOOQ0);
end;
OCC0QCOOQ0:begin
SetLength(OC0O0QOOQ0,OQ0O0QOOQ0.OCCOQCOOQ0);
if OQ0O0QOOQ0.OCCOQCOOQ0>0 then begin
OO0O0QOOQ0.Position:=OQ0O0QOOQ0.OQCOQCOOQ0+OQ0O0QOOQ0.O00QOQOOQ0;
OO0O0QOOQ0.Read(OC0O0QOOQ0[0],OQ0O0QOOQ0.OCCOQCOOQ0);
end;
Result:=Encoding.BigEndianUnicode.GetString(OC0O0QOOQ0);
end;
OQO0QCOOQ0,OCO0QCOOQ0,O0Q0QCOOQ0,OOQ0QCOOQ0,
OQQ0QCOOQ0,OCQ0QCOOQ0,O0C0QCOOQ0,OOC0QCOOQ0:begin
SetLengthA(OOOO0QOOQ0,OQ0O0QOOQ0.OCCOQCOOQ0);
if OQ0O0QOOQ0.OCCOQCOOQ0>0 then begin
OO0O0QOOQ0.Position:=OQ0O0QOOQ0.OQCOQCOOQ0+OQ0O0QOOQ0.O00QOQOOQ0;
OO0O0QOOQ0.Read(PAnsiChar(OOOO0QOOQ0)^,OQ0O0QOOQ0.OCCOQCOOQ0);
end;
Result:=string(OOOO0QOOQ0);
end;
else
Result:=O00QOCOOQ0(OOC00QOOQ0(OO0O0QOOQ0,OQ0O0QOOQ0),' ');
end;
end;
class function O0C00QOOQ0.O0QO0QOOQ0(OOQO0QOOQ0:TStream;const OQQO0QOOQ0:O0COQCOOQ0):WideString;
var
OCQO0QOOQ0:TBytes;
O0CO0QOOQ0:AnsiString;
begin
case OQQO0QOOQ0.OO0QOQOOQ0 of
OOO0QCOOQ0:begin
SetLengthA(O0CO0QOOQ0,OQQO0QOOQ0.OCCOQCOOQ0);
if OQQO0QOOQ0.OCCOQCOOQ0>0 then begin
OOQO0QOOQ0.Position:=OQQO0QOOQ0.OQCOQCOOQ0+OQQO0QOOQ0.O00QOQOOQ0;
OOQO0QOOQ0.Read(PAnsiChar(O0CO0QOOQ0)^,OQQO0QOOQ0.OCCOQCOOQ0);
end;
Result:=CRFunctions.UTF8Decode(O0CO0QOOQ0);
end;
OQC0QCOOQ0:begin
SetLength(Result,OQQO0QOOQ0.OCCOQCOOQ0 shr 1);
if OQQO0QOOQ0.OCCOQCOOQ0>0 then begin
OOQO0QOOQ0.Position:=OQQO0QOOQ0.OQCOQCOOQ0+OQQO0QOOQ0.O00QOQOOQ0;
OOQO0QOOQ0.Read(Result[1],OQQO0QOOQ0.OCCOQCOOQ0);
end;
end;
OCC0QCOOQ0:begin
SetLength(OCQO0QOOQ0,OQQO0QOOQ0.OCCOQCOOQ0);
if OQQO0QOOQ0.OCCOQCOOQ0>0 then begin
OOQO0QOOQ0.Position:=OQQO0QOOQ0.OQCOQCOOQ0+OQQO0QOOQ0.O00QOQOOQ0;
OOQO0QOOQ0.Read(OCQO0QOOQ0[0],OQQO0QOOQ0.OCCOQCOOQ0);
end;
Result:={$IFNDEF NEXTGEN}Encoding.BigEndianUnicode.GetWideString(OCQO0QOOQ0){$ELSE}WideString(Encoding.BigEndianUnicode.GetString(OCQO0QOOQ0)){$ENDIF}
end;
OQO0QCOOQ0,OCO0QCOOQ0,O0Q0QCOOQ0,OOQ0QCOOQ0,
OQQ0QCOOQ0,OCQ0QCOOQ0,O0C0QCOOQ0,OOC0QCOOQ0:begin
SetLengthA(O0CO0QOOQ0,OQQO0QOOQ0.OCCOQCOOQ0);
if OQQO0QOOQ0.OCCOQCOOQ0>0 then begin
OOQO0QOOQ0.Position:=OQQO0QOOQ0.OQCOQCOOQ0+OQQO0QOOQ0.O00QOQOOQ0;
OOQO0QOOQ0.Read(PAnsiChar(O0CO0QOOQ0)^,OQQO0QOOQ0.OCCOQCOOQ0);
end;
Result:=WideString(O0CO0QOOQ0);
end;
else
Result:=WideString(O00O0QOOQ0(OOQO0QOOQ0,OQQO0QOOQ0));
end;
end;
class function O0C00QOOQ0.OOCO0QOOQ0(OQCO0QOOQ0:TStream;const OCCO0QOOQ0:O0COQCOOQ0):boolean;
var
O00QCQOOQ0:byte;
begin
if OCCO0QOOQ0.OO0QOQOOQ0<>OQCCQCOOQ0 then
raise EScError.Create(seCannotConvert);
if OCCO0QOOQ0.OCCOQCOOQ0=0 then
Result:=False
else begin
OQCO0QOOQ0.Position:=OCCO0QOOQ0.OQCOQCOOQ0+OCCO0QOOQ0.O00QOQOOQ0;
OQCO0QOOQ0.Read(O00QCQOOQ0,1);
Result:=O00QCQOOQ0<>0;
end;
end;
class function O0C00QOOQ0.OO0QCQOOQ0(OQ0QCQOOQ0:TStream;const OC0QCQOOQ0:O0COQCOOQ0):Int64;
var
O0OQCQOOQ0:array[0..7]of byte;
OOOQCQOOQ0:integer;
begin
if not(OC0QCQOOQ0.OO0QOQOOQ0 in[OCCCQCOOQ0,O0O0QCOOQ0])or(OC0QCQOOQ0.OCCOQCOOQ0>8)then
raise EScError.Create(seCannotConvert);
if OC0QCQOOQ0.OCCOQCOOQ0>0 then begin
OQ0QCQOOQ0.Position:=OC0QCQOOQ0.OQCOQCOOQ0+OC0QCQOOQ0.O00QOQOOQ0;
OQ0QCQOOQ0.Read(O0OQCQOOQ0[0],OC0QCQOOQ0.OCCOQCOOQ0);
end;
Result:=0;
for OOOQCQOOQ0:=0 to OC0QCQOOQ0.OCCOQCOOQ0-1 do
Result:=(Result shl 8)+O0OQCQOOQ0[OOOQCQOOQ0];
end;
class function O0C00QOOQ0.OQOQCQOOQ0(OCOQCQOOQ0:TStream;const O0QQCQOOQ0:O0COQCOOQ0):TBytes;
var
OOQQCQOOQ0:TBytes;
OQQQCQOOQ0,OCQQCQOOQ0:integer;
begin
if O0QQCQOOQ0.OO0QOQOOQ0<>OCCCQCOOQ0 then
raise EScError.Create(seCannotConvert);
if O0QQCQOOQ0.OCCOQCOOQ0>0 then begin
SetLength(OOQQCQOOQ0,O0QQCQOOQ0.OCCOQCOOQ0);
OCOQCQOOQ0.Position:=O0QQCQOOQ0.OQCOQCOOQ0+O0QQCQOOQ0.O00QOQOOQ0;
OCOQCQOOQ0.Read(OOQQCQOOQ0[0],O0QQCQOOQ0.OCCOQCOOQ0);
end;
OCQQCQOOQ0:=0;
OQQQCQOOQ0:=O0QQCQOOQ0.OCCOQCOOQ0;
while(OQQQCQOOQ0>1)and(OOQQCQOOQ0[OCQQCQOOQ0]=0)do begin
Inc(OCQQCQOOQ0);
Dec(OQQQCQOOQ0);
end;
SetLength(Result,OQQQCQOOQ0);
if OQQQCQOOQ0>0 then
Move(OOQQCQOOQ0[OCQQCQOOQ0],Result[0],OQQQCQOOQ0);
end;
class function O0C00QOOQ0.O0CQCQOOQ0(OOCQCQOOQ0:TStream;const OQCQCQOOQ0:O0COQCOOQ0):string;
var
OCCQCQOOQ0:TBytes;
O00CCQOOQ0:OOQCQCOOQ0;
OO0CCQOOQ0,OQ0CCQOOQ0:Int64;
OC0CCQOOQ0:integer;
O0OCCQOOQ0:integer;
begin
if OQCQCQOOQ0.OO0QOQOOQ0<>OC00QCOOQ0 then
raise EScError.Create(seCannotConvert);
if OQCQCQOOQ0.OCCOQCOOQ0<=0 then begin
Result:='';
Exit;
end;
SetLength(OCCQCQOOQ0,OQCQCQOOQ0.OCCOQCOOQ0);
OOCQCQOOQ0.Position:=OQCQCQOOQ0.OQCOQCOOQ0+OQCQCQOOQ0.O00QOQOOQ0;
OOCQCQOOQ0.Read(OCCQCQOOQ0[0],OQCQCQOOQ0.OCCOQCOOQ0);
OO0CCQOOQ0:=0;
OQ0CCQOOQ0:=OQCQCQOOQ0.OCCOQCOOQ0;
SetLength(O00CCQOOQ0,OQ0CCQOOQ0+1);
if OCCQCQOOQ0[OO0CCQOOQ0]>=80 then begin
O00CCQOOQ0[0]:=2;
O00CCQOOQ0[1]:=OCCQCQOOQ0[OO0CCQOOQ0]-80;
end
else
if OCCQCQOOQ0[OO0CCQOOQ0]>=40 then begin
O00CCQOOQ0[0]:=1;
O00CCQOOQ0[1]:=OCCQCQOOQ0[OO0CCQOOQ0]-40;
end
else begin
O00CCQOOQ0[0]:=0;
O00CCQOOQ0[1]:=OCCQCQOOQ0[OO0CCQOOQ0];
end;
OC0CCQOOQ0:=2;
Inc(OO0CCQOOQ0);
Dec(OQ0CCQOOQ0);
while OQ0CCQOOQ0>0 do begin
O00CCQOOQ0[OC0CCQOOQ0]:=0;
while OCCQCQOOQ0[OO0CCQOOQ0]>=$80 do begin
O00CCQOOQ0[OC0CCQOOQ0]:=(O00CCQOOQ0[OC0CCQOOQ0]shl 7)+(OCCQCQOOQ0[OO0CCQOOQ0]and$7F);
Inc(OO0CCQOOQ0);
Dec(OQ0CCQOOQ0);
if OQ0CCQOOQ0=0 then
raise EScError.Create(seWrongDataFormat);
end;
O00CCQOOQ0[OC0CCQOOQ0]:=(O00CCQOOQ0[OC0CCQOOQ0]shl 7)+OCCQCQOOQ0[OO0CCQOOQ0];
Inc(OO0CCQOOQ0);
Dec(OQ0CCQOOQ0);
Inc(OC0CCQOOQ0);
end;
Result:='';
for O0OCCQOOQ0:=0 to OC0CCQOOQ0-1 do begin
if O0OCCQOOQ0>0 then
Result:=Result+'.';
Result:=Result+IntToStr(O00CCQOOQ0[O0OCCQOOQ0]);
end;
end;
{$IFNDEF MSWINDOWS}
type
TSystemTime=record
wYear:Word;
wMonth:Word;
wDayOfWeek:Word;
wDay:Word;
wHour:Word;
wMinute:Word;
wSecond:Word;
wMilliseconds:Word;
end;
{$ENDIF}
const
O0C0OOOOQ0=13;
OOC0OOOOQ0=15;
class function O0C00QOOQ0.OOOCCQOOQ0(OQOCCQOOQ0:TStream;const OCOCCQOOQ0:O0COQCOOQ0):TDateTime;
var
O0QCCQOOQ0:TBytes;
OOQCCQOOQ0:boolean;
OQQCCQOOQ0:TSystemTime;
{$IFDEF MSWINDOWS}
OCQCCQOOQ0:TSystemTime;
O0CCCQOOQ0:TTimeZoneInformation;
{$ENDIF}
OOCCCQOOQ0:Int64;
begin
if OCOCCQOOQ0.OCCOQCOOQ0<=0 then begin
Result:=0;
Exit;
end;
if(OCOCCQOOQ0.OO0QOQOOQ0=O00OQCOOQ0)and(OCOCCQOOQ0.OCCOQCOOQ0=O0C0OOOOQ0)then
OOQCCQOOQ0:=True
else
if(OCOCCQOOQ0.OO0QOQOOQ0=OO0OQCOOQ0)and(OCOCCQOOQ0.OCCOQCOOQ0=OOC0OOOOQ0)then
OOQCCQOOQ0:=False
else
raise EScError.Create(seCannotConvert);
SetLength(O0QCCQOOQ0,OCOCCQOOQ0.OCCOQCOOQ0);
OQOCCQOOQ0.Position:=OCOCCQOOQ0.OQCOQCOOQ0+OCOCCQOOQ0.O00QOQOOQ0;
OQOCCQOOQ0.Read(O0QCCQOOQ0[0],OCOCCQOOQ0.OCCOQCOOQ0);
if O0QCCQOOQ0[OCOCCQOOQ0.OCCOQCOOQ0-1]<>Ord('Z')then
raise EScError.Create(seWrongDataFormat);
OOCCCQOOQ0:=0;
if OOQCCQOOQ0 then begin
OQQCCQOOQ0.wYear:=(O0QCCQOOQ0[OOCCCQOOQ0]-Ord('0'))*10+(O0QCCQOOQ0[OOCCCQOOQ0+1]-Ord('0'));
Inc(OOCCCQOOQ0,2);
if OQQCCQOOQ0.wYear<50 then
OQQCCQOOQ0.wYear:=OQQCCQOOQ0.wYear+2000
else
OQQCCQOOQ0.wYear:=OQQCCQOOQ0.wYear+1900;
end
else begin
OQQCCQOOQ0.wYear:=(O0QCCQOOQ0[OOCCCQOOQ0]-Ord('0'))*1000+
(O0QCCQOOQ0[OOCCCQOOQ0+1]-Ord('0'))*100+
(O0QCCQOOQ0[OOCCCQOOQ0+2]-Ord('0'))*10+
(O0QCCQOOQ0[OOCCCQOOQ0+3]-Ord('0'));
Inc(OOCCCQOOQ0,4);
end;
OQQCCQOOQ0.wMonth:=(O0QCCQOOQ0[OOCCCQOOQ0]-Ord('0'))*10+(O0QCCQOOQ0[OOCCCQOOQ0+1]-Ord('0'));
OQQCCQOOQ0.wDay:=(O0QCCQOOQ0[OOCCCQOOQ0+2]-Ord('0'))*10+(O0QCCQOOQ0[OOCCCQOOQ0+3]-Ord('0'));
OQQCCQOOQ0.wHour:=(O0QCCQOOQ0[OOCCCQOOQ0+4]-Ord('0'))*10+(O0QCCQOOQ0[OOCCCQOOQ0+5]-Ord('0'));
OQQCCQOOQ0.wMinute:=(O0QCCQOOQ0[OOCCCQOOQ0+6]-Ord('0'))*10+(O0QCCQOOQ0[OOCCCQOOQ0+7]-Ord('0'));
OQQCCQOOQ0.wSecond:=(O0QCCQOOQ0[OOCCCQOOQ0+8]-Ord('0'))*10+(O0QCCQOOQ0[OOCCCQOOQ0+9]-Ord('0'));
OQQCCQOOQ0.wMilliseconds:=0;
{$IFDEF MSWINDOWS}
GetTimeZoneInformation(O0CCCQOOQ0);
if GetTimeZoneInformation(O0CCCQOOQ0)=TIME_ZONE_ID_STANDARD then
O0CCCQOOQ0.DaylightBias:=O0CCCQOOQ0.StandardBias;
SystemTimeToTzSpecificLocalTime(@O0CCCQOOQ0,OQQCCQOOQ0,OCQCCQOOQ0);
Result:=SystemTimeToDateTime(OCQCCQOOQ0);
{$ELSE}
Result:=EncodeDateTime(OQQCCQOOQ0.wYear,OQQCCQOOQ0.wMonth,OQQCCQOOQ0.wDay,OQQCCQOOQ0.wHour,OQQCCQOOQ0.wMinute,OQQCCQOOQ0.wSecond,OQQCCQOOQ0.wMilliseconds);
{$IFDEF POSIX}
Result:=TTimeZone.Local.ToLocalTime(Result);
{$ENDIF}
{$ENDIF}
end;
class procedure OQCCCQOOQ0.OCCCCQOOQ0(var O000CQOOQ0:O0COQCOOQ0;const O00COQOOQ0:TBytes);
begin
if O000CQOOQ0.OO0QOQOOQ0=O000QCOOQ0 then begin
SetLength(O000CQOOQ0.OOCOQCOOQ0,Length(O00COQOOQ0)+1);
O000CQOOQ0.OOCOQCOOQ0[0]:=0;
if Length(O00COQOOQ0)>0 then
Move(O00COQOOQ0[0],O000CQOOQ0.OOCOQCOOQ0[1],Length(O00COQOOQ0));
end
else
O000CQOOQ0.OOCOQCOOQ0:=O00COQOOQ0;
end;
class procedure OQCCCQOOQ0.OO00CQOOQ0(var OQ00CQOOQ0:O0COQCOOQ0;const OC0COQOOQ0:string);
function OC00CQOOQ0(const O0O0CQOOQ0:Char):byte;
begin
case O0O0CQOOQ0 of
'0'..'9':
Result:=Ord(O0O0CQOOQ0)-Ord('0');
'A'..'F':
Result:=Ord(O0O0CQOOQ0)-Ord('A')+10;
'a'..'f':
Result:=Ord(O0O0CQOOQ0)-Ord('a')+10;
else
Result:=0;
end;
end;
var
OOO0CQOOQ0:integer;
OQO0CQOOQ0,OCO0CQOOQ0:byte;
O0Q0CQOOQ0,OOQ0CQOOQ0:integer;
begin
case OQ00CQOOQ0.OO0QOQOOQ0 of
OQCCQCOOQ0:
O0C0CQOOQ0(OQ00CQOOQ0,StrToBool(OC0COQOOQ0));
OCCCQCOOQ0,O0O0QCOOQ0:begin
OOO0CQOOQ0:=Length(OC0COQOOQ0)shr 1;
SetLength(OQ00CQOOQ0.OOCOQCOOQ0,OOO0CQOOQ0);
for OOQ0CQOOQ0:=1 to OOO0CQOOQ0 do
OQ00CQOOQ0.OOCOQCOOQ0[OOQ0CQOOQ0-1]:=(Ord(OC0COQOOQ0[OOQ0CQOOQ0*2-1])-Ord('0'))*10+(Ord(OC0COQOOQ0[OOQ0CQOOQ0*2])-Ord('0'));
end;
O000QCOOQ0:begin
OOO0CQOOQ0:=Length(OC0COQOOQ0)shr 1;
SetLength(OQ00CQOOQ0.OOCOQCOOQ0,OOO0CQOOQ0+1);
OQ00CQOOQ0.OOCOQCOOQ0[0]:=0;
for OOQ0CQOOQ0:=1 to OOO0CQOOQ0 do
OQ00CQOOQ0.OOCOQCOOQ0[OOQ0CQOOQ0]:=(Ord(OC0COQOOQ0[OOQ0CQOOQ0*2-1])-Ord('0'))*10+(Ord(OC0COQOOQ0[OOQ0CQOOQ0*2])-Ord('0'));
end;
OQ00QCOOQ0:
SetLength(OQ00CQOOQ0.OOCOQCOOQ0,0);
OC00QCOOQ0:
OC0OCQOOQ0(OQ00CQOOQ0,OC0COQOOQ0);
O00OQCOOQ0,OO0OQCOOQ0:
OOQOCQOOQ0(OQ00CQOOQ0,StrToDateTime(OC0COQOOQ0));
OOO0QCOOQ0:
OQ00CQOOQ0.OOCOQCOOQ0:=Encoding.UTF8.GetBytes(OC0COQOOQ0);
OQC0QCOOQ0:
OQ00CQOOQ0.OOCOQCOOQ0:=Encoding.Unicode.GetBytes(OC0COQOOQ0);
OCC0QCOOQ0:
OQ00CQOOQ0.OOCOQCOOQ0:=Encoding.BigEndianUnicode.GetBytes(OC0COQOOQ0);
OQO0QCOOQ0,OCO0QCOOQ0,O0Q0QCOOQ0,OOQ0QCOOQ0,
OQQ0QCOOQ0,OCQ0QCOOQ0,O0C0QCOOQ0,OOC0QCOOQ0:
OQ00CQOOQ0.OOCOQCOOQ0:=Encoding.Default.GetBytes(OC0COQOOQ0);
else begin
OOO0CQOOQ0:=Length(OC0COQOOQ0);
SetLength(OQ00CQOOQ0.OOCOQCOOQ0,OOO0CQOOQ0);
O0Q0CQOOQ0:=1;
OOQ0CQOOQ0:=0;
while O0Q0CQOOQ0<OOO0CQOOQ0 do begin
OQO0CQOOQ0:=OC00CQOOQ0(OC0COQOOQ0[O0Q0CQOOQ0]);
OCO0CQOOQ0:=OC00CQOOQ0(OC0COQOOQ0[O0Q0CQOOQ0+1]);
Inc(O0Q0CQOOQ0,2);
OQ00CQOOQ0.OOCOQCOOQ0[OOQ0CQOOQ0]:=(OQO0CQOOQ0 shl 4)+OCO0CQOOQ0;
Inc(OOQ0CQOOQ0);
if(O0Q0CQOOQ0<=OOO0CQOOQ0)and CharInSet(OC0COQOOQ0[O0Q0CQOOQ0],[' ',':'])then
Inc(O0Q0CQOOQ0);
end;
SetLength(OQ00CQOOQ0.OOCOQCOOQ0,OOQ0CQOOQ0);
end;
end;
end;
class procedure OQCCCQOOQ0.OQQ0CQOOQ0(var OCQ0CQOOQ0:O0COQCOOQ0;const OQOCOQOOQ0:WideString);
begin
case OCQ0CQOOQ0.OO0QOQOOQ0 of
OOO0QCOOQ0:
OCQ0CQOOQ0.OOCOQCOOQ0:=Encoding.UTF8.GetBytes(OQOCOQOOQ0);
OQC0QCOOQ0:
OCQ0CQOOQ0.OOCOQCOOQ0:=Encoding.Unicode.GetBytes(OQOCOQOOQ0);
OCC0QCOOQ0:
OCQ0CQOOQ0.OOCOQCOOQ0:=Encoding.BigEndianUnicode.GetBytes(OQOCOQOOQ0);
OQO0QCOOQ0,OCO0QCOOQ0,O0Q0QCOOQ0,OOQ0QCOOQ0,
OQQ0QCOOQ0,OCQ0QCOOQ0,O0C0QCOOQ0,OOC0QCOOQ0:
OCQ0CQOOQ0.OOCOQCOOQ0:=Encoding.Default.GetBytes(OQOCOQOOQ0);
else
OO00CQOOQ0(OCQ0CQOOQ0,string(OQOCOQOOQ0));
end;
end;
class procedure OQCCCQOOQ0.O0C0CQOOQ0(var OOC0CQOOQ0:O0COQCOOQ0;OOQCOQOOQ0:boolean);
begin
if OOC0CQOOQ0.OO0QOQOOQ0<>OQCCQCOOQ0 then
raise EScError.Create(seCannotConvert);
SetLength(OOC0CQOOQ0.OOCOQCOOQ0,1);
if OOQCOQOOQ0 then
OOC0CQOOQ0.OOCOQCOOQ0[0]:=1
else
OOC0CQOOQ0.OOCOQCOOQ0[0]:=0;
end;
class procedure OQCCCQOOQ0.OQC0CQOOQ0(var OCC0CQOOQ0:O0COQCOOQ0;O0CCOQOOQ0:Int64);
var
O00OCQOOQ0:integer;
begin
if not(OCC0CQOOQ0.OO0QOQOOQ0 in[OCCCQCOOQ0,O0O0QCOOQ0])then
raise EScError.Create(seCannotConvert);
if O0CCOQOOQ0<=0 then begin
SetLength(OCC0CQOOQ0.OOCOQCOOQ0,1);
OCC0CQOOQ0.OOCOQCOOQ0[0]:=0;
Exit;
end;
SetLength(OCC0CQOOQ0.OOCOQCOOQ0,8);
O00OCQOOQ0:=7;
while O0CCOQOOQ0>0 do begin
OCC0CQOOQ0.OOCOQCOOQ0[O00OCQOOQ0]:=byte(O0CCOQOOQ0);
O0CCOQOOQ0:=O0CCOQOOQ0 shr 8;
Dec(O00OCQOOQ0);
end;
if OCC0CQOOQ0.OOCOQCOOQ0[O00OCQOOQ0+1]>=$80 then begin
OCC0CQOOQ0.OOCOQCOOQ0[O00OCQOOQ0]:=0;
Dec(O00OCQOOQ0);
end;
if O00OCQOOQ0>=0 then begin
Move(OCC0CQOOQ0.OOCOQCOOQ0[O00OCQOOQ0+1],OCC0CQOOQ0.OOCOQCOOQ0[0],7-O00OCQOOQ0);
SetLength(OCC0CQOOQ0.OOCOQCOOQ0,7-O00OCQOOQ0);
end;
end;
class procedure OQCCCQOOQ0.OO0OCQOOQ0(var OQ0OCQOOQ0:O0COQCOOQ0;const OCCCOQOOQ0:TBytes);
begin
if OQ0OCQOOQ0.OO0QOQOOQ0<>OCCCQCOOQ0 then
raise EScError.Create(seCannotConvert);
if OCCCOQOOQ0[0]>=$80 then begin
SetLength(OQ0OCQOOQ0.OOCOQCOOQ0,Length(OCCCOQOOQ0)+1);
OQ0OCQOOQ0.OOCOQCOOQ0[0]:=0;
Move(OCCCOQOOQ0[0],OQ0OCQOOQ0.OOCOQCOOQ0[1],Length(OCCCOQOOQ0));
end
else
OQ0OCQOOQ0.OOCOQCOOQ0:=OCCCOQOOQ0;
end;
class procedure OQCCCQOOQ0.OC0OCQOOQ0(var O0OOCQOOQ0:O0COQCOOQ0;const OQ00OQOOQ0:string);
var
OOOOCQOOQ0:OOQCQCOOQ0;
OQOOCQOOQ0:integer;
OCOOCQOOQ0:integer;
O0QOCQOOQ0:integer;
begin
if O0OOCQOOQ0.OO0QOQOOQ0<>OC00QCOOQ0 then
raise EScError.Create(seCannotConvert);
SetLength(OOOOCQOOQ0,32);
OCOOCQOOQ0:=0;
for O0QOCQOOQ0:=1 to Length(OQ00OQOOQ0)do begin
if OQ00OQOOQ0[O0QOCQOOQ0]='.' then
Inc(OCOOCQOOQ0)
else begin
if not CharInSet(OQ00OQOOQ0[O0QOCQOOQ0],['0'..'9'])then
raise EScError.Create(seCannotConvert);
OOOOCQOOQ0[OCOOCQOOQ0]:=OOOOCQOOQ0[OCOOCQOOQ0]*10+(Ord(OQ00OQOOQ0[O0QOCQOOQ0])-Ord('0'));
end;
end;
Inc(OCOOCQOOQ0);
SetLength(O0OOCQOOQ0.OOCOQCOOQ0,128);
O0OOCQOOQ0.OOCOQCOOQ0[0]:=OOOOCQOOQ0[0]*40+OOOOCQOOQ0[1];
OQOOCQOOQ0:=1;
for O0QOCQOOQ0:=2 to OCOOCQOOQ0-1 do begin
if OOOOCQOOQ0[O0QOCQOOQ0]>268435456 then begin
O0OOCQOOQ0.OOCOQCOOQ0[OQOOCQOOQ0]:=(OOOOCQOOQ0[O0QOCQOOQ0]div 268435456)or$80;
OOOOCQOOQ0[O0QOCQOOQ0]:=OOOOCQOOQ0[O0QOCQOOQ0]mod 268435456;
Inc(OQOOCQOOQ0);
end;
if OOOOCQOOQ0[O0QOCQOOQ0]>2097152 then begin
O0OOCQOOQ0.OOCOQCOOQ0[OQOOCQOOQ0]:=(OOOOCQOOQ0[O0QOCQOOQ0]div 2097152)or$80;
OOOOCQOOQ0[O0QOCQOOQ0]:=OOOOCQOOQ0[O0QOCQOOQ0]mod 2097152;
Inc(OQOOCQOOQ0);
end;
if OOOOCQOOQ0[O0QOCQOOQ0]>16384 then begin
O0OOCQOOQ0.OOCOQCOOQ0[OQOOCQOOQ0]:=(OOOOCQOOQ0[O0QOCQOOQ0]div 16384)or$80;
OOOOCQOOQ0[O0QOCQOOQ0]:=OOOOCQOOQ0[O0QOCQOOQ0]mod 16384;
Inc(OQOOCQOOQ0);
end;
if OOOOCQOOQ0[O0QOCQOOQ0]>128 then begin
O0OOCQOOQ0.OOCOQCOOQ0[OQOOCQOOQ0]:=(OOOOCQOOQ0[O0QOCQOOQ0]div 128)or$80;
OOOOCQOOQ0[O0QOCQOOQ0]:=OOOOCQOOQ0[O0QOCQOOQ0]mod 128;
Inc(OQOOCQOOQ0);
end;
O0OOCQOOQ0.OOCOQCOOQ0[OQOOCQOOQ0]:=OOOOCQOOQ0[O0QOCQOOQ0];
Inc(OQOOCQOOQ0);
end;
SetLength(O0OOCQOOQ0.OOCOQCOOQ0,OQOOCQOOQ0);
end;
class procedure OQCCCQOOQ0.OOQOCQOOQ0(var OQQOCQOOQ0:O0COQCOOQ0;OOO0OQOOQ0:TDateTime);
var
OCQOCQOOQ0:TSystemTime;
{$IFDEF MSWINDOWS}
O0COCQOOQ0:TTimeZoneInformation;
{$ENDIF}
OOCOCQOOQ0:integer;
begin
if not(OQQOCQOOQ0.OO0QOQOOQ0 in[O00OQCOOQ0,OO0OQCOOQ0])then
raise EScError.Create(seCannotConvert);
{$IFDEF MSWINDOWS}
GetTimeZoneInformation(O0COCQOOQ0);
if GetTimeZoneInformation(O0COCQOOQ0)=TIME_ZONE_ID_STANDARD then
O0COCQOOQ0.DaylightBias:=O0COCQOOQ0.StandardBias;
OOO0OQOOQ0:=IncMinute(OOO0OQOOQ0,O0COCQOOQ0.Bias+O0COCQOOQ0.DaylightBias);
DateTimeToSystemTime(OOO0OQOOQ0,OCQOCQOOQ0);
{$ELSE}
{$IFDEF POSIX}
OOO0OQOOQ0:=TTimeZone.Local.ToUniversalTime(OOO0OQOOQ0);
{$ENDIF}
DecodeDateTime(OOO0OQOOQ0,OCQOCQOOQ0.wYear,OCQOCQOOQ0.wMonth,OCQOCQOOQ0.wDay,OCQOCQOOQ0.wHour,OCQOCQOOQ0.wMinute,OCQOCQOOQ0.wSecond,OCQOCQOOQ0.wMilliseconds);
{$ENDIF}
if OQQOCQOOQ0.OO0QOQOOQ0=O00OQCOOQ0 then
SetLength(OQQOCQOOQ0.OOCOQCOOQ0,O0C0OOOOQ0)
else
SetLength(OQQOCQOOQ0.OOCOQCOOQ0,OOC0OOOOQ0);
OQQOCQOOQ0.OOCOQCOOQ0[Length(OQQOCQOOQ0.OOCOQCOOQ0)-1]:=Ord('Z');
if OQQOCQOOQ0.OO0QOQOOQ0=O00OQCOOQ0 then begin
if OCQOCQOOQ0.wYear>=2000 then
OCQOCQOOQ0.wYear:=OCQOCQOOQ0.wYear-2000
else
OCQOCQOOQ0.wYear:=OCQOCQOOQ0.wYear-1900;
OQQOCQOOQ0.OOCOQCOOQ0[0]:=(OCQOCQOOQ0.wYear div 10)+Ord('0');
OQQOCQOOQ0.OOCOQCOOQ0[1]:=(OCQOCQOOQ0.wYear mod 10)+Ord('0');
OOCOCQOOQ0:=2;
end
else begin
OQQOCQOOQ0.OOCOQCOOQ0[0]:=(OCQOCQOOQ0.wYear div 1000)+Ord('0');
OQQOCQOOQ0.OOCOQCOOQ0[1]:=((OCQOCQOOQ0.wYear mod 1000)div 100)+Ord('0');
OQQOCQOOQ0.OOCOQCOOQ0[2]:=((OCQOCQOOQ0.wYear mod 100)div 10)+Ord('0');
OQQOCQOOQ0.OOCOQCOOQ0[3]:=(OCQOCQOOQ0.wYear mod 10)+Ord('0');
OOCOCQOOQ0:=4;
end;
OQQOCQOOQ0.OOCOQCOOQ0[OOCOCQOOQ0]:=(OCQOCQOOQ0.wMonth div 10)+Ord('0');
OQQOCQOOQ0.OOCOQCOOQ0[OOCOCQOOQ0+1]:=(OCQOCQOOQ0.wMonth mod 10)+Ord('0');
OQQOCQOOQ0.OOCOQCOOQ0[OOCOCQOOQ0+2]:=(OCQOCQOOQ0.wDay div 10)+Ord('0');
OQQOCQOOQ0.OOCOQCOOQ0[OOCOCQOOQ0+3]:=(OCQOCQOOQ0.wDay mod 10)+Ord('0');
OQQOCQOOQ0.OOCOQCOOQ0[OOCOCQOOQ0+4]:=(OCQOCQOOQ0.wHour div 10)+Ord('0');
OQQOCQOOQ0.OOCOQCOOQ0[OOCOCQOOQ0+5]:=(OCQOCQOOQ0.wHour mod 10)+Ord('0');
OQQOCQOOQ0.OOCOQCOOQ0[OOCOCQOOQ0+6]:=(OCQOCQOOQ0.wMinute div 10)+Ord('0');
OQQOCQOOQ0.OOCOQCOOQ0[OOCOCQOOQ0+7]:=(OCQOCQOOQ0.wMinute mod 10)+Ord('0');
OQQOCQOOQ0.OOCOQCOOQ0[OOCOCQOOQ0+8]:=(OCQOCQOOQ0.wSecond div 10)+Ord('0');
OQQOCQOOQ0.OOCOQCOOQ0[OOCOCQOOQ0+9]:=(OCQOCQOOQ0.wSecond mod 10)+Ord('0');
end;
destructor OQCOCQOOQ0.Destroy;
begin
OCCOCQOOQ0.Free;
O00QQQOOQ0.Free;
inherited;
end;
function OQCOCQOOQ0.OCOCOOOOQ0:OC0QOQOOQ0;
begin
if OCCOCQOOQ0<>nil then
Result:=OCCOCQOOQ0.OOQC0QOOQ0[0]
else
Result:=nil;
end;
function OQCOCQOOQ0.OQOCOOOOQ0(const OQQOOQOOQ0:string):OC0QOQOOQ0;
begin
if OCCOCQOOQ0<>nil then
Result:=OCCOCQOOQ0.OOQOOQOOQ0(OQQOOQOOQ0)
else
Result:=nil;
end;
function OQCOCQOOQ0.OO0QQQOOQ0(OQ0QQQOOQ0:OC0QOQOOQ0;var OC0QQQOOQ0:Int64):byte;
begin
if OC0QQQOOQ0>=OQ0QQQOOQ0.O0OQOQOOQ0.OCCOQCOOQ0 then
raise EScError.Create(seWrongDataFormat);
O00QQQOOQ0.Position:=OQ0QQQOOQ0.O0OQOQOOQ0.OQCOQCOOQ0+OQ0QQQOOQ0.O0OQOQOOQ0.O00QOQOOQ0+OC0QQQOOQ0;
O00QQQOOQ0.Read(Result,1);
Inc(OC0QQQOOQ0);
end;
function OQCOCQOOQ0.O0OQQQOOQ0(OOOQQQOOQ0:OC0QOQOOQ0;OQOQQQOOQ0:integer;var OCOQQQOOQ0:Int64):Int64;
var
O0QQQQOOQ0:array[0..7]of byte;
OOQQQQOOQ0:integer;
begin
if(OQOQQQOOQ0>8)or((OCOQQQOOQ0+OQOQQQOOQ0-1)>=OOOQQQOOQ0.O0OQOQOOQ0.OCCOQCOOQ0)then
raise EScError.Create(seWrongDataFormat);
O00QQQOOQ0.Position:=OOOQQQOOQ0.O0OQOQOOQ0.OQCOQCOOQ0+OOOQQQOOQ0.O0OQOQOOQ0.O00QOQOOQ0+OCOQQQOOQ0;
O00QQQOOQ0.Read(O0QQQQOOQ0[0],OQOQQQOOQ0);
Result:=0;
for OOQQQQOOQ0:=0 to OQOQQQOOQ0-1 do
Result:=(Result shl 8)+O0QQQQOOQ0[OOQQQQOOQ0];
Inc(OCOQQQOOQ0,OQOQQQOOQ0);
end;
function OQCOCQOOQ0.OQQQQQOOQ0(OCQQQQOOQ0:OC0QOQOOQ0;var O0CQQQOOQ0:Int64):Int64;
var
OOCQQQOOQ0:byte;
begin
OOCQQQOOQ0:=OO0QQQOOQ0(OCQQQQOOQ0,O0CQQQOOQ0);
if OOCQQQOOQ0=$80 then
Result:=-1
else
if OOCQQQOOQ0<$80 then
Result:=OOCQQQOOQ0
else
Result:=O0OQQQOOQ0(OCQQQQOOQ0,OOCQQQOOQ0-$80,O0CQQQOOQ0);
end;
class function OQCOCQOOQ0.OQCQQQOOQ0(const OCCQQQOOQ0:string):O0OOQCOOQ0;
begin
for Result:=Low(O0OOQCOOQ0)to High(O0OOQCOOQ0)do
if OCCQQQOOQ0=OOQ0OOOOQ0[Result].Desc then
Exit;
raise EScError.Create(seWrongDataFormat);
end;
class function OQCOCQOOQ0.O00CQQOOQ0(OO0CQQOOQ0:byte):O0OOQCOOQ0;
begin
for Result:=Low(O0OOQCOOQ0)to High(O0OOQCOOQ0)do
if OO0CQQOOQ0=OOQ0OOOOQ0[Result].No then
Break;
end;
function OQCOCQOOQ0.OCQCOOOOQ0(const O0CCOOOOQ0:O0QCQCOOQ0):boolean;
begin
Result:=OCQCOOOOQ0(O0CCOOOOQ0,TStream(nil));
end;
function OQCOCQOOQ0.OCQCOOOOQ0(const O0CCOOOOQ0:O0QCQCOOQ0;const OOCCOOOOQ0:TBytes):boolean;
begin
FreeAndNil(O00QQQOOQ0);
O00QQQOOQ0:=TMemoryStream.Create;
O00QQQOOQ0.WriteBuffer(OOCCOOOOQ0[0],Length(OOCCOOOOQ0));
O00QQQOOQ0.Position:=0;
Result:=OCQCOOOOQ0(O0CCOOOOQ0,O00QQQOOQ0);
end;
function OQCOCQOOQ0.OCQCOOOOQ0(const O0CCOOOOQ0:O0QCQCOOQ0;
const OOCCOOOOQ0:TBytes;OQCCOOOOQ0,OCCCOOOOQ0:integer):boolean;
begin
FreeAndNil(O00QQQOOQ0);
O00QQQOOQ0:=TMemoryStream.Create;
O00QQQOOQ0.WriteBuffer(OOCCOOOOQ0[OQCCOOOOQ0],OCCCOOOOQ0);
O00QQQOOQ0.Position:=0;
Result:=OCQCOOOOQ0(O0CCOOOOQ0,O00QQQOOQ0);
end;
function OQCOCQOOQ0.OCQCOOOOQ0(const O0CCOOOOQ0:O0QCQCOOQ0;O000OOOOQ0:TStream):boolean;
var
OO00OOOOQ0:OQQ00QOOQ0;
OQ00OOOOQ0:Int64;
OC00OOOOQ0:boolean;
begin
FreeAndNil(OCCOCQOOQ0);
if O00QQQOOQ0<>O000OOOOQ0 then
FreeAndNil(O00QQQOOQ0);
if O0Q0OOOOQ0[O0CCOOOOQ0]=nil then begin
OCO0OOOOQ0.Enter;
try
if O0Q0OOOOQ0[O0CCOOOOQ0]=nil then begin
OO00OOOOQ0:=OQQ00QOOQ0.Create;
try
OQ0CQQOOQ0(OQO0OOOOQ0[O0CCOOOOQ0],1,Length(OQO0OOOOQ0[O0CCOOOOQ0]),OO00OOOOQ0);
except
OO00OOOOQ0.Free;
raise;
end;
O0Q0OOOOQ0[O0CCOOOOQ0]:=OO00OOOOQ0;
end;
finally
OCO0OOOOQ0.Leave;
end;
end;
OCCOCQOOQ0:=OQQ00QOOQ0(O0Q0OOOOQ0[O0CCOOOOQ0].OCOOOQOOQ0);
OCCOCQOOQ0.OOOQOQOOQ0:=nil;
if O000OOOOQ0<>nil then begin
OCCOCQOOQ0.O0OQOQOOQ0.OQCOQCOOQ0:=O000OOOOQ0.Position;
OCCOCQOOQ0.O0OQOQOOQ0.OCCOQCOOQ0:=O000OOOOQ0.Size-O000OOOOQ0.Position;
OCCOCQOOQ0.OCQ00QOOQ0:=O000OOOOQ0;
OC00OOOOQ0:=O00QQQOOQ0<>nil;
O00QQQOOQ0:=O000OOOOQ0;
try
OQ00OOOOQ0:=0;
Result:=OOQ0QQOOQ0(OCCOCQOOQ0,OQ00OOOOQ0);
finally
if not OC00OOOOQ0 then
O00QQQOOQ0:=nil;
end;
end
else
Result:=True;
end;
class procedure OQCOCQOOQ0.OQ0CQQOOQ0(const OC0CQQOOQ0:string;
O0OCQQOOQ0,OOOCQQOOQ0:integer;OQOCQQOOQ0:O0QC0QOOQ0);
const
OCOCQQOOQ0='IMPLICIT';
O0QCQQOOQ0='OPTIONAL';
function OOQCQQOOQ0(const OQQCQQOOQ0:Char):integer;
begin
Result:=O0OCQQOOQ0+1;
while(Result<=OOOCQQOOQ0)and(OC0CQQOOQ0[Result]<>OQQCQQOOQ0)do
Inc(Result);
if Result>OOOCQQOOQ0 then
raise EScError.Create(seWrongDataFormat);
end;
procedure OCQCQQOOQ0;
begin
while(O0OCQQOOQ0<=OOOCQQOOQ0)and(OC0CQQOOQ0[O0OCQQOOQ0]=' ')do
Inc(O0OCQQOOQ0);
end;
var
O0CCQQOOQ0:OC0QOQOOQ0;
OOCCQQOOQ0:O0QC0QOOQ0;
OQCCQQOOQ0,OCCCQQOOQ0:string;
O000QQOOQ0,OO00QQOOQ0,OQ00QQOOQ0:boolean;
OC00QQOOQ0:boolean;
O0O0QQOOQ0:O0OOQCOOQ0;
OOO0QQOOQ0:integer;
OQO0QQOOQ0:integer;
OCO0QQOOQ0,O0Q0QQOOQ0:integer;
begin
while O0OCQQOOQ0<OOOCQQOOQ0 do begin
while CharInSet(OC0CQQOOQ0[O0OCQQOOQ0],[',',' '])and(O0OCQQOOQ0<=OOOCQQOOQ0)do
Inc(O0OCQQOOQ0);
if(OQOCQQOOQ0.O0OQOQOOQ0.OO0QOQOOQ0 in[O0CCQCOOQ0,OQ0OQCOOQ0,OC0OQCOOQ0,OO00QCOOQ0,O000QCOOQ0])and
(O0OCQQOOQ0<=Length(OC0CQQOOQ0))and(OC0CQQOOQ0[O0OCQQOOQ0]='}')then
Break;
if(O0OCQQOOQ0<=OOOCQQOOQ0)and(OC0CQQOOQ0[O0OCQQOOQ0]='"')then begin
O0Q0QQOOQ0:=OOQCQQOOQ0('"');
OCCCQQOOQ0:=Copy(OC0CQQOOQ0,O0OCQQOOQ0+1,O0Q0QQOOQ0-O0OCQQOOQ0-1);
O0OCQQOOQ0:=O0Q0QQOOQ0+1;
OCQCQQOOQ0;
end
else
OCCCQQOOQ0:='';
if Copy(OC0CQQOOQ0,O0OCQQOOQ0,Length(O0QCQQOOQ0))=O0QCQQOOQ0 then begin
OO00QQOOQ0:=True;
Inc(O0OCQQOOQ0,Length(O0QCQQOOQ0));
OCQCQQOOQ0;
end
else
OO00QQOOQ0:=False;
if(O0OCQQOOQ0<=OOOCQQOOQ0)and(OC0CQQOOQ0[O0OCQQOOQ0]='[')then begin
O0Q0QQOOQ0:=OOQCQQOOQ0(']');
OOO0QQOOQ0:=StrToInt(Copy(OC0CQQOOQ0,O0OCQQOOQ0+1,O0Q0QQOOQ0-O0OCQQOOQ0-1));
O0OCQQOOQ0:=O0Q0QQOOQ0+1;
OCQCQQOOQ0;
end
else
OOO0QQOOQ0:=-1;
if Copy(OC0CQQOOQ0,O0OCQQOOQ0,Length(OCOCQQOOQ0))=OCOCQQOOQ0 then begin
O000QQOOQ0:=True;
Inc(O0OCQQOOQ0,Length(OCOCQQOOQ0));
OCQCQQOOQ0;
end
else
O000QQOOQ0:=False;
O0Q0QQOOQ0:=O0OCQQOOQ0;
while(O0Q0QQOOQ0<=OOOCQQOOQ0)and CharInSet(OC0CQQOOQ0[O0Q0QQOOQ0],['A'..'Z','0'..'9'])do
Inc(O0Q0QQOOQ0);
OQCCQQOOQ0:=Copy(OC0CQQOOQ0,O0OCQQOOQ0,O0Q0QQOOQ0-O0OCQQOOQ0);
O0OCQQOOQ0:=O0Q0QQOOQ0;
OCQCQQOOQ0;
if(O0OCQQOOQ0<OOOCQQOOQ0)and(OC0CQQOOQ0[O0OCQQOOQ0]='[')then begin
if OC0CQQOOQ0[O0OCQQOOQ0+1]<>']' then
raise EScError.Create(seWrongDataFormat);
OQ00QQOOQ0:=True;
Inc(O0OCQQOOQ0,2);
OCQCQQOOQ0;
end
else
OQ00QQOOQ0:=False;
O0O0QQOOQ0:=OQCQQQOOQ0(OQCCQQOOQ0);
if O000QQOOQ0 and((O0O0QQOOQ0 in[OQQCQCOOQ0,OCQCQCOOQ0,O0CCQCOOQ0])or(OOO0QQOOQ0=-1))then
raise EScError.Create(seWrongDataFormat);
if OOO0QQOOQ0=-1 then begin
if O0O0QQOOQ0<>OQQCQCOOQ0 then
OOO0QQOOQ0:=OOQ0OOOOQ0[O0O0QQOOQ0].No;
end
else
if not O000QQOOQ0 or(O0O0QQOOQ0 in[OCQCQCOOQ0,OQ0OQCOOQ0,OC0OQCOOQ0])then
OOO0QQOOQ0:=OOO0QQOOQ0 or$A0
else
OOO0QQOOQ0:=OOO0QQOOQ0 or$80;
O0CCQQOOQ0:=OQOCQQOOQ0.OOCC0QOOQ0(O0O0QQOOQ0,OQ00QQOOQ0);
O0CCQQOOQ0.OOQQOQOOQ0:=byte(OOO0QQOOQ0);
O0CCQQOOQ0.OQOQOQOOQ0:=OCCCQQOOQ0;
if O000QQOOQ0 then
Include(O0CCQQOOQ0.OCOQOQOOQ0,OCOOQCOOQ0);
if OO00QQOOQ0 then
Include(O0CCQQOOQ0.OCOQOQOOQ0,O0QOQCOOQ0);
case O0O0QQOOQ0 of
O0CCQCOOQ0,OQ0OQCOOQ0,OC0OQCOOQ0,OO00QCOOQ0,O000QCOOQ0,OCQCQCOOQ0:begin
if(O0OCQQOOQ0<=OOOCQQOOQ0)and(OC0CQQOOQ0[O0OCQQOOQ0]='{')then begin
Inc(O0OCQQOOQ0);
OQO0QQOOQ0:=0;
O0Q0QQOOQ0:=O0OCQQOOQ0+1;
while O0Q0QQOOQ0<=OOOCQQOOQ0 do begin
if OC0CQQOOQ0[O0Q0QQOOQ0]='{' then
Inc(OQO0QQOOQ0)
else
if OC0CQQOOQ0[O0Q0QQOOQ0]='}' then
if OQO0QQOOQ0=0 then
Break
else
Dec(OQO0QQOOQ0);
Inc(O0Q0QQOOQ0);
end;
if O0Q0QQOOQ0>OOOCQQOOQ0 then
raise EScError.Create(seWrongDataFormat);
OOCCQQOOQ0:=O0CCQQOOQ0 as O0QC0QOOQ0;
OQ0CQQOOQ0(OC0CQQOOQ0,O0OCQQOOQ0,O0Q0QQOOQ0-1,OOCCQQOOQ0);
O0OCQQOOQ0:=O0Q0QQOOQ0+1;
if O0O0QQOOQ0=O0CCQCOOQ0 then begin
OC00QQOOQ0:=True;
for OCO0QQOOQ0:=0 to Length(OOCCQQOOQ0.OOQC0QOOQ0)-1 do
if not(OOCCQQOOQ0.OOQC0QOOQ0[OCO0QQOOQ0].O0OQOQOOQ0.OO0QOQOOQ0 in OQQ0OOOOQ0)or
(OCOOQCOOQ0 in OOCCQQOOQ0.OOQC0QOOQ0[OCO0QQOOQ0].OCOQOQOOQ0)
then begin
OC00QQOOQ0:=False;
Break;
end;
if OC00QQOOQ0 then begin
for OCO0QQOOQ0:=0 to Length(OOCCQQOOQ0.OOQC0QOOQ0)-1 do
Include(OOCCQQOOQ0.O0QQOQOOQ0,OOCCQQOOQ0.OOQC0QOOQ0[OCO0QQOOQ0].O0OQOQOOQ0.OO0QOQOOQ0);
O0CCQQOOQ0:=OC0QOQOOQ0.Create;
OOCCQQOOQ0.OOOOOQOOQ0(O0CCQQOOQ0);
OOCCQQOOQ0.Free;
O0CCQQOOQ0.O0OQOQOOQ0.OO0QOQOOQ0:=OOCCQCOOQ0;
OQOCQQOOQ0.OOQC0QOOQ0[Length(OQOCQQOOQ0.OOQC0QOOQ0)-1]:=O0CCQQOOQ0;
O0CCQQOOQ0.OOOQOQOOQ0:=O0OC0QOOQ0(OQOCQQOOQ0);
end;
end;
end
else
if O0O0QQOOQ0 in[O0CCQCOOQ0,OQ0OQCOOQ0,OC0OQCOOQ0]then
raise EScError.Create(seWrongDataFormat);
end;
OC00QCOOQ0:begin
if(O0OCQQOOQ0<=OOOCQQOOQ0)and(OC0CQQOOQ0[O0OCQQOOQ0]='(')then begin
O0Q0QQOOQ0:=OOQCQQOOQ0(')');
(O0CCQQOOQ0 as OQOC0QOOQ0).OCOC0QOOQ0:=Copy(OC0CQQOOQ0,O0OCQQOOQ0+1,O0Q0QQOOQ0-O0OCQQOOQ0-1);
Exclude(O0CCQQOOQ0.OCOQOQOOQ0,OQOOQCOOQ0);
O0CCQQOOQ0.O0C0OQOOQ0;
O0OCQQOOQ0:=O0Q0QQOOQ0+1;
end;
end;
OQ00QCOOQ0:
Exclude(O0CCQQOOQ0.OCOQOQOOQ0,OQOOQCOOQ0);
OQQCQCOOQ0:;
OQCCQCOOQ0:;
OCCCQCOOQ0,O0O0QCOOQ0:;
OOO0QCOOQ0,OQO0QCOOQ0,OCO0QCOOQ0,O0Q0QCOOQ0,OOQ0QCOOQ0,
OQQ0QCOOQ0,OCQ0QCOOQ0,O0C0QCOOQ0,OOC0QCOOQ0,OQC0QCOOQ0,OCC0QCOOQ0:;
O00OQCOOQ0,OO0OQCOOQ0:;
else
Assert(False);
end;
end;
end;
function OQCOCQOOQ0.OOQ0QQOOQ0(OQQ0QQOOQ0:O0QC0QOOQ0;var OCQ0QQOOQ0:Int64):boolean;
var
O0C0QQOOQ0:OC0QOQOOQ0;
OOC0QQOOQ0:Int64;
OQC0QQOOQ0:byte;
function OCC0QQOOQ0:boolean;
var
O00OQQOOQ0:O0QC0QOOQ0;
OO0OQQOOQ0:O0OOQCOOQ0;
OQ0OQQOOQ0:integer;
begin
Result:=False;
if(O0C0QQOOQ0.OOQQOQOOQ0 and$C0)>0 then begin
Assert(O0C0QQOOQ0.OOQQOQOOQ0=OQC0QQOOQ0);
OQC0QQOOQ0:=OO0QQQOOQ0(OQQ0QQOOQ0,OCQ0QQOOQ0);
OOC0QQOOQ0:=OQQQQQOOQ0(OQQ0QQOOQ0,OCQ0QQOOQ0);
if(OQQ0QQOOQ0.O0OQOQOOQ0.OCCOQCOOQ0-OCQ0QQOOQ0)<OOC0QQOOQ0 then
Exit;
end;
if O0C0QQOOQ0.O0QQOQOOQ0<>[]then begin
OO0OQQOOQ0:=O00CQQOOQ0(OQC0QQOOQ0);
if OO0OQQOOQ0 in O0C0QQOOQ0.O0QQOQOOQ0 then begin
O0C0QQOOQ0.O0OQOQOOQ0.OO0QOQOOQ0:=OO0OQQOOQ0;
Result:=True;
end;
end
else
if O0C0QQOOQ0 is O0QC0QOOQ0 then begin
O00OQQOOQ0:=O0QC0QOOQ0(O0C0QQOOQ0);
for OQ0OQQOOQ0:=0 to Length(O00OQQOOQ0.OOQC0QOOQ0)-1 do begin
if O00OQQOOQ0.OOQC0QOOQ0[OQ0OQQOOQ0].OOQQOQOOQ0=OQC0QQOOQ0 then begin
O00OQQOOQ0.OQQC0QOOQ0:=OQ0OQQOOQ0;
O0C0QQOOQ0:=O00OQQOOQ0.OOQC0QOOQ0[OQ0OQQOOQ0];
Result:=True;
Exit;
end;
end;
end;
end;
var
OC0OQQOOQ0:O0OOQCOOQ0;
O0OOQQOOQ0,OOOOQQOOQ0:Int64;
OQOOQQOOQ0:Int64;
OCOOQQOOQ0:O0QC0QOOQ0;
O0QOQQOOQ0:integer;
begin
Result:=False;
O0QOQQOOQ0:=0;
while O0QOQQOOQ0<Length(OQQ0QQOOQ0.OOQC0QOOQ0)do begin
O0C0QQOOQ0:=OQQ0QQOOQ0.OOQC0QOOQ0[O0QOQQOOQ0];
if(OQQ0QQOOQ0.O0OQOQOOQ0.OCCOQCOOQ0-OCQ0QQOOQ0)<2 then begin
if not(O0QOQCOOQ0 in O0C0QQOOQ0.OCOQOQOOQ0)then
Exit;
Inc(O0QOQQOOQ0);
Continue;
end;
if O0C0QQOOQ0.O0OQOQOOQ0.OO0QOQOOQ0=OCQCQCOOQ0 then begin
OOOOQQOOQ0:=0;
OOC0QQOOQ0:=OQQ0QQOOQ0.O0OQOQOOQ0.OCCOQCOOQ0;
OC0OQQOOQ0:=OCQCQCOOQ0;
end
else begin
{$IFDEF VER10}
{$WARNINGS OFF}
{$ENDIF}
{$IFDEF VER11}
{$WARNINGS OFF}
{$ENDIF}
OOOOQQOOQ0:=OCQ0QQOOQ0;
OQC0QQOOQ0:=OO0QQQOOQ0(OQQ0QQOOQ0,OCQ0QQOOQ0);
OOC0QQOOQ0:=OQQQQQOOQ0(OQQ0QQOOQ0,OCQ0QQOOQ0);
if OQQ0QQOOQ0.O0OQOQOOQ0.OQ0QOQOOQ0 and(OQC0QQOOQ0=0)and(OOC0QQOOQ0=0)then begin
while O0QOQQOOQ0<Length(OQQ0QQOOQ0.OOQC0QOOQ0)do begin
if not(O0QOQCOOQ0 in OQQ0QQOOQ0.OOQC0QOOQ0[O0QOQQOOQ0].OCOQOQOOQ0)then
Exit;
Inc(O0QOQQOOQ0);
end;
Dec(OCQ0QQOOQ0,2);
Result:=True;
Exit;
end;
if(OQQ0QQOOQ0.O0OQOQOOQ0.OCCOQCOOQ0-OCQ0QQOOQ0)<OOC0QQOOQ0 then
Exit;
while((O0C0QQOOQ0.OOQQOQOOQ0 and$C0)>0)and
(O0C0QQOOQ0.O0OQOQOOQ0.OO0QOQOOQ0<>OQQCQCOOQ0)and
(O0C0QQOOQ0.OOQQOQOOQ0<>OQC0QQOOQ0)do
begin
if not(O0QOQCOOQ0 in O0C0QQOOQ0.OCOQOQOOQ0)then
Exit;
Inc(O0QOQQOOQ0);
if O0QOQQOOQ0<Length(OQQ0QQOOQ0.OOQC0QOOQ0)then
O0C0QQOOQ0:=OQQ0QQOOQ0.OOQC0QOOQ0[O0QOQQOOQ0]
else begin
Result:=True;
Exit;
end;
end;
if O0C0QQOOQ0.O0OQOQOOQ0.OO0QOQOOQ0 in[O0CCQCOOQ0,OOCCQCOOQ0]then begin
if not OCC0QQOOQ0 then
Exit;
end
else
while not(O0C0QQOOQ0.O0OQOQOOQ0.OO0QOQOOQ0 in[OQQCQCOOQ0,O0CCQCOOQ0,OOCCQCOOQ0])and(O0C0QQOOQ0.OOQQOQOOQ0<>OQC0QQOOQ0)do begin
if not(O0QOQCOOQ0 in O0C0QQOOQ0.OCOQOQOOQ0)then
Exit;
Inc(O0QOQQOOQ0);
if O0QOQQOOQ0<Length(OQQ0QQOOQ0.OOQC0QOOQ0)then
O0C0QQOOQ0:=OQQ0QQOOQ0.OOQC0QOOQ0[O0QOQQOOQ0]
else begin
Result:=True;
Exit;
end;
end;
if O0C0QQOOQ0.O0OQOQOOQ0.OO0QOQOOQ0 in[O0CCQCOOQ0,OOCCQCOOQ0]then
if not OCC0QQOOQ0 then
Exit;
if OCOOQCOOQ0 in O0C0QQOOQ0.OCOQOQOOQ0 then
OC0OQQOOQ0:=O0C0QQOOQ0.O0OQOQOOQ0.OO0QOQOOQ0
else
if O0C0QQOOQ0.O0OQOQOOQ0.OO0QOQOOQ0=OQQCQCOOQ0 then begin
if(OQC0QQOOQ0 and$C0)=0 then begin
OC0OQQOOQ0:=O00CQQOOQ0(OQC0QQOOQ0);
if OC0OQQOOQ0>High(O0OOQCOOQ0)then
OC0OQQOOQ0:=OCO0QCOOQ0;
end
else
OC0OQQOOQ0:=OCO0QCOOQ0;
O0C0QQOOQ0.O0OQOQOOQ0.OO0QOQOOQ0:=OC0OQQOOQ0;
end
else begin
if(OQC0QQOOQ0 and$C0)>0 then begin
OQC0QQOOQ0:=OO0QQQOOQ0(OQQ0QQOOQ0,OCQ0QQOOQ0);
OOC0QQOOQ0:=OQQQQQOOQ0(OQQ0QQOOQ0,OCQ0QQOOQ0);
if(OQQ0QQOOQ0.O0OQOQOOQ0.OCCOQCOOQ0-OCQ0QQOOQ0)<OOC0QQOOQ0 then
Exit;
end;
OC0OQQOOQ0:=O00CQQOOQ0(OQC0QQOOQ0);
if O0C0QQOOQ0.O0OQOQOOQ0.OO0QOQOOQ0<>OC0OQQOOQ0 then
Exit;
end;
end;
O0C0QQOOQ0.O0OQOQOOQ0.OQCOQCOOQ0:=OQQ0QQOOQ0.O0OQOQOOQ0.OQCOQCOOQ0+OQQ0QQOOQ0.O0OQOQOOQ0.O00QOQOOQ0+OOOOQQOOQ0;
O0C0QQOOQ0.O0OQOQOOQ0.O00QOQOOQ0:=OCQ0QQOOQ0-OOOOQQOOQ0;
if OOC0QQOOQ0<0 then begin
O0C0QQOOQ0.O0OQOQOOQ0.OCCOQCOOQ0:=OQQ0QQOOQ0.O0OQOQOOQ0.OCCOQCOOQ0-OCQ0QQOOQ0;
O0C0QQOOQ0.O0OQOQOOQ0.OQ0QOQOOQ0:=True;
end
else begin
O0C0QQOOQ0.O0OQOQOOQ0.OCCOQCOOQ0:=OOC0QQOOQ0;
O0C0QQOOQ0.O0OQOQOOQ0.OQ0QOQOOQ0:=False;
Inc(OCQ0QQOOQ0,OOC0QQOOQ0);
end;
Exclude(O0C0QQOOQ0.OCOQOQOOQ0,OQOOQCOOQ0);
O0OOQQOOQ0:=0;
case OC0OQQOOQ0 of
OQ0OQCOOQ0,OC0OQCOOQ0,OO00QCOOQ0,OCQCQCOOQ0:begin
if(O0C0QQOOQ0 is O0QC0QOOQ0)and(Length(O0QC0QOOQ0(O0C0QQOOQ0).OOQC0QOOQ0)>0)then begin
if O0C0QQOOQ0.ClassType<>O0Q00QOOQ0 then begin
if not OOQ0QQOOQ0(O0QC0QOOQ0(O0C0QQOOQ0),O0OOQQOOQ0)then
Exit;
if O0C0QQOOQ0.O0OQOQOOQ0.OQ0QOQOOQ0 then begin
OQC0QQOOQ0:=OO0QQQOOQ0(O0C0QQOOQ0,O0OOQQOOQ0);
OOC0QQOOQ0:=OQQQQQOOQ0(O0C0QQOOQ0,O0OOQQOOQ0);
if(OQC0QQOOQ0<>0)or(OOC0QQOOQ0<>0)then
Exit;
O0C0QQOOQ0.O0OQOQOOQ0.OCCOQCOOQ0:=O0OOQQOOQ0;
O0C0QQOOQ0.O0OQOQOOQ0.OQ0QOQOOQ0:=False;
Inc(OCQ0QQOOQ0,O0C0QQOOQ0.O0OQOQOOQ0.OCCOQCOOQ0);
end;
end
else begin
OQOOQQOOQ0:=0;
if OOC0QQOOQ0>0 then
O0Q00QOOQ0(O0C0QQOOQ0).OOQ00QOOQ0:=TCRObjectList.Create;
while OQOOQQOOQ0<OOC0QQOOQ0 do begin
OCOOQQOOQ0:=O0QC0QOOQ0(O0C0QQOOQ0.OCOOOQOOQ0(O0QC0QOOQ0));
O0Q00QOOQ0(O0C0QQOOQ0).OOQ00QOOQ0.Add(OCOOQQOOQ0);
OCOOQQOOQ0.O0OQOQOOQ0.OQCOQCOOQ0:=O0C0QQOOQ0.O0OQOQOOQ0.OQCOQCOOQ0+O0C0QQOOQ0.O0OQOQOOQ0.O00QOQOOQ0+OQOOQQOOQ0;
OCOOQQOOQ0.O0OQOQOOQ0.O00QOQOOQ0:=0;
O0OOQQOOQ0:=0;
if not OOQ0QQOOQ0(OCOOQQOOQ0,O0OOQQOOQ0)then
Exit;
OCOOQQOOQ0.O0OQOQOOQ0.OCCOQCOOQ0:=O0OOQQOOQ0;
Inc(OQOOQQOOQ0,O0OOQQOOQ0);
end;
end;
end;
end;
O000QCOOQ0:begin
if(O0C0QQOOQ0 is O0QC0QOOQ0)and(Length(O0QC0QOOQ0(O0C0QQOOQ0).OOQC0QOOQ0)>0)then begin
OO0QQQOOQ0(O0C0QQOOQ0,O0OOQQOOQ0);
if not OOQ0QQOOQ0(O0QC0QOOQ0(O0C0QQOOQ0),O0OOQQOOQ0)then
Exit;
end
else
if OOC0QQOOQ0<=0 then
Exit;
end;
OC00QCOOQ0:begin
if OOC0QQOOQ0<=0 then
Exit;
if(O0C0QQOOQ0 is OQOC0QOOQ0)and(OQOC0QOOQ0(O0C0QQOOQ0).OCOC0QOOQ0<>'')and
(O0C0QQOOQ0.O000OQOOQ0<>OQOC0QOOQ0(O0C0QQOOQ0).OCOC0QOOQ0)then
Exit;
end;
OCCCQCOOQ0,O0O0QCOOQ0,
O00OQCOOQ0,OO0OQCOOQ0:begin
if OOC0QQOOQ0<=0 then
Exit;
end;
OQCCQCOOQ0:begin
if OOC0QQOOQ0<>1 then
Exit;
end;
OQ00QCOOQ0:begin
if OOC0QQOOQ0<>0 then
Exit;
end;
OOO0QCOOQ0,OQO0QCOOQ0,OCO0QCOOQ0,O0Q0QCOOQ0,OOQ0QCOOQ0,
OQQ0QCOOQ0,OCQ0QCOOQ0,O0C0QCOOQ0,OOC0QCOOQ0,OQC0QCOOQ0,OCC0QCOOQ0:begin
if OOC0QQOOQ0<0 then
Exit;
end;
else
Assert(False);
end;
Inc(O0QOQQOOQ0);
end;
Result:=True;
end;
class function OQCOCQOOQ0.OOQOQQOOQ0(OQQOQQOOQ0:Int64):integer;
begin
if OQQOQQOOQ0<$80 then
Result:=2
else
if OQQOQQOOQ0<=$FF then
Result:=3
else
if OQQOQQOOQ0<=$FFFF then
Result:=4
else
if OQQOQQOOQ0<=$FFFFFF then
Result:=5
else
if OQQOQQOOQ0<=$FFFFFFFF then
Result:=6
else
if OQQOQQOOQ0<=$FFFFFFFFFF then
Result:=7
else
if OQQOQQOOQ0<=$FFFFFFFFFFFF then
Result:=8
else
if OQQOQQOOQ0<=$FFFFFFFFFFFFFF then
Result:=9
else
Result:=10;
end;
class function OQCOCQOOQ0.OCQOQQOOQ0(O0COQQOOQ0:OC0QOQOOQ0):Int64;
var
OOCOQQOOQ0:integer;
begin
if O0COQQOOQ0.OOOQ0QOOQ0 and(O0COQQOOQ0.O0OQOQOOQ0.OO0QOQOOQ0<>OQ00QCOOQ0)then
Result:=0
else begin
if(OOOOQCOOQ0 in O0COQQOOQ0.OCOQOQOOQ0)or(O0COQQOOQ0.O0OQOQOOQ0.OO0QOQOOQ0=OCQCQCOOQ0)then
OOCOQQOOQ0:=0
else
OOCOQQOOQ0:=OOQOQQOOQ0(O0COQQOOQ0.O0OQOQOOQ0.OCCOQCOOQ0);
Result:=O0COQQOOQ0.O0OQOQOOQ0.OCCOQCOOQ0+OOCOQQOOQ0;
if(O0COQQOOQ0.OOQQOQOOQ0<>$FF)and((O0COQQOOQ0.OOQQOQOOQ0 and$80)=$80)and
not(OCOOQCOOQ0 in O0COQQOOQ0.OCOQOQOOQ0)
then begin
O0COQQOOQ0.O0OQOQOOQ0.O00QOQOOQ0:=OOCOQQOOQ0;
Result:=Result+OOQOQQOOQ0(Result);
end;
end;
end;
class procedure OQCOCQOOQ0.OQCOQQOOQ0(OCCOQQOOQ0:OC0QOQOOQ0;out O00QOOOOQ0:Int64);
var
OO0QOOOOQ0:O0QC0QOOQ0;
OQ0QOOOOQ0:OC0QOQOOQ0;
OC0QOOOOQ0:Int64;
O0OQOOOOQ0:integer;
begin
O00QOOOOQ0:=0;
case OCCOQQOOQ0.O0OQOQOOQ0.OO0QOQOOQ0 of
O0CCQCOOQ0:begin
if OQOOQCOOQ0 in OCCOQQOOQ0.OCOQOQOOQ0 then
OCCOQQOOQ0.O0OQOQOOQ0.OCCOQCOOQ0:=0
else
if OOOOQCOOQ0 in OCCOQQOOQ0.OCOQOQOOQ0 then begin
if OOQOQCOOQ0 in OCCOQQOOQ0.OCOQOQOOQ0 then
O00QOOOOQ0:=OCCOQQOOQ0.O0OQOQOOQ0.OCCOQCOOQ0
else
OCCOQQOOQ0.O0OQOQOOQ0.OCCOQCOOQ0:=Length(OCCOQQOOQ0.O0OQOQOOQ0.OOCOQCOOQ0);
end
else begin
OO0QOOOOQ0:=OCCOQQOOQ0 as O0QC0QOOQ0;
if OO0QOOOOQ0.OQQC0QOOQ0=-1 then
raise EScError.Create(seChoiceLexemNotDefined);
OQCOQQOOQ0(OO0QOOOOQ0.OOQC0QOOQ0[OO0QOOOOQ0.OQQC0QOOQ0],O00QOOOOQ0);
OO0QOOOOQ0.O0OQOQOOQ0.OCCOQCOOQ0:=OO0QOOOOQ0.OOQC0QOOQ0[OO0QOOOOQ0.OQQC0QOOQ0].O0OQOQOOQ0.OCCOQCOOQ0;
if OOOOQCOOQ0 in OO0QOOOOQ0.OOQC0QOOQ0[OO0QOOOOQ0.OQQC0QOOQ0].OCOQOQOOQ0 then
Include(OO0QOOOOQ0.OCOQOQOOQ0,OOOOQCOOQ0);
if OQOOQCOOQ0 in OO0QOOOOQ0.OOQC0QOOQ0[OO0QOOOOQ0.OQQC0QOOQ0].OCOQOQOOQ0 then
Include(OO0QOOOOQ0.OCOQOQOOQ0,OQOOQCOOQ0);
end;
end;
OQ0OQCOOQ0,OC0OQCOOQ0,OCQCQCOOQ0,
OO00QCOOQ0,O000QCOOQ0,
OOCCQCOOQ0,
OQQCQCOOQ0:begin
if OQOOQCOOQ0 in OCCOQQOOQ0.OCOQOQOOQ0 then
OCCOQQOOQ0.O0OQOQOOQ0.OCCOQCOOQ0:=0
else
if OOQOQCOOQ0 in OCCOQQOOQ0.OCOQOQOOQ0 then
O00QOOOOQ0:=OCCOQQOOQ0.O0OQOQOOQ0.OCCOQCOOQ0
else
if Length(OCCOQQOOQ0.O0OQOQOOQ0.OOCOQCOOQ0)>0 then
OCCOQQOOQ0.O0OQOQOOQ0.OCCOQCOOQ0:=Length(OCCOQQOOQ0.O0OQOQOOQ0.OOCOQCOOQ0)
else
if(OCCOQQOOQ0.ClassType=O0Q00QOOQ0)and(O0Q00QOOQ0(OCCOQQOOQ0).OOQ00QOOQ0<>nil)then begin
OCCOQQOOQ0.O0OQOQOOQ0.OCCOQCOOQ0:=0;
for O0OQOOOOQ0:=0 to O0Q00QOOQ0(OCCOQQOOQ0).OOQ00QOOQ0.Count-1 do begin
OQ0QOOOOQ0:=OC0QOQOOQ0(O0Q00QOOQ0(OCCOQQOOQ0).OOQ00QOOQ0[O0OQOOOOQ0]);
OC0QOOOOQ0:=0;
OQCOQQOOQ0(OQ0QOOOOQ0,OC0QOOOOQ0);
OCCOQQOOQ0.O0OQOQOOQ0.OCCOQCOOQ0:=OCCOQQOOQ0.O0OQOQOOQ0.OCCOQCOOQ0+OQ0QOOOOQ0.O0OQOQOOQ0.OCCOQCOOQ0;
Inc(O00QOOOOQ0,OC0QOOOOQ0);
end;
end
else begin
OCCOQQOOQ0.O0OQOQOOQ0.OCCOQCOOQ0:=0;
if OCCOQQOOQ0 is O0QC0QOOQ0 then begin
OO0QOOOOQ0:=O0QC0QOOQ0(OCCOQQOOQ0);
for O0OQOOOOQ0:=0 to Length(OO0QOOOOQ0.OOQC0QOOQ0)-1 do begin
OC0QOOOOQ0:=0;
OQCOQQOOQ0(OO0QOOOOQ0.OOQC0QOOQ0[O0OQOOOOQ0],OC0QOOOOQ0);
OO0QOOOOQ0.O0OQOQOOQ0.OCCOQCOOQ0:=OO0QOOOOQ0.O0OQOQOOQ0.OCCOQCOOQ0+OCQOQQOOQ0(OO0QOOOOQ0.OOQC0QOOQ0[O0OQOOOOQ0]);
Inc(O00QOOOOQ0,OC0QOOOOQ0);
end;
end;
end;
end;
OC00QCOOQ0:begin
if(Length(OCCOQQOOQ0.O0OQOQOOQ0.OOCOQCOOQ0)=0)and(OCCOQQOOQ0 is OQOC0QOOQ0)and
(OQOC0QOOQ0(OCCOQQOOQ0).OCOC0QOOQ0<>'')then
OCCOQQOOQ0.OO00OQOOQ0(OQOC0QOOQ0(OCCOQQOOQ0).OCOC0QOOQ0);
OCCOQQOOQ0.O0OQOQOOQ0.OCCOQCOOQ0:=Length(OCCOQQOOQ0.O0OQOQOOQ0.OOCOQCOOQ0);
end;
OOO0QCOOQ0,OQO0QCOOQ0,OCO0QCOOQ0,O0Q0QCOOQ0,OOQ0QCOOQ0,
OQQ0QCOOQ0,OCQ0QCOOQ0,O0C0QCOOQ0,OOC0QCOOQ0,OQC0QCOOQ0,OCC0QCOOQ0:begin
if OOQOQCOOQ0 in OCCOQQOOQ0.OCOQOQOOQ0 then
O00QOOOOQ0:=OCCOQQOOQ0.O0OQOQOOQ0.OCCOQCOOQ0
else
OCCOQQOOQ0.O0OQOQOOQ0.OCCOQCOOQ0:=Length(OCCOQQOOQ0.O0OQOQOOQ0.OOCOQCOOQ0);
end;
O00OQCOOQ0,OO0OQCOOQ0:
OCCOQQOOQ0.O0OQOQOOQ0.OCCOQCOOQ0:=Length(OCCOQQOOQ0.O0OQOQOOQ0.OOCOQCOOQ0);
OCCCQCOOQ0,O0O0QCOOQ0:begin
if(Length(OCCOQQOOQ0.O0OQOQOOQ0.OOCOQCOOQ0)=0)and not OCCOQQOOQ0.OOOQ0QOOQ0 then
SetLength(OCCOQQOOQ0.O0OQOQOOQ0.OOCOQCOOQ0,1);
OCCOQQOOQ0.O0OQOQOOQ0.OCCOQCOOQ0:=Length(OCCOQQOOQ0.O0OQOQOOQ0.OOCOQCOOQ0);
end;
OQ00QCOOQ0:
OCCOQQOOQ0.O0OQOQOOQ0.OCCOQCOOQ0:=0;
else
Assert(False);
end;
end;
class procedure OQCOCQOOQ0.OOOQOOOOQ0(OQOQOOOOQ0:OC0QOQOOQ0;out OCOQOOOOQ0:Int64);
var
O0QQOOOOQ0:O0QC0QOOQ0;
OOQQOOOOQ0,OQQQOOOOQ0:OC0QOQOOQ0;
OCQQOOOOQ0:Int64;
O0CQOOOOQ0:integer;
begin
if OOQOQCOOQ0 in OQOQOOOOQ0.OCOQOQOOQ0 then
OCOQOOOOQ0:=OQOQOOOOQ0.O0OQOQOOQ0.OCCOQCOOQ0
else
OCOQOOOOQ0:=0;
if(OQOQOOOOQ0.ClassType=O0Q00QOOQ0)and(O0Q00QOOQ0(OQOQOOOOQ0).OOQ00QOOQ0<>nil)then begin
if Length(OQOQOOOOQ0.O0OQOQOOQ0.OOCOQCOOQ0)>0 then
else begin
OQQQOOOOQ0:=nil;
for O0CQOOOOQ0:=0 to O0Q00QOOQ0(OQOQOOOOQ0).OOQ00QOOQ0.Count-1 do begin
OOQQOOOOQ0:=OC0QOQOOQ0(O0Q00QOOQ0(OQOQOOOOQ0).OOQ00QOOQ0[O0CQOOOOQ0]);
if O0CQOOOOQ0=0 then begin
if OQOQOOOOQ0.O0OQOQOOQ0.OO0QOQOOQ0=OCQCQCOOQ0 then
OOQQOOOOQ0.O0OQOQOOQ0.OQCOQCOOQ0:=OQOQOOOOQ0.O0OQOQOOQ0.OQCOQCOOQ0
else
OOQQOOOOQ0.O0OQOQOOQ0.OQCOQCOOQ0:=OQOQOOOOQ0.O0OQOQOOQ0.OQCOQCOOQ0+
OQOQOOOOQ0.O0OQOQOOQ0.O00QOQOOQ0+OOQOQQOOQ0(OQOQOOOOQ0.O0OQOQOOQ0.OCCOQCOOQ0);
end
else
OOQQOOOOQ0.O0OQOQOOQ0.OQCOQCOOQ0:=OQQQOOOOQ0.O0OQOQOOQ0.OQCOQCOOQ0+OQQQOOOOQ0.O0OQOQOOQ0.OCCOQCOOQ0;
OCQQOOOOQ0:=0;
OOOQOOOOQ0(OOQQOOOOQ0,OCQQOOOOQ0);
Inc(OCOQOOOOQ0,OCQQOOOOQ0);
OQQQOOOOQ0:=OOQQOOOOQ0;
end;
end;
end
else
if OQOQOOOOQ0.O0OQOQOOQ0.OO0QOQOOQ0=O0CCQCOOQ0 then begin
O0QQOOOOQ0:=OQOQOOOOQ0 as O0QC0QOOQ0;
if not(OOOOQCOOQ0 in OQOQOOOOQ0.OCOQOQOOQ0)then begin
O0QQOOOOQ0.OOQC0QOOQ0[O0QQOOOOQ0.OQQC0QOOQ0].O0OQOQOOQ0.OQCOQCOOQ0:=OQOQOOOOQ0.O0OQOQOOQ0.OQCOQCOOQ0+OQOQOOOOQ0.O0OQOQOOQ0.O00QOQOOQ0;
OOOQOOOOQ0(O0QQOOOOQ0.OOQC0QOOQ0[O0QQOOOOQ0.OQQC0QOOQ0],OCOQOOOOQ0);
end;
end
else
if OQOQOOOOQ0 is O0QC0QOOQ0 then begin
O0QQOOOOQ0:=O0QC0QOOQ0(OQOQOOOOQ0);
OCQQOOOOQ0:=0;
for O0CQOOOOQ0:=0 to Length(O0QQOOOOQ0.OOQC0QOOQ0)-1 do begin
if O0CQOOOOQ0=0 then begin
if(O0QQOOOOQ0.ClassType=O0Q00QOOQ0)or(O0QQOOOOQ0.O0OQOQOOQ0.OO0QOQOOQ0 in[OCQCQCOOQ0,OQQCQCOOQ0])then
O0QQOOOOQ0.OOQC0QOOQ0[O0CQOOOOQ0].O0OQOQOOQ0.OQCOQCOOQ0:=O0QQOOOOQ0.O0OQOQOOQ0.OQCOQCOOQ0
else
O0QQOOOOQ0.OOQC0QOOQ0[O0CQOOOOQ0].O0OQOQOOQ0.OQCOQCOOQ0:=O0QQOOOOQ0.O0OQOQOOQ0.OQCOQCOOQ0+
O0QQOOOOQ0.O0OQOQOOQ0.O00QOQOOQ0+OOQOQQOOQ0(O0QQOOOOQ0.O0OQOQOOQ0.OCCOQCOOQ0)
end
else
O0QQOOOOQ0.OOQC0QOOQ0[O0CQOOOOQ0].O0OQOQOOQ0.OQCOQCOOQ0:=O0QQOOOOQ0.OOQC0QOOQ0[O0CQOOOOQ0-1].O0OQOQOOQ0.OQCOQCOOQ0+
OCQOQQOOQ0(O0QQOOOOQ0.OOQC0QOOQ0[O0CQOOOOQ0-1])-OCQQOOOOQ0;
if not O0QQOOOOQ0.OOQC0QOOQ0[O0CQOOOOQ0].OOOQ0QOOQ0 and
(O0QQOOOOQ0.OOQC0QOOQ0[O0CQOOOOQ0]is O0QC0QOOQ0)and
(Length(O0QC0QOOQ0(O0QQOOOOQ0.OOQC0QOOQ0[O0CQOOOOQ0]).OOQC0QOOQ0)>0)
then begin
OCQQOOOOQ0:=0;
OOOQOOOOQ0(O0QQOOOOQ0.OOQC0QOOQ0[O0CQOOOOQ0],OCQQOOOOQ0);
end
else
if OOQOQCOOQ0 in O0QQOOOOQ0.OOQC0QOOQ0[O0CQOOOOQ0].OCOQOQOOQ0 then
OCQQOOOOQ0:=O0QQOOOOQ0.OOQC0QOOQ0[O0CQOOOOQ0].O0OQOQOOQ0.OCCOQCOOQ0;
Inc(OCOQOOOOQ0,OCQQOOOOQ0);
end;
end;
end;
class procedure OQCOCQOOQ0.OOCQOOOOQ0(OQCQOOOOQ0:O0QC0QOOQ0;var OCCQOOOOQ0:TBytes);
procedure O00COOOOQ0(OO0COOOOQ0:Int64;var OQ0COOOOQ0:Int64);
begin
if OO0COOOOQ0<$80 then begin
OCCQOOOOQ0[OQ0COOOOQ0]:=Byte(OO0COOOOQ0);
Inc(OQ0COOOOQ0,1);
end
else
if OO0COOOOQ0<=$FF then begin
OCCQOOOOQ0[OQ0COOOOQ0]:=$81;
OCCQOOOOQ0[OQ0COOOOQ0+1]:=Byte(OO0COOOOQ0);
Inc(OQ0COOOOQ0,2);
end
else
if OO0COOOOQ0<=$FFFF then begin
OCCQOOOOQ0[OQ0COOOOQ0]:=$82;
OCCQOOOOQ0[OQ0COOOOQ0+1]:=Byte(OO0COOOOQ0 shr 8);
OCCQOOOOQ0[OQ0COOOOQ0+2]:=Byte(OO0COOOOQ0);
Inc(OQ0COOOOQ0,3);
end
else
if OO0COOOOQ0<=$FFFFFF then begin
OCCQOOOOQ0[OQ0COOOOQ0]:=$83;
OCCQOOOOQ0[OQ0COOOOQ0+1]:=Byte(OO0COOOOQ0 shr 16);
OCCQOOOOQ0[OQ0COOOOQ0+2]:=Byte(OO0COOOOQ0 shr 8);
OCCQOOOOQ0[OQ0COOOOQ0+3]:=Byte(OO0COOOOQ0);
Inc(OQ0COOOOQ0,4);
end
else
if OO0COOOOQ0<=$FFFFFFFF then begin
OCCQOOOOQ0[OQ0COOOOQ0]:=$84;
OCCQOOOOQ0[OQ0COOOOQ0+1]:=Byte(OO0COOOOQ0 shr 24);
OCCQOOOOQ0[OQ0COOOOQ0+2]:=Byte(OO0COOOOQ0 shr 16);
OCCQOOOOQ0[OQ0COOOOQ0+3]:=Byte(OO0COOOOQ0 shr 8);
OCCQOOOOQ0[OQ0COOOOQ0+4]:=Byte(OO0COOOOQ0);
Inc(OQ0COOOOQ0,5);
end
else
if OO0COOOOQ0<=$FFFFFFFFFF then begin
OCCQOOOOQ0[OQ0COOOOQ0]:=$85;
OCCQOOOOQ0[OQ0COOOOQ0+1]:=Byte(OO0COOOOQ0 shr 32);
OCCQOOOOQ0[OQ0COOOOQ0+2]:=Byte(OO0COOOOQ0 shr 24);
OCCQOOOOQ0[OQ0COOOOQ0+3]:=Byte(OO0COOOOQ0 shr 16);
OCCQOOOOQ0[OQ0COOOOQ0+4]:=Byte(OO0COOOOQ0 shr 8);
OCCQOOOOQ0[OQ0COOOOQ0+5]:=Byte(OO0COOOOQ0);
Inc(OQ0COOOOQ0,6);
end
else
if OO0COOOOQ0<=$FFFFFFFFFFFF then begin
OCCQOOOOQ0[OQ0COOOOQ0]:=$86;
OCCQOOOOQ0[OQ0COOOOQ0+1]:=Byte(OO0COOOOQ0 shr 40);
OCCQOOOOQ0[OQ0COOOOQ0+2]:=Byte(OO0COOOOQ0 shr 32);
OCCQOOOOQ0[OQ0COOOOQ0+3]:=Byte(OO0COOOOQ0 shr 24);
OCCQOOOOQ0[OQ0COOOOQ0+4]:=Byte(OO0COOOOQ0 shr 16);
OCCQOOOOQ0[OQ0COOOOQ0+5]:=Byte(OO0COOOOQ0 shr 8);
OCCQOOOOQ0[OQ0COOOOQ0+6]:=Byte(OO0COOOOQ0);
Inc(OQ0COOOOQ0,7);
end
else
if OO0COOOOQ0<=$FFFFFFFFFFFFFF then begin
OCCQOOOOQ0[OQ0COOOOQ0]:=$87;
OCCQOOOOQ0[OQ0COOOOQ0+1]:=Byte(OO0COOOOQ0 shr 48);
OCCQOOOOQ0[OQ0COOOOQ0+2]:=Byte(OO0COOOOQ0 shr 40);
OCCQOOOOQ0[OQ0COOOOQ0+3]:=Byte(OO0COOOOQ0 shr 32);
OCCQOOOOQ0[OQ0COOOOQ0+4]:=Byte(OO0COOOOQ0 shr 24);
OCCQOOOOQ0[OQ0COOOOQ0+5]:=Byte(OO0COOOOQ0 shr 16);
OCCQOOOOQ0[OQ0COOOOQ0+6]:=Byte(OO0COOOOQ0 shr 8);
OCCQOOOOQ0[OQ0COOOOQ0+7]:=Byte(OO0COOOOQ0);
Inc(OQ0COOOOQ0,8);
end
else begin
OCCQOOOOQ0[OQ0COOOOQ0]:=$88;
OCCQOOOOQ0[OQ0COOOOQ0+1]:=Byte(OO0COOOOQ0 shr 56);
OCCQOOOOQ0[OQ0COOOOQ0+2]:=Byte(OO0COOOOQ0 shr 48);
OCCQOOOOQ0[OQ0COOOOQ0+3]:=Byte(OO0COOOOQ0 shr 40);
OCCQOOOOQ0[OQ0COOOOQ0+4]:=Byte(OO0COOOOQ0 shr 32);
OCCQOOOOQ0[OQ0COOOOQ0+5]:=Byte(OO0COOOOQ0 shr 24);
OCCQOOOOQ0[OQ0COOOOQ0+6]:=Byte(OO0COOOOQ0 shr 16);
OCCQOOOOQ0[OQ0COOOOQ0+7]:=Byte(OO0COOOOQ0 shr 8);
OCCQOOOOQ0[OQ0COOOOQ0+8]:=Byte(OO0COOOOQ0);
Inc(OQ0COOOOQ0,9);
end;
end;
var
OC0COOOOQ0:OC0QOQOOQ0;
O0OCOOOOQ0:OCQOQCOOQ0;
OOOCOOOOQ0:integer;
begin
if(OQCQOOOOQ0.ClassType=O0Q00QOOQ0)and(O0Q00QOOQ0(OQCQOOOOQ0).OOQ00QOOQ0<>nil)then begin
if Length(OQCQOOOOQ0.O0OQOQOOQ0.OOCOQCOOQ0)>0 then
Move(OQCQOOOOQ0.O0OQOQOOQ0.OOCOQCOOQ0[0],OCCQOOOOQ0[OQCQOOOOQ0.O0OQOQOOQ0.OQCOQCOOQ0],Length(OQCQOOOOQ0.O0OQOQOOQ0.OOCOQCOOQ0))
else
for OOOCOOOOQ0:=0 to O0Q00QOOQ0(OQCQOOOOQ0).OOQ00QOOQ0.Count-1 do begin
OC0COOOOQ0:=OC0QOQOOQ0(O0Q00QOOQ0(OQCQOOOOQ0).OOQ00QOOQ0[OOOCOOOOQ0]);
if Length(OC0COOOOQ0.O0OQOQOOQ0.OOCOQCOOQ0)>0 then
Move(OC0COOOOQ0.O0OQOQOOQ0.OOCOQCOOQ0[0],OCCQOOOOQ0[OC0COOOOQ0.O0OQOQOOQ0.OQCOQCOOQ0],Length(OC0COOOOQ0.O0OQOQOOQ0.OOCOQCOOQ0))
else
if OC0COOOOQ0 is O0QC0QOOQ0 then
OOCQOOOOQ0(O0QC0QOOQ0(OC0COOOOQ0),OCCQOOOOQ0);
end;
end
else
for OOOCOOOOQ0:=0 to Length(OQCQOOOOQ0.OOQC0QOOQ0)-1 do begin
OC0COOOOQ0:=OQCQOOOOQ0.OOQC0QOOQ0[OOOCOOOOQ0];
O0OCOOOOQ0:=@OC0COOOOQ0.O0OQOQOOQ0;
if OC0COOOOQ0.OOOQ0QOOQ0 and(O0OCOOOOQ0.OO0QOQOOQ0<>OQ00QCOOQ0)then
Continue;
if OC0COOOOQ0.O0OQOQOOQ0.OO0QOQOOQ0=O0CCQCOOQ0 then begin
if(OC0COOOOQ0.OOQQOQOOQ0 and$80)=$80 then begin
OCCQOOOOQ0[O0OCOOOOQ0.OQCOQCOOQ0]:=OC0COOOOQ0.OOQQOQOOQ0;
if not(OCOOQCOOQ0 in OC0COOOOQ0.OCOQOQOOQ0)then begin
Inc(O0OCOOOOQ0.OQCOQCOOQ0);
O00COOOOQ0(O0OCOOOOQ0.OCCOQCOOQ0+O0OCOOOOQ0.O00QOQOOQ0,O0OCOOOOQ0.OQCOQCOOQ0);
end;
end;
if not(OOOOQCOOQ0 in OC0COOOOQ0.OCOQOQOOQ0)then begin
OC0COOOOQ0:=(OC0COOOOQ0 as O0QC0QOOQ0).OOQC0QOOQ0[O0QC0QOOQ0(OC0COOOOQ0).OQQC0QOOQ0];
O0OCOOOOQ0:=@OC0COOOOQ0.O0OQOQOOQ0;
end;
end;
if not(OOOOQCOOQ0 in OC0COOOOQ0.OCOQOQOOQ0)then begin
if(OC0COOOOQ0.OOQQOQOOQ0=$FF)or((OC0COOOOQ0.OOQQOQOOQ0 and$80)=0)then
OCCQOOOOQ0[O0OCOOOOQ0.OQCOQCOOQ0]:=OOQ0OOOOQ0[O0OCOOOOQ0.OO0QOQOOQ0].No
else begin
OCCQOOOOQ0[O0OCOOOOQ0.OQCOQCOOQ0]:=OC0COOOOQ0.OOQQOQOOQ0;
if not(OCOOQCOOQ0 in OC0COOOOQ0.OCOQOQOOQ0)then begin
Inc(O0OCOOOOQ0.OQCOQCOOQ0);
O00COOOOQ0(O0OCOOOOQ0.OCCOQCOOQ0+O0OCOOOOQ0.O00QOQOOQ0,O0OCOOOOQ0.OQCOQCOOQ0);
OCCQOOOOQ0[O0OCOOOOQ0.OQCOQCOOQ0]:=OOQ0OOOOQ0[O0OCOOOOQ0.OO0QOQOOQ0].No;
end;
end;
Inc(O0OCOOOOQ0.OQCOQCOOQ0);
O00COOOOQ0(O0OCOOOOQ0.OCCOQCOOQ0,O0OCOOOOQ0.OQCOQCOOQ0);
end;
if not(OOQOQCOOQ0 in OC0COOOOQ0.OCOQOQOOQ0)and(Length(O0OCOOOOQ0.OOCOQCOOQ0)=0)and
(OC0COOOOQ0 is O0QC0QOOQ0)and(Length(O0QC0QOOQ0(OC0COOOOQ0).OOQC0QOOQ0)>0)
then
OOCQOOOOQ0(O0QC0QOOQ0(OC0COOOOQ0),OCCQOOOOQ0)
else
if OOQOQCOOQ0 in OC0COOOOQ0.OCOQOQOOQ0 then
else
if Length(O0OCOOOOQ0.OOCOQCOOQ0)>0 then
Move(O0OCOOOOQ0.OOCOQCOOQ0[0],OCCQOOOOQ0[O0OCOOOOQ0.OQCOQCOOQ0],Length(O0OCOOOOQ0.OOCOQCOOQ0));
end;
end;
function OQCOCQOOQ0.OOQCOOOOQ0:TBytes;
var
OQQCOOOOQ0:Int64;
begin
if(OCCOCQOOQ0=nil)or(Length(OCCOCQOOQ0.OOQC0QOOQ0)=0)then
raise EScError.Create(seInternalError);
OQQCOOOOQ0:=0;
OQCOQQOOQ0(OCCOCQOOQ0,OQQCOOOOQ0);
SetLength(Result,OCCOCQOOQ0.O0OQOQOOQ0.OCCOQCOOQ0-OQQCOOOOQ0);
OCCOCQOOQ0.O0OQOQOOQ0.OQCOQCOOQ0:=0;
OQQCOOOOQ0:=0;
OOOQOOOOQ0(OCCOCQOOQ0,OQQCOOOOQ0);
OOCQOOOOQ0(OCCOCQOOQ0,Result);
end;
procedure OQC0OOOOQ0;
var
OCC0OOOOQ0:O0QCQCOOQ0;
begin
for OCC0OOOOQ0:=Low(O0QCQCOOQ0)to High(O0QCQCOOQ0)do
O0Q0OOOOQ0[OCC0OOOOQ0].Free;
end;
initialization
OCO0OOOOQ0:=TCriticalSection.Create;
finalization
OQC0OOOOQ0;
OCO0OOOOQ0.Free;
end.
