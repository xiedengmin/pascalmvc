//////////////////////////////////////////////////
//  SecureBridge Components
//  Copyright © 2007-2021 Devart. All right reserved.
//////////////////////////////////////////////////
{$I Tds.inc}
unit TdsSSLTypesUni;
interface
uses
SysUtils,SyncObjs,Classes,
CRTypes,CRFunctions,CLRClasses,CRBigInteger,
{$IFNDEF UNIDACPRO}
TdsUtils,TdsSSLConsts,TdsBridge,TdsCertificateExts;
{$ELSE}
TdsUtilsUni,TdsSSLConstsUni,TdsBridgeUni,TdsCertificateExtsUni;
{$ENDIF}
type
OOCCCQQ0Q0=(O0QCCQQ0Q0,OOQCCQQ0Q0,OQQCCQQ0Q0,OCQCCQQ0Q0,O0CCCQQ0Q0);
TScSSLProtocols=set of OOCCCQQ0Q0;
OC0QQQQ0Q0=(
OQCCCQQ0Q0,
OCCCCQQ0Q0,
O000CQQ0Q0,
OO00CQQ0Q0,
OQ00CQQ0Q0,
OC00CQQ0Q0,
O0O0CQQ0Q0,
OOO0CQQ0Q0,
OQO0CQQ0Q0,
OCO0CQQ0Q0,
O0Q0CQQ0Q0,
OOQ0CQQ0Q0,
OQQ0CQQ0Q0,
OCQ0CQQ0Q0,
O0C0CQQ0Q0,
OOC0CQQ0Q0,
OQC0CQQ0Q0,
OCC0CQQ0Q0,
O00OCQQ0Q0,
OO0OCQQ0Q0,
OQ0OCQQ0Q0,
OC0OCQQ0Q0,
O0OOCQQ0Q0,
OOOOCQQ0Q0,
OQOOCQQ0Q0,
OCOOCQQ0Q0,
O0QOCQQ0Q0,
OOQOCQQ0Q0,
OQQOCQQ0Q0,
OCQOCQQ0Q0,
O0COCQQ0Q0,
OOCOCQQ0Q0,
OQCOCQQ0Q0,
OCCOCQQ0Q0,
O00QQQQ0Q0,
OO0QQQQ0Q0,
OQ0QQQQ0Q0
);
O0OQQQQ0Q0=array of OC0QQQQ0Q0;
OOOQQQQ0Q0=OOQQQOQOQ0;
OOOCQQQ0Q0=(
OQOQQQQ0Q0,OCOQQQQ0Q0,O0QQQQQ0Q0,
OOQQQQQ0Q0,OQQQQQQ0Q0,OCQQQQQ0Q0,
O0CQQQQ0Q0,OOCQQQQ0Q0,OQCQQQQ0Q0,
OCCQQQQ0Q0,O00CQQQ0Q0,OO0CQQQ0Q0,
OQ0CQQQ0Q0,
OC0CQQQ0Q0,
O0OCQQQ0Q0
);
OOQCQQQ0Q0=(OQOCQQQ0Q0,OCOCQQQ0Q0,O0QCQQQ0Q0);
OCCCQQQ0Q0=(
OQQCQQQ0Q0,OCQCQQQ0Q0,O0CCQQQ0Q0,
OOCCQQQ0Q0,OQCCQQQ0Q0
);
OCCOQQQ0Q0=(
O000QQQ0Q0,
OO00QQQ0Q0,OQ00QQQ0Q0,OC00QQQ0Q0,
O0O0QQQ0Q0,OOO0QQQ0Q0,OQO0QQQ0Q0,OCO0QQQ0Q0,
O0Q0QQQ0Q0,OOQ0QQQ0Q0,OQQ0QQQ0Q0,OCQ0QQQ0Q0,
O0C0QQQ0Q0,OOC0QQQ0Q0,OQC0QQQ0Q0,
OCC0QQQ0Q0,O00OQQQ0Q0,OO0OQQQ0Q0,OQ0OQQQ0Q0,OC0OQQQ0Q0,
O0OOQQQ0Q0,OOOOQQQ0Q0,OQOOQQQ0Q0,OCOOQQQ0Q0,
O0QOQQQ0Q0,OOQOQQQ0Q0,
OQQOQQQ0Q0,OCQOQQQ0Q0,O0COQQQ0Q0,
OOCOQQQ0Q0,OQCOQQQ0Q0
);
TScKExNamedGroupTypes=set of OCCOQQQ0Q0;
O0OQOOQ0Q0=(O00QOOQ0Q0,OO0QOOQ0Q0,OQ0QOOQ0Q0,OC0QOOQ0Q0);
OCOQOOQ0Q0=(OOOQOOQ0Q0,OQOQOOQ0Q0);
OCQQOOQ0Q0=(O0QQOOQ0Q0,OOQQOOQ0Q0,OQQQOOQ0Q0);
OCCQOOQ0Q0=(
O0CQOOQ0Q0,
OOCQOOQ0Q0,
OQCQOOQ0Q0
);
O00COOQ0Q0=procedure(OO0COOQ0Q0:OC0Q00OOQ0;OQ0COOQ0Q0:TCRList)of object;
OC0COOQ0Q0=procedure(out O0OCOOQ0Q0:boolean)of object;
const
OOOCOOQ0Q0=[OOQ0CQQ0Q0,OQQ0CQQ0Q0,
OCQ0CQQ0Q0,O0C0CQQ0Q0,
OOC0CQQ0Q0,OQC0CQQ0Q0,
OCC0CQQ0Q0,O00OCQQ0Q0];
OQOCOOQ0Q0=[OO0OCQQ0Q0,OQ0OCQQ0Q0,
OC0OCQQ0Q0,O0OOCQQ0Q0,
OOOOCQQ0Q0,OQOOCQQ0Q0,
OCOOCQQ0Q0,O0QOCQQ0Q0,
OOQOCQQ0Q0,OQQOCQQ0Q0,
OCQOCQQ0Q0,O0COCQQ0Q0,
OOCOCQQ0Q0,OQCOCQQ0Q0,
OCCOCQQ0Q0,O00QQQQ0Q0
];
const
OCOCOOQ0Q0='NONE';
O0QCOOQ0Q0='RSA_RC4_40_MD5';
OOQCOOQ0Q0='RSA_RC4_128_MD5';
OQQCOOQ0Q0='RSA_RC4_128_SHA';
OCQCOOQ0Q0='RSA_DES_56_CBC_SHA';
O0CCOOQ0Q0='RSA_3DES_168_CBC_SHA';
OOCCOOQ0Q0='RSA_DES_40_CBC_SHA';
OQCCOOQ0Q0='RSA_AES_128_CBC_SHA';
OCCCOOQ0Q0='RSA_AES_256_CBC_SHA';
O000OOQ0Q0='RSA_AES_128_CBC_SHA256';
OO00OOQ0Q0='RSA_AES_256_CBC_SHA256';
OQ00OOQ0Q0='RSA_AES_128_GCM_SHA256';
OC00OOQ0Q0='RSA_AES_256_GCM_SHA384';
O0O0OOQ0Q0='DHE_RSA_DES_56_CBC_SHA';
OOO0OOQ0Q0='DHE_RSA_3DES_168_CBC_SHA';
OQO0OOQ0Q0='DHE_RSA_AES_128_CBC_SHA';
OCO0OOQ0Q0='DHE_RSA_AES_256_CBC_SHA';
O0Q0OOQ0Q0='DHE_RSA_AES_128_CBC_SHA256';
OOQ0OOQ0Q0='DHE_RSA_AES_256_CBC_SHA256';
OQQ0OOQ0Q0='DHE_RSA_AES_128_GCM_SHA256';
OCQ0OOQ0Q0='DHE_RSA_AES_256_GCM_SHA384';
O0C0OOQ0Q0='ECDHE_RSA_RC4_128_CBC_SHA';
OOC0OOQ0Q0='ECDHE_RSA_3DES_168_CBC_SHA';
OQC0OOQ0Q0='ECDHE_RSA_AES_128_CBC_SHA';
OCC0OOQ0Q0='ECDHE_RSA_AES_256_CBC_SHA';
O00OOOQ0Q0='ECDHE_RSA_AES_128_CBC_SHA256';
OO0OOOQ0Q0='ECDHE_RSA_AES_256_CBC_SHA384';
OQ0OOOQ0Q0='ECDHE_RSA_AES_128_GCM_SHA256';
OC0OOOQ0Q0='ECDHE_RSA_AES_256_GCM_SHA384';
O0OOOOQ0Q0='ECDHE_ECDSA_RC4_128_SHA';
OOOOOOQ0Q0='ECDHE_ECDSA_3DES_168_CBC_SHA';
OQOOOOQ0Q0='ECDHE_ECDSA_AES_128_CBC_SHA';
OCOOOOQ0Q0='ECDHE_ECDSA_AES_256_CBC_SHA';
O0QOOOQ0Q0='ECDHE_ECDSA_AES_128_CBC_SHA256';
OOQOOOQ0Q0='ECDHE_ECDSA_AES_256_CBC_SHA384';
OQQOOOQ0Q0='ECDHE_ECDSA_AES_128_GCM_SHA256';
OCQOOOQ0Q0='ECDHE_ECDSA_AES_256_GCM_SHA384';
O0COOOQ0Q0='AES_128_GCM_SHA256';
OOCOOOQ0Q0='AES_256_GCM_SHA384';
type
O0OQ0OQ0Q0=(
OQCOOOQ0Q0,
OCCOOOQ0Q0,
O00Q0OQ0Q0,
OO0Q0OQ0Q0,
OQ0Q0OQ0Q0,
OC0Q0OQ0Q0
);
const
OOOQ0OQ0Q0:array[O0OQ0OQ0Q0]of byte=(
20,
21,
22,
23,
24,
0
);
type
OQQC0OQ0Q0=(
OQOQ0OQ0Q0,
OCOQ0OQ0Q0,
O0QQ0OQ0Q0,
OOQQ0OQ0Q0,
OQQQ0OQ0Q0,
OCQQ0OQ0Q0,
O0CQ0OQ0Q0,
OOCQ0OQ0Q0,
OQCQ0OQ0Q0,
OCCQ0OQ0Q0,
O00C0OQ0Q0,
OO0C0OQ0Q0,
OQ0C0OQ0Q0,
OC0C0OQ0Q0,
O0OC0OQ0Q0,
OOOC0OQ0Q0,
OQOC0OQ0Q0,
OCOC0OQ0Q0,
O0QC0OQ0Q0,
OOQC0OQ0Q0
);
const
OCQC0OQ0Q0:array[OQQC0OQ0Q0]of byte=(
0,1,2,
4,5,8,
11,12,13,
14,15,16,
20,24,254,
201,202,203,
204,255
);
type
OQCC0OQ0Q0=(
O0CC0OQ0Q0,
OOCC0OQ0Q0
);
OQCO0OQ0Q0=(
OCCC0OQ0Q0,
O0000OQ0Q0,
OO000OQ0Q0,
OQ000OQ0Q0,
OC000OQ0Q0,
O0O00OQ0Q0,
OOO00OQ0Q0,
OQO00OQ0Q0,
OCO00OQ0Q0,
O0Q00OQ0Q0,
OOQ00OQ0Q0,
OQQ00OQ0Q0,
OCQ00OQ0Q0,
O0C00OQ0Q0,
OOC00OQ0Q0,
OQC00OQ0Q0,
OCC00OQ0Q0,
O00O0OQ0Q0,
OO0O0OQ0Q0,
OQ0O0OQ0Q0,
OC0O0OQ0Q0,
O0OO0OQ0Q0,
OOOO0OQ0Q0,
OQOO0OQ0Q0,
OCOO0OQ0Q0,
O0QO0OQ0Q0,
OOQO0OQ0Q0,
OQQO0OQ0Q0,
OCQO0OQ0Q0,
O0CO0OQ0Q0,
OOCO0OQ0Q0
);
const
OCCO0OQ0Q0:array[OQCC0OQ0Q0]of byte=(
1,2
);
O00QCOQ0Q0:array[OQCO0OQ0Q0]of byte=(
0,10,20,
21,22,30,
40,42,43,
44,45,46,
47,48,49,
50,51,60,
70,71,80,
86,90,100,
109,110,112,
113,115,
116,120
);
OO0QCOQ0Q0=[
OQO00OQ0Q0,OCO00OQ0Q0,
O0Q00OQ0Q0,OOQ00OQ0Q0,OQQ00OQ0Q0,
OOOO0OQ0Q0,OQOO0OQ0Q0
];
type
OQ0QCOQ0Q0=type Byte;
const
OC0QCOQ0Q0=OQ0QCOQ0Q0(1);
O0OQCOQ0Q0=OQ0QCOQ0Q0(2);
OOOQCOQ0Q0=OQ0QCOQ0Q0(3);
OQOQCOQ0Q0=OQ0QCOQ0Q0(4);
OCOQCOQ0Q0=OQ0QCOQ0Q0(5);
O0QQCOQ0Q0=OQ0QCOQ0Q0(6);
OOQQCOQ0Q0=OQ0QCOQ0Q0(20);
OQQQCOQ0Q0=OQ0QCOQ0Q0(64);
OCQQCOQ0Q0=OQ0QCOQ0Q0(65);
O0CQCOQ0Q0=OQ0QCOQ0Q0(66);
type
OCCQCOQ0Q0=(OOCQCOQ0Q0,OQCQCOQ0Q0);
const
O00CCOQ0Q0:array[OCCQCOQ0Q0]of byte=(
0,
1
);
type
OO0CCOQ0Q0=record
OQ0CCOQ0Q0:Byte;
OC0CCOQ0Q0:Byte;
end;
O0OCCOQ0Q0=class
public
class function OOOCCOQ0Q0(const OQOCCOQ0Q0:TScSSLProtocols;
const OCOCCOQ0Q0:OOCCCQQ0Q0;out O0QCCOQ0Q0:OOCCCQQ0Q0):boolean;
class function OOQCCOQ0Q0(const OQQCCOQ0Q0:TScSSLProtocols;
const OCQCCOQ0Q0:OOCCCQQ0Q0):OOCCCQQ0Q0;
class function O0CCCOQ0Q0(const OOCCCOQ0Q0:OO0CCOQ0Q0):OOCCCQQ0Q0;
class function OCCCCOQ0Q0(const O000COQ0Q0:OOCCCQQ0Q0):OO0CCOQ0Q0;
class function OO00COQ0Q0(const OQ00COQ0Q0:TScSSLProtocols):OOCCCQQ0Q0;
class function OC00COQ0Q0(const O0O0COQ0Q0:TScSSLProtocols):OOCCCQQ0Q0;
end;
OOO0COQ0Q0=class
public
class function OQO0COQ0Q0(OCO0COQ0Q0:byte):OO0QO0QOQ0;
class function O0Q0COQ0Q0(const OOQ0COQ0Q0:OO0QO0QOQ0):TBytes;
end;
OQQ0COQ0Q0=class(OQOCO0QOQ0)
private
OCQ0COQ0Q0:OC0QQQQ0Q0;
protected
function OCOCO0QOQ0:string;override;
procedure O0QCO0QOQ0(const O0C0COQ0Q0:string);override;
procedure AssignTo(OQC0COQ0Q0:TPersistent);override;
public
property OQQCO0QOQ0:string read OCOCO0QOQ0 write O0QCO0QOQ0;
published
property OCC0COQ0Q0:OC0QQQQ0Q0 read OCQ0COQ0Q0 write OCQ0COQ0Q0;
end;
O00OCOQ0Q0=class(O0CCO0QOQ0)
public
constructor Create(OO0OCOQ0Q0:TPersistent);
function OQ0OCOQ0Q0:O0OQQQQ0Q0;
end;
TScAsyncResult=class(TInterfacedObject,IScAsyncResult)
private
O0OOCOQ0Q0:boolean;
OOOOCOQ0Q0:TObject;
OQOOCOQ0Q0:TCriticalSection;
OCOOCOQ0Q0:TEvent;
O0QOCOQ0Q0:Exception;
OOQOCOQ0Q0:AsyncCallback;
public
constructor Create(OQQOCOQ0Q0:AsyncCallback;OCQOCOQ0Q0:TObject;O0COCOQ0Q0:TCriticalSection);
destructor Destroy;override;
function get_AsyncState:TObject;
function get_AsyncWaitHandle:TEvent;
function get_IsCompleted:boolean;
procedure Notify(OOCOCOQ0Q0:Exception);overload;
procedure Notify;overload;
procedure RaiseLastError;
property AsyncState:TObject read get_AsyncState;
property AsyncWaitHandle:TEvent read get_AsyncWaitHandle;
property IsCompleted:boolean read get_IsCompleted;
property Callback:AsyncCallback read OOQOCOQ0Q0;
property AsyncException:Exception write O0QOCOQ0Q0;
end;
OCCOCOQ0Q0=class of O00QQOQ0Q0;
O00QQOQ0Q0=class(TPersistent)
protected
OO0QQOQ0Q0:cardinal;
OQ0QQOQ0Q0:cardinal;
OC0QQOQ0Q0:cardinal;
O0OQQOQ0Q0:TBytes;
OOOQQOQ0Q0:TBytes;
OQOQQOQ0Q0:TBytes;
procedure AssignTo(OQC0COQ0Q0:TPersistent);override;
public
constructor Create;virtual;
property OQQQQOQ0Q0:cardinal read OO0QQOQ0Q0 write OO0QQOQ0Q0;
property OCQQQOQ0Q0:cardinal read OQ0QQOQ0Q0 write OQ0QQOQ0Q0;
property O0CQQOQ0Q0:cardinal read OC0QQOQ0Q0 write OC0QQOQ0Q0;
property OOCQQOQ0Q0:TBytes read O0OQQOQ0Q0 write O0OQQOQ0Q0;
property OQCQQOQ0Q0:TBytes read OOOQQOQ0Q0 write OOOQQOQ0Q0;
property OCCQQOQ0Q0:TBytes read OQOQQOQ0Q0 write OQOQQOQ0Q0;
end;
O00CQOQ0Q0=class(TCRObjectList)
private
function OO0CQOQ0Q0(OQ0CQOQ0Q0:integer):O00QQOQ0Q0;
procedure OC0CQOQ0Q0(O0OCQOQ0Q0:integer;OOOCQOQ0Q0:O00QQOQ0Q0);
public
function OQOCQOQ0Q0(OCOCQOQ0Q0:O00QQOQ0Q0):integer;
procedure O0QCQOQ0Q0(OOQCQOQ0Q0:O00CQOQ0Q0);
property OOCCQOQ0Q0[Index:integer]:O00QQOQ0Q0 read OO0CQOQ0Q0 write OC0CQOQ0Q0;default;
end;
OQCCQOQ0Q0=class(TPersistent)
private
OCCCQOQ0Q0:boolean;
O000QOQ0Q0:OC0QQQQ0Q0;
OO00QOQ0Q0:OO0QO0QOQ0;
OQ00QOQ0Q0:OOCCCQQ0Q0;
OC00QOQ0Q0:TScCertificate;
O0O0QOQ0Q0:boolean;
OOO0QOQ0Q0:TBytes;
OQO0QOQ0Q0:TBytes;
OCO0QOQ0Q0:boolean;
O0Q0QOQ0Q0:TBytes;
OOQ0QOQ0Q0:O00CQOQ0Q0;
OQQ0QOQ0Q0:integer;
procedure OCQ0QOQ0Q0(O0C0QOQ0Q0:boolean);
procedure OOC0QOQ0Q0(const OQC0QOQ0Q0:TBytes);
protected
procedure AssignTo(OQC0COQ0Q0:TPersistent);override;
procedure OO0OQOQ0Q0;
public
constructor Create;
destructor Destroy;override;
property O0OOQOQ0Q0:boolean read OCCCQOQ0Q0 write OCQ0QOQ0Q0;
property OOOOQOQ0Q0:OC0QQQQ0Q0 read O000QOQ0Q0 write O000QOQ0Q0;
property OQOOQOQ0Q0:OO0QO0QOQ0 read OO00QOQ0Q0 write OO00QOQ0Q0;
property OCOOQOQ0Q0:OOCCCQQ0Q0 read OQ00QOQ0Q0 write OQ00QOQ0Q0;
property O0QOQOQ0Q0:TScCertificate read OC00QOQ0Q0 write OC00QOQ0Q0;
property OOQOQOQ0Q0:boolean read O0O0QOQ0Q0 write O0O0QOQ0Q0;
property OQQOQOQ0Q0:TBytes read OOO0QOQ0Q0 write OOO0QOQ0Q0;
property OCQOQOQ0Q0:TBytes read OQO0QOQ0Q0 write OOC0QOQ0Q0;
property O0COQOQ0Q0:boolean read OCO0QOQ0Q0 write OCO0QOQ0Q0;
property OOCOQOQ0Q0:TBytes read O0Q0QOQ0Q0 write O0Q0QOQ0Q0;
property OQCOQOQ0Q0:O00CQOQ0Q0 read OOQ0QOQ0Q0;
property OCCOQOQ0Q0:integer read OQQ0QOQ0Q0 write OQQ0QOQ0Q0;
end;
O00QO0Q0Q0=class
class function OO0QO0Q0Q0(OQ0QO0Q0Q0:byte):O0OQ0OQ0Q0;
class function OC0QO0Q0Q0(O0OQO0Q0Q0:byte):OQQC0OQ0Q0;
end;
const
OQOQO0Q0Q0=600;
const
OCOQO0Q0Q0:array[0..7]of byte=($44,$4F,$57,$4E,$47,$52,$44,$00);
O0QQO0Q0Q0:array[0..7]of byte=($44,$4F,$57,$4E,$47,$52,$44,$01);
OOQQO0Q0Q0:array[0..31]of byte=(
$CF,$21,$AD,$74,$E5,$9A,$61,$11,$BE,$1D,$8C,$02,$1E,$65,$B8,$91,
$C2,$A2,$11,$16,$7A,$BB,$8C,$5E,$07,$9E,$09,$E2,$C8,$A8,$33,$9C
);
const
OQQQO0Q0Q0:array[OOOCQQQ0Q0]of word=(
$0401,$0501,$0601,
$0403,$0503,$0603,
$0804,$0805,$0806,
$0809,$080A,$080B,
$0807,
$0201,
$0203
);
function OCQQO0Q0Q0(O0CQO0Q0Q0:OCCCQQQ0Q0):TBigInteger;
var
OOCQO0Q0Q0,
OQCQO0Q0Q0,OCCQO0Q0Q0,O00CO0Q0Q0,
OO0CO0Q0Q0,OQ0CO0Q0Q0:TBigInteger;
implementation
uses
{$IFNDEF UNIDACPRO}
TdsCipherSuites;
{$ELSE}
TdsCipherSuitesUni;
{$ENDIF}
class function O0OCCOQ0Q0.OOOCCOQ0Q0(const OQOCCOQ0Q0:TScSSLProtocols;
const OCOCCOQ0Q0:OOCCCQQ0Q0;out O0QCCOQ0Q0:OOCCCQQ0Q0):boolean;
begin
Result:=True;
case OCOCCOQ0Q0 of
OCQCCQQ0Q0:begin
if OCQCCQQ0Q0 in OQOCCOQ0Q0 then
O0QCCOQ0Q0:=OCQCCQQ0Q0
else
if OQQCCQQ0Q0 in OQOCCOQ0Q0 then
O0QCCOQ0Q0:=OQQCCQQ0Q0
else
if OOQCCQQ0Q0 in OQOCCOQ0Q0 then
O0QCCOQ0Q0:=OOQCCQQ0Q0
else
if O0QCCQQ0Q0 in OQOCCOQ0Q0 then
O0QCCOQ0Q0:=O0QCCQQ0Q0
else
if O0CCCQQ0Q0 in OQOCCOQ0Q0 then
O0QCCOQ0Q0:=O0CCCQQ0Q0
else
Result:=False;
end;
OQQCCQQ0Q0:begin
if OQQCCQQ0Q0 in OQOCCOQ0Q0 then
O0QCCOQ0Q0:=OQQCCQQ0Q0
else
if OOQCCQQ0Q0 in OQOCCOQ0Q0 then
O0QCCOQ0Q0:=OOQCCQQ0Q0
else
if O0QCCQQ0Q0 in OQOCCOQ0Q0 then
O0QCCOQ0Q0:=O0QCCQQ0Q0
else
if O0CCCQQ0Q0 in OQOCCOQ0Q0 then
O0QCCOQ0Q0:=O0CCCQQ0Q0
else
Result:=False;
end;
OOQCCQQ0Q0:begin
if OOQCCQQ0Q0 in OQOCCOQ0Q0 then
O0QCCOQ0Q0:=OOQCCQQ0Q0
else
if O0QCCQQ0Q0 in OQOCCOQ0Q0 then
O0QCCOQ0Q0:=O0QCCQQ0Q0
else
if O0CCCQQ0Q0 in OQOCCOQ0Q0 then
O0QCCOQ0Q0:=O0CCCQQ0Q0
else
Result:=False;
end;
O0QCCQQ0Q0:begin
if O0QCCQQ0Q0 in OQOCCOQ0Q0 then
O0QCCOQ0Q0:=O0QCCQQ0Q0
else
if O0CCCQQ0Q0 in OQOCCOQ0Q0 then
O0QCCOQ0Q0:=O0CCCQQ0Q0
else
Result:=False;
end;
else begin
if O0CCCQQ0Q0 in OQOCCOQ0Q0 then
O0QCCOQ0Q0:=O0CCCQQ0Q0
else
Result:=False;
end;
end;
end;
class function O0OCCOQ0Q0.OOQCCOQ0Q0(const OQQCCOQ0Q0:TScSSLProtocols;
const OCQCCOQ0Q0:OOCCCQQ0Q0):OOCCCQQ0Q0;
begin
if not OOOCCOQ0Q0(OQQCCOQ0Q0,OCQCCOQ0Q0,Result)then
raise EScError.Create(seNotAgreeOnProtocol);
end;
class function O0OCCOQ0Q0.O0CCCOQ0Q0(const OOCCCOQ0Q0:OO0CCOQ0Q0):OOCCCQQ0Q0;
var
OQCCCOQ0Q0:integer;
begin
OQCCCOQ0Q0:=(OOCCCOQ0Q0.OQ0CCOQ0Q0*10+OOCCCOQ0Q0.OC0CCOQ0Q0);
if OQCCCOQ0Q0>=33 then
Result:=OQQCCQQ0Q0
else
if OQCCCOQ0Q0=32 then
Result:=OOQCCQQ0Q0
else
if OQCCCOQ0Q0=31 then
Result:=O0QCCQQ0Q0
else
Result:=O0CCCQQ0Q0;
end;
class function O0OCCOQ0Q0.OCCCCOQ0Q0(const O000COQ0Q0:OOCCCQQ0Q0):OO0CCOQ0Q0;
begin
case O000COQ0Q0 of
OCQCCQQ0Q0:begin
Result.OQ0CCOQ0Q0:=3;
Result.OC0CCOQ0Q0:=3;
end;
OQQCCQQ0Q0:begin
Result.OQ0CCOQ0Q0:=3;
Result.OC0CCOQ0Q0:=3;
end;
OOQCCQQ0Q0:begin
Result.OQ0CCOQ0Q0:=3;
Result.OC0CCOQ0Q0:=2;
end;
O0QCCQQ0Q0:begin
Result.OQ0CCOQ0Q0:=3;
Result.OC0CCOQ0Q0:=1;
end;
O0CCCQQ0Q0:begin
Result.OQ0CCOQ0Q0:=3;
Result.OC0CCOQ0Q0:=0;
end;
else begin
Result.OQ0CCOQ0Q0:=3;
Result.OC0CCOQ0Q0:=3;
end;
end;
end;
class function O0OCCOQ0Q0.OO00COQ0Q0(const OQ00COQ0Q0:TScSSLProtocols):OOCCCQQ0Q0;
begin
if O0CCCQQ0Q0 in OQ00COQ0Q0 then
Result:=O0CCCQQ0Q0
else
if O0QCCQQ0Q0 in OQ00COQ0Q0 then
Result:=O0QCCQQ0Q0
else
if OOQCCQQ0Q0 in OQ00COQ0Q0 then
Result:=OOQCCQQ0Q0
else
if OQQCCQQ0Q0 in OQ00COQ0Q0 then
Result:=OQQCCQQ0Q0
else
if OCQCCQQ0Q0 in OQ00COQ0Q0 then
Result:=OCQCCQQ0Q0
else
Result:=O0CCCQQ0Q0;
end;
class function O0OCCOQ0Q0.OC00COQ0Q0(const O0O0COQ0Q0:TScSSLProtocols):OOCCCQQ0Q0;
begin
if OCQCCQQ0Q0 in O0O0COQ0Q0 then
Result:=OCQCCQQ0Q0
else
if OQQCCQQ0Q0 in O0O0COQ0Q0 then
Result:=OQQCCQQ0Q0
else
if OOQCCQQ0Q0 in O0O0COQ0Q0 then
Result:=OOQCCQQ0Q0
else
if O0QCCQQ0Q0 in O0O0COQ0Q0 then
Result:=O0QCCQQ0Q0
else
if O0CCCQQ0Q0 in O0O0COQ0Q0 then
Result:=O0CCCQQ0Q0
else
Result:=O0CCCQQ0Q0;
end;
class function OOO0COQ0Q0.OQO0COQ0Q0(OCO0COQ0Q0:byte):OO0QO0QOQ0;
begin
case OCO0COQ0Q0 of
0:
Result:=OQCOQOQOQ0;
1:
Result:=O00QO0QOQ0;
else
raise EScError.Create(seInvalidCompressionAlgorithm);
end;
end;
class function OOO0COQ0Q0.O0Q0COQ0Q0(const OOQ0COQ0Q0:OO0QO0QOQ0):TBytes;
begin
case OOQ0COQ0Q0 of
OQCOQOQOQ0:begin
SetLength(Result,1);
Result[0]:=0;
end;
OCCOQOQOQ0,O00QO0QOQ0:begin
SetLength(Result,2);
Result[0]:=0;
Result[1]:=1;
end;
end;
end;
procedure OQQ0COQ0Q0.AssignTo(OQC0COQ0Q0:TPersistent);
begin
if IsClass(OQC0COQ0Q0,OQQ0COQ0Q0)then
OQQ0COQ0Q0(OQC0COQ0Q0).OCQ0COQ0Q0:=OCQ0COQ0Q0
else
inherited;
end;
function OQQ0COQ0Q0.OCOCO0QOQ0:string;
begin
Result:=OC0OO0Q0Q0.OOCOO0Q0Q0(OCQ0COQ0Q0);
end;
procedure OQQ0COQ0Q0.O0QCO0QOQ0(const O0C0COQ0Q0:string);
begin
OCQ0COQ0Q0:=OC0OO0Q0Q0.OCCOO0Q0Q0(UpperCase(Trim(O0C0COQ0Q0)));
end;
constructor O00OCOQ0Q0.Create(OO0OCOQ0Q0:TPersistent);
begin
inherited Create(OO0OCOQ0Q0,OQQ0COQ0Q0);
end;
function O00OCOQ0Q0.OQ0OCOQ0Q0:O0OQQQQ0Q0;
var
OC0OCOQ0Q0:integer;
begin
SetLength(Result,Count);
for OC0OCOQ0Q0:=0 to Count-1 do
Result[OC0OCOQ0Q0]:=OQQ0COQ0Q0(Items[OC0OCOQ0Q0]).OCQ0COQ0Q0;
end;
constructor TScAsyncResult.Create(OQQOCOQ0Q0:AsyncCallback;OCQOCOQ0Q0:TObject;O0COCOQ0Q0:TCriticalSection);
begin
inherited Create;
OOOOCOQ0Q0:=OCQOCOQ0Q0;
O0OOCOQ0Q0:=False;
OQOOCOQ0Q0:=O0COCOQ0Q0;
O0QOCOQ0Q0:=nil;
OOQOCOQ0Q0:=OQQOCOQ0Q0;
end;
destructor TScAsyncResult.Destroy;
begin
FreeAndNil(OCOOCOQ0Q0);
FreeAndNil(O0QOCOQ0Q0);
inherited;
end;
procedure TScAsyncResult.RaiseLastError;
var
OQCOCOQ0Q0:Exception;
begin
if O0QOCOQ0Q0<>nil then begin
OQCOCOQ0Q0:=O0QOCOQ0Q0;
O0QOCOQ0Q0:=nil;
raise OQCOCOQ0Q0;
end;
end;
procedure TScAsyncResult.Notify(OOCOCOQ0Q0:Exception);
begin
if not O0OOCOQ0Q0 then begin
O0QOCOQ0Q0:=OOCOCOQ0Q0;
O0OOCOQ0Q0:=True;
if Assigned(OOQOCOQ0Q0)then begin
if OQOOCOQ0Q0<>nil then
OQQOOCOOQ0(OQOOCOQ0Q0);
try
Callback(Self);
finally
if OQOOCOQ0Q0<>nil then
O0QOOCOOQ0(OQOOCOQ0Q0);
end;
end;
if OCOOCOQ0Q0<>nil then
OCOOCOQ0Q0.SetEvent;
end;
end;
procedure TScAsyncResult.Notify;
begin
Notify(Self.O0QOCOQ0Q0);
end;
function TScAsyncResult.get_AsyncState:TObject;
begin
Result:=OOOOCOQ0Q0;
end;
function TScAsyncResult.get_IsCompleted:boolean;
begin
Result:=O0OOCOQ0Q0;
end;
function TScAsyncResult.get_AsyncWaitHandle:TEvent;
begin
if OCOOCOQ0Q0=nil then
OCOOCOQ0Q0:=CreateEvent(O0OOCOQ0Q0);
if O0OOCOQ0Q0 then
OCOOCOQ0Q0.SetEvent;
Result:=OCOOCOQ0Q0;
end;
constructor O00QQOQ0Q0.Create;
begin
inherited;
end;
procedure O00QQOQ0Q0.AssignTo(OQC0COQ0Q0:TPersistent);
var
O0QQQOQ0Q0:O00QQOQ0Q0;
begin
if IsClass(OQC0COQ0Q0,O00QQOQ0Q0)then begin
O0QQQOQ0Q0:=O00QQOQ0Q0(OQC0COQ0Q0);
O0QQQOQ0Q0.OO0QQOQ0Q0:=OO0QQOQ0Q0;
O0QQQOQ0Q0.OQ0QQOQ0Q0:=OQ0QQOQ0Q0;
O0QQQOQ0Q0.OC0QQOQ0Q0:=OC0QQOQ0Q0;
O0QQQOQ0Q0.O0OQQOQ0Q0:=O0OQQOQ0Q0;
O0QQQOQ0Q0.OOOQQOQ0Q0:=OOOQQOQ0Q0;
O0QQQOQ0Q0.OQOQQOQ0Q0:=OQOQQOQ0Q0;
end
else
inherited;
end;
function O00CQOQ0Q0.OO0CQOQ0Q0(OQ0CQOQ0Q0:integer):O00QQOQ0Q0;
begin
Result:=TObject(inherited Items[OQ0CQOQ0Q0])as O00QQOQ0Q0;
end;
procedure O00CQOQ0Q0.OC0CQOQ0Q0(O0OCQOQ0Q0:integer;OOOCQOQ0Q0:O00QQOQ0Q0);
begin
inherited Items[O0OCQOQ0Q0]:=OOOCQOQ0Q0;
end;
function O00CQOQ0Q0.OQOCQOQ0Q0(OCOCQOQ0Q0:O00QQOQ0Q0):integer;
begin
Result:=inherited Add(OCOCQOQ0Q0);
end;
procedure O00CQOQ0Q0.O0QCQOQ0Q0(OOQCQOQ0Q0:O00CQOQ0Q0);
var
OQQCQOQ0Q0,OCQCQOQ0Q0:O00QQOQ0Q0;
O0CCQOQ0Q0:integer;
begin
Clear;
for O0CCQOQ0Q0:=0 to OOQCQOQ0Q0.Count-1 do begin
OQQCQOQ0Q0:=TObject(OOQCQOQ0Q0.Items[O0CCQOQ0Q0])as O00QQOQ0Q0;
OCQCQOQ0Q0:=OCCOCOQ0Q0(OQQCQOQ0Q0.ClassType).Create;
OCQCQOQ0Q0.Assign(OQQCQOQ0Q0);
OQOCQOQ0Q0(OCQCQOQ0Q0);
end;
end;
constructor OQCCQOQ0Q0.Create;
begin
inherited;
OOQ0QOQ0Q0:=O00CQOQ0Q0.Create;
end;
destructor OQCCQOQ0Q0.Destroy;
begin
OOQ0QOQ0Q0.Free;
inherited;
end;
procedure OQCCQOQ0Q0.AssignTo(OQC0COQ0Q0:TPersistent);
var
O00OQOQ0Q0:OQCCQOQ0Q0;
begin
if IsClass(OQC0COQ0Q0,OQCCQOQ0Q0)then begin
O00OQOQ0Q0:=OQCCQOQ0Q0(OQC0COQ0Q0);
O00OQOQ0Q0.OCCCQOQ0Q0:=OCCCQOQ0Q0;
O00OQOQ0Q0.O000QOQ0Q0:=O000QOQ0Q0;
O00OQOQ0Q0.OO00QOQ0Q0:=OO00QOQ0Q0;
O00OQOQ0Q0.OQ00QOQ0Q0:=OQ00QOQ0Q0;
O00OQOQ0Q0.OC00QOQ0Q0:=OC00QOQ0Q0;
O00OQOQ0Q0.O0O0QOQ0Q0:=O0O0QOQ0Q0;
O00OQOQ0Q0.OOO0QOQ0Q0:=OOO0QOQ0Q0;
O00OQOQ0Q0.OCO0QOQ0Q0:=OCO0QOQ0Q0;
O00OQOQ0Q0.O0Q0QOQ0Q0:=O0Q0QOQ0Q0;
O00OQOQ0Q0.OQQ0QOQ0Q0:=OQQ0QOQ0Q0;
O00OQOQ0Q0.OOC0QOQ0Q0(OQO0QOQ0Q0);
O00OQOQ0Q0.OOQ0QOQ0Q0.O0QCQOQ0Q0(OOQ0QOQ0Q0);
end
else
inherited;
end;
procedure OQCCQOQ0Q0.OO0OQOQ0Q0;
begin
if Length(OQO0QOQ0Q0)>0 then begin
FillChar(OQO0QOQ0Q0[0],Length(OQO0QOQ0Q0),0);
SetLength(OQO0QOQ0Q0,0);
end;
OCO0QOQ0Q0:=False;
OOQ0QOQ0Q0.Clear;
end;
procedure OQCCQOQ0Q0.OCQ0QOQ0Q0(O0C0QOQ0Q0:boolean);
begin
OCCCQOQ0Q0:=O0C0QOQ0Q0;
if not O0C0QOQ0Q0 then
OO0OQOQ0Q0;
end;
procedure OQCCQOQ0Q0.OOC0QOQ0Q0(const OQC0QOQ0Q0:TBytes);
begin
SetLength(OQO0QOQ0Q0,Length(OQC0QOQ0Q0));
if Length(OQC0QOQ0Q0)>0 then
Move(OQC0QOQ0Q0[0],OQO0QOQ0Q0[0],Length(OQC0QOQ0Q0));
end;
class function O00QO0Q0Q0.OO0QO0Q0Q0(OQ0QO0Q0Q0:byte):O0OQ0OQ0Q0;
begin
if OQ0QO0Q0Q0=OOOQ0OQ0Q0[OO0Q0OQ0Q0]then
Result:=OO0Q0OQ0Q0
else
if OQ0QO0Q0Q0=OOOQ0OQ0Q0[O00Q0OQ0Q0]then
Result:=O00Q0OQ0Q0
else
if OQ0QO0Q0Q0=OOOQ0OQ0Q0[OQCOOOQ0Q0]then
Result:=OQCOOOQ0Q0
else
if OQ0QO0Q0Q0=OOOQ0OQ0Q0[OCCOOOQ0Q0]then
Result:=OCCOOOQ0Q0
else
if OQ0QO0Q0Q0=OOOQ0OQ0Q0[OQ0Q0OQ0Q0]then
Result:=OQ0Q0OQ0Q0
else
Result:=OC0Q0OQ0Q0;
end;
class function O00QO0Q0Q0.OC0QO0Q0Q0(O0OQO0Q0Q0:byte):OQQC0OQ0Q0;
const
OOOQO0Q0Q0:array[0..255]of OQQC0OQ0Q0=(
OQOQ0OQ0Q0,OCOQ0OQ0Q0,O0QQ0OQ0Q0,OOQC0OQ0Q0,OOQQ0OQ0Q0,
OQQQ0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OCQQ0OQ0Q0,OOQC0OQ0Q0,
OOQC0OQ0Q0,O0CQ0OQ0Q0,OOCQ0OQ0Q0,OQCQ0OQ0Q0,OCCQ0OQ0Q0,
O00C0OQ0Q0,OO0C0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,
OQ0C0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OC0C0OQ0Q0,
OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,
OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,
OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,
OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,
OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,
OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,
OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,
OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,
OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,
OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,
OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,
OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,
OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,
OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,
OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,
OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,
OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,
OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,
OOQC0OQ0Q0,OOOC0OQ0Q0,OQOC0OQ0Q0,OCOC0OQ0Q0,O0QC0OQ0Q0,
OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,
OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,
OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,
OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,
OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,
OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,OOQC0OQ0Q0,O0OC0OQ0Q0,OOQC0OQ0Q0
);
begin
Result:=OOOQO0Q0Q0[O0OQO0Q0Q0];
end;
function OCQQO0Q0Q0(O0CQO0Q0Q0:OCCCQQQ0Q0):TBigInteger;
begin
case O0CQO0Q0Q0 of
OQQCQQQ0Q0:
Result:=OQCQO0Q0Q0;
OCQCQQQ0Q0:
Result:=OCCQO0Q0Q0;
O0CCQQQ0Q0:
Result:=O00CO0Q0Q0;
OOCCQQQ0Q0:
Result:=OO0CO0Q0Q0;
OQCCQQQ0Q0:
Result:=OQ0CO0Q0Q0;
else begin
Result:=OQCQO0Q0Q0;
Assert(False);
end;
end;
end;
procedure OC0CO0Q0Q0;
var
O0OCO0Q0Q0:StringBuilder;
begin
OOCQO0Q0Q0:=TBigInteger.Create(2);
O0OCO0Q0Q0:=StringBuilder.Create;
try
O0OCO0Q0Q0.Append('FFFFFFFFFFFFFFFFADF85458A2BB4A9AAFDC5620273D3CF1');
O0OCO0Q0Q0.Append('D8B9C583CE2D3695A9E13641146433FBCC939DCE249B3EF9');
O0OCO0Q0Q0.Append('7D2FE363630C75D8F681B202AEC4617AD3DF1ED5D5FD6561');
O0OCO0Q0Q0.Append('2433F51F5F066ED0856365553DED1AF3B557135E7F57C935');
O0OCO0Q0Q0.Append('984F0C70E0E68B77E2A689DAF3EFE8721DF158A136ADE735');
O0OCO0Q0Q0.Append('30ACCA4F483A797ABC0AB182B324FB61D108A94BB2C8E3FB');
O0OCO0Q0Q0.Append('B96ADAB760D7F4681D4F42A3DE394DF4AE56EDE76372BB19');
O0OCO0Q0Q0.Append('0B07A7C8EE0A6D709E02FCE1CDF7E2ECC03404CD28342F61');
O0OCO0Q0Q0.Append('9172FE9CE98583FF8E4F1232EEF28183C3FE3B1B4C6FAD73');
O0OCO0Q0Q0.Append('3BB5FCBC2EC22005C58EF1837D1683B2C6F34A26C1B2EFFA');
O0OCO0Q0Q0.Append('886B423861285C97FFFFFFFFFFFFFFFF');
OQCQO0Q0Q0:=TBigInteger.Create(string(O0OCO0Q0Q0.ToString),16);
finally
O0OCO0Q0Q0.Free;
end;
O0OCO0Q0Q0:=StringBuilder.Create;
try
O0OCO0Q0Q0.Append('FFFFFFFFFFFFFFFFADF85458A2BB4A9AAFDC5620273D3CF1');
O0OCO0Q0Q0.Append('D8B9C583CE2D3695A9E13641146433FBCC939DCE249B3EF9');
O0OCO0Q0Q0.Append('7D2FE363630C75D8F681B202AEC4617AD3DF1ED5D5FD6561');
O0OCO0Q0Q0.Append('2433F51F5F066ED0856365553DED1AF3B557135E7F57C935');
O0OCO0Q0Q0.Append('984F0C70E0E68B77E2A689DAF3EFE8721DF158A136ADE735');
O0OCO0Q0Q0.Append('30ACCA4F483A797ABC0AB182B324FB61D108A94BB2C8E3FB');
O0OCO0Q0Q0.Append('B96ADAB760D7F4681D4F42A3DE394DF4AE56EDE76372BB19');
O0OCO0Q0Q0.Append('0B07A7C8EE0A6D709E02FCE1CDF7E2ECC03404CD28342F61');
O0OCO0Q0Q0.Append('9172FE9CE98583FF8E4F1232EEF28183C3FE3B1B4C6FAD73');
O0OCO0Q0Q0.Append('3BB5FCBC2EC22005C58EF1837D1683B2C6F34A26C1B2EFFA');
O0OCO0Q0Q0.Append('886B4238611FCFDCDE355B3B6519035BBC34F4DEF99C0238');
O0OCO0Q0Q0.Append('61B46FC9D6E6C9077AD91D2691F7F7EE598CB0FAC186D91C');
O0OCO0Q0Q0.Append('AEFE130985139270B4130C93BC437944F4FD4452E2D74DD3');
O0OCO0Q0Q0.Append('64F2E21E71F54BFF5CAE82AB9C9DF69EE86D2BC522363A0D');
O0OCO0Q0Q0.Append('ABC521979B0DEADA1DBF9A42D5C4484E0ABCD06BFA53DDEF');
O0OCO0Q0Q0.Append('3C1B20EE3FD59D7C25E41D2B66C62E37FFFFFFFFFFFFFFFF');
OCCQO0Q0Q0:=TBigInteger.Create(string(O0OCO0Q0Q0.ToString),16);
finally
O0OCO0Q0Q0.Free;
end;
O0OCO0Q0Q0:=StringBuilder.Create;
try
O0OCO0Q0Q0.Append('FFFFFFFFFFFFFFFFADF85458A2BB4A9AAFDC5620273D3CF1');
O0OCO0Q0Q0.Append('D8B9C583CE2D3695A9E13641146433FBCC939DCE249B3EF9');
O0OCO0Q0Q0.Append('7D2FE363630C75D8F681B202AEC4617AD3DF1ED5D5FD6561');
O0OCO0Q0Q0.Append('2433F51F5F066ED0856365553DED1AF3B557135E7F57C935');
O0OCO0Q0Q0.Append('984F0C70E0E68B77E2A689DAF3EFE8721DF158A136ADE735');
O0OCO0Q0Q0.Append('30ACCA4F483A797ABC0AB182B324FB61D108A94BB2C8E3FB');
O0OCO0Q0Q0.Append('B96ADAB760D7F4681D4F42A3DE394DF4AE56EDE76372BB19');
O0OCO0Q0Q0.Append('0B07A7C8EE0A6D709E02FCE1CDF7E2ECC03404CD28342F61');
O0OCO0Q0Q0.Append('9172FE9CE98583FF8E4F1232EEF28183C3FE3B1B4C6FAD73');
O0OCO0Q0Q0.Append('3BB5FCBC2EC22005C58EF1837D1683B2C6F34A26C1B2EFFA');
O0OCO0Q0Q0.Append('886B4238611FCFDCDE355B3B6519035BBC34F4DEF99C0238');
O0OCO0Q0Q0.Append('61B46FC9D6E6C9077AD91D2691F7F7EE598CB0FAC186D91C');
O0OCO0Q0Q0.Append('AEFE130985139270B4130C93BC437944F4FD4452E2D74DD3');
O0OCO0Q0Q0.Append('64F2E21E71F54BFF5CAE82AB9C9DF69EE86D2BC522363A0D');
O0OCO0Q0Q0.Append('ABC521979B0DEADA1DBF9A42D5C4484E0ABCD06BFA53DDEF');
O0OCO0Q0Q0.Append('3C1B20EE3FD59D7C25E41D2B669E1EF16E6F52C3164DF4FB');
O0OCO0Q0Q0.Append('7930E9E4E58857B6AC7D5F42D69F6D187763CF1D55034004');
O0OCO0Q0Q0.Append('87F55BA57E31CC7A7135C886EFB4318AED6A1E012D9E6832');
O0OCO0Q0Q0.Append('A907600A918130C46DC778F971AD0038092999A333CB8B7A');
O0OCO0Q0Q0.Append('1A1DB93D7140003C2A4ECEA9F98D0ACC0A8291CDCEC97DCF');
O0OCO0Q0Q0.Append('8EC9B55A7F88A46B4DB5A851F44182E1C68A007E5E655F6A');
O0OCO0Q0Q0.Append('FFFFFFFFFFFFFFFF');
O00CO0Q0Q0:=TBigInteger.Create(string(O0OCO0Q0Q0.ToString),16);
finally
O0OCO0Q0Q0.Free;
end;
O0OCO0Q0Q0:=StringBuilder.Create;
try
O0OCO0Q0Q0.Append('FFFFFFFFFFFFFFFFADF85458A2BB4A9AAFDC5620273D3CF1');
O0OCO0Q0Q0.Append('D8B9C583CE2D3695A9E13641146433FBCC939DCE249B3EF9');
O0OCO0Q0Q0.Append('7D2FE363630C75D8F681B202AEC4617AD3DF1ED5D5FD6561');
O0OCO0Q0Q0.Append('2433F51F5F066ED0856365553DED1AF3B557135E7F57C935');
O0OCO0Q0Q0.Append('984F0C70E0E68B77E2A689DAF3EFE8721DF158A136ADE735');
O0OCO0Q0Q0.Append('30ACCA4F483A797ABC0AB182B324FB61D108A94BB2C8E3FB');
O0OCO0Q0Q0.Append('B96ADAB760D7F4681D4F42A3DE394DF4AE56EDE76372BB19');
O0OCO0Q0Q0.Append('0B07A7C8EE0A6D709E02FCE1CDF7E2ECC03404CD28342F61');
O0OCO0Q0Q0.Append('9172FE9CE98583FF8E4F1232EEF28183C3FE3B1B4C6FAD73');
O0OCO0Q0Q0.Append('3BB5FCBC2EC22005C58EF1837D1683B2C6F34A26C1B2EFFA');
O0OCO0Q0Q0.Append('886B4238611FCFDCDE355B3B6519035BBC34F4DEF99C0238');
O0OCO0Q0Q0.Append('61B46FC9D6E6C9077AD91D2691F7F7EE598CB0FAC186D91C');
O0OCO0Q0Q0.Append('AEFE130985139270B4130C93BC437944F4FD4452E2D74DD3');
O0OCO0Q0Q0.Append('64F2E21E71F54BFF5CAE82AB9C9DF69EE86D2BC522363A0D');
O0OCO0Q0Q0.Append('ABC521979B0DEADA1DBF9A42D5C4484E0ABCD06BFA53DDEF');
O0OCO0Q0Q0.Append('3C1B20EE3FD59D7C25E41D2B669E1EF16E6F52C3164DF4FB');
O0OCO0Q0Q0.Append('7930E9E4E58857B6AC7D5F42D69F6D187763CF1D55034004');
O0OCO0Q0Q0.Append('87F55BA57E31CC7A7135C886EFB4318AED6A1E012D9E6832');
O0OCO0Q0Q0.Append('A907600A918130C46DC778F971AD0038092999A333CB8B7A');
O0OCO0Q0Q0.Append('1A1DB93D7140003C2A4ECEA9F98D0ACC0A8291CDCEC97DCF');
O0OCO0Q0Q0.Append('8EC9B55A7F88A46B4DB5A851F44182E1C68A007E5E0DD902');
O0OCO0Q0Q0.Append('0BFD64B645036C7A4E677D2C38532A3A23BA4442CAF53EA6');
O0OCO0Q0Q0.Append('3BB454329B7624C8917BDD64B1C0FD4CB38E8C334C701C3A');
O0OCO0Q0Q0.Append('CDAD0657FCCFEC719B1F5C3E4E46041F388147FB4CFDB477');
O0OCO0Q0Q0.Append('A52471F7A9A96910B855322EDB6340D8A00EF092350511E3');
O0OCO0Q0Q0.Append('0ABEC1FFF9E3A26E7FB29F8C183023C3587E38DA0077D9B4');
O0OCO0Q0Q0.Append('763E4E4B94B2BBC194C6651E77CAF992EEAAC0232A281BF6');
O0OCO0Q0Q0.Append('B3A739C1226116820AE8DB5847A67CBEF9C9091B462D538C');
O0OCO0Q0Q0.Append('D72B03746AE77F5E62292C311562A846505DC82DB854338A');
O0OCO0Q0Q0.Append('E49F5235C95B91178CCF2DD5CACEF403EC9D1810C6272B04');
O0OCO0Q0Q0.Append('5B3B71F9DC6B80D63FDD4A8E9ADB1E6962A69526D43161C1');
O0OCO0Q0Q0.Append('A41D570D7938DAD4A40E329CD0E40E65FFFFFFFFFFFFFFFF');
OO0CO0Q0Q0:=TBigInteger.Create(string(O0OCO0Q0Q0.ToString),16);
finally
O0OCO0Q0Q0.Free;
end;
O0OCO0Q0Q0:=StringBuilder.Create;
try
O0OCO0Q0Q0.Append('FFFFFFFFFFFFFFFFADF85458A2BB4A9AAFDC5620273D3CF1');
O0OCO0Q0Q0.Append('D8B9C583CE2D3695A9E13641146433FBCC939DCE249B3EF9');
O0OCO0Q0Q0.Append('7D2FE363630C75D8F681B202AEC4617AD3DF1ED5D5FD6561');
O0OCO0Q0Q0.Append('2433F51F5F066ED0856365553DED1AF3B557135E7F57C935');
O0OCO0Q0Q0.Append('984F0C70E0E68B77E2A689DAF3EFE8721DF158A136ADE735');
O0OCO0Q0Q0.Append('30ACCA4F483A797ABC0AB182B324FB61D108A94BB2C8E3FB');
O0OCO0Q0Q0.Append('B96ADAB760D7F4681D4F42A3DE394DF4AE56EDE76372BB19');
O0OCO0Q0Q0.Append('0B07A7C8EE0A6D709E02FCE1CDF7E2ECC03404CD28342F61');
O0OCO0Q0Q0.Append('9172FE9CE98583FF8E4F1232EEF28183C3FE3B1B4C6FAD73');
O0OCO0Q0Q0.Append('3BB5FCBC2EC22005C58EF1837D1683B2C6F34A26C1B2EFFA');
O0OCO0Q0Q0.Append('886B4238611FCFDCDE355B3B6519035BBC34F4DEF99C0238');
O0OCO0Q0Q0.Append('61B46FC9D6E6C9077AD91D2691F7F7EE598CB0FAC186D91C');
O0OCO0Q0Q0.Append('AEFE130985139270B4130C93BC437944F4FD4452E2D74DD3');
O0OCO0Q0Q0.Append('64F2E21E71F54BFF5CAE82AB9C9DF69EE86D2BC522363A0D');
O0OCO0Q0Q0.Append('ABC521979B0DEADA1DBF9A42D5C4484E0ABCD06BFA53DDEF');
O0OCO0Q0Q0.Append('3C1B20EE3FD59D7C25E41D2B669E1EF16E6F52C3164DF4FB');
O0OCO0Q0Q0.Append('7930E9E4E58857B6AC7D5F42D69F6D187763CF1D55034004');
O0OCO0Q0Q0.Append('87F55BA57E31CC7A7135C886EFB4318AED6A1E012D9E6832');
O0OCO0Q0Q0.Append('A907600A918130C46DC778F971AD0038092999A333CB8B7A');
O0OCO0Q0Q0.Append('1A1DB93D7140003C2A4ECEA9F98D0ACC0A8291CDCEC97DCF');
O0OCO0Q0Q0.Append('8EC9B55A7F88A46B4DB5A851F44182E1C68A007E5E0DD902');
O0OCO0Q0Q0.Append('0BFD64B645036C7A4E677D2C38532A3A23BA4442CAF53EA6');
O0OCO0Q0Q0.Append('3BB454329B7624C8917BDD64B1C0FD4CB38E8C334C701C3A');
O0OCO0Q0Q0.Append('CDAD0657FCCFEC719B1F5C3E4E46041F388147FB4CFDB477');
O0OCO0Q0Q0.Append('A52471F7A9A96910B855322EDB6340D8A00EF092350511E3');
O0OCO0Q0Q0.Append('0ABEC1FFF9E3A26E7FB29F8C183023C3587E38DA0077D9B4');
O0OCO0Q0Q0.Append('763E4E4B94B2BBC194C6651E77CAF992EEAAC0232A281BF6');
O0OCO0Q0Q0.Append('B3A739C1226116820AE8DB5847A67CBEF9C9091B462D538C');
O0OCO0Q0Q0.Append('D72B03746AE77F5E62292C311562A846505DC82DB854338A');
O0OCO0Q0Q0.Append('E49F5235C95B91178CCF2DD5CACEF403EC9D1810C6272B04');
O0OCO0Q0Q0.Append('5B3B71F9DC6B80D63FDD4A8E9ADB1E6962A69526D43161C1');
O0OCO0Q0Q0.Append('A41D570D7938DAD4A40E329CCFF46AAA36AD004CF600C838');
O0OCO0Q0Q0.Append('1E425A31D951AE64FDB23FCEC9509D43687FEB69EDD1CC5E');
O0OCO0Q0Q0.Append('0B8CC3BDF64B10EF86B63142A3AB8829555B2F747C932665');
O0OCO0Q0Q0.Append('CB2C0F1CC01BD70229388839D2AF05E454504AC78B758282');
O0OCO0Q0Q0.Append('2846C0BA35C35F5C59160CC046FD8251541FC68C9C86B022');
O0OCO0Q0Q0.Append('BB7099876A460E7451A8A93109703FEE1C217E6C3826E52C');
O0OCO0Q0Q0.Append('51AA691E0E423CFC99E9E31650C1217B624816CDAD9A95F9');
O0OCO0Q0Q0.Append('D5B8019488D9C0A0A1FE3075A577E23183F81D4A3F2FA457');
O0OCO0Q0Q0.Append('1EFC8CE0BA8A4FE8B6855DFE72B0A66EDED2FBABFBE58A30');
O0OCO0Q0Q0.Append('FAFABE1C5D71A87E2F741EF8C1FE86FEA6BBFDE530677F0D');
O0OCO0Q0Q0.Append('97D11D49F7A8443D0822E506A9F4614E011E2A94838FF88C');
O0OCO0Q0Q0.Append('D68C8BB7C5C6424CFFFFFFFFFFFFFFFF');
OQ0CO0Q0Q0:=TBigInteger.Create(string(O0OCO0Q0Q0.ToString),16);
finally
O0OCO0Q0Q0.Free;
end;
end;
initialization
{$IFDEF DEBUG}
Assert((integer(High(OOQOQOQOQ0))+1+integer(High(OCCCQQQ0Q0))+1)=integer(High(OCCOQQQ0Q0))+1);
{$ENDIF}
OC0CO0Q0Q0;
finalization
OOCQO0Q0Q0.Free;
OQCQO0Q0Q0.Free;
OCCQO0Q0Q0.Free;
O00CO0Q0Q0.Free;
OO0CO0Q0Q0.Free;
OQ0CO0Q0Q0.Free;
end.
